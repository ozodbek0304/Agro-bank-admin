"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const defaults_1 = require("../../YagrCore/defaults");
const DEFAULT_WEEKEND_COLOR = 'rgb(250, 255, 0, 0.38)';
/**
 * This plugin highlights weekend ranges using native PlotLines plugin
 */
function WeekendsPlugin({ color = DEFAULT_WEEKEND_COLOR, label, predicate, } = {}) {
    return (yagr) => {
        var _a, _b;
        const weekends = [];
        let inWeekend = false;
        for (const ts of yagr.config.timeline) {
            let isWeekend = false;
            if (predicate) {
                isWeekend = predicate(ts);
            }
            else {
                const date = new Date(ts / (((_a = yagr.config.chart) === null || _a === void 0 ? void 0 : _a.timeMultiplier) || defaults_1.TIME_MULTIPLIER));
                const dayOfWeek = date.getDay();
                isWeekend = dayOfWeek === 6 || dayOfWeek === 0;
            }
            if (isWeekend && !inWeekend) {
                weekends.push([ts, ts]);
                inWeekend = true;
            }
            if (!isWeekend && inWeekend) {
                weekends[weekends.length - 1][1] = ts;
                inWeekend = false;
            }
        }
        (_b = yagr.plugins.plotLines) === null || _b === void 0 ? void 0 : _b.add(weekends.map((val) => ({
            scale: 'x',
            value: val,
            color,
            label: label !== null && label !== void 0 ? label : yagr.utils.i18n('weekend')
        })));
        return {
            uplot: {
                hooks: {},
            },
        };
    };
}
exports.default = WeekendsPlugin;
if (typeof window !== 'undefined') {
    Object.assign(window, { WeekendsPlugin });
}

/**
* Copyright (c) 2024, Yandex LLC
* All rights reserved. (MIT Licensed)
*
* Yagr@4.3.0
* High-performance HTML5 canvas chart renderer based on uPlot
* https://github.com/gravity-ui/yagr
*/

"use strict";var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__export=(r,l)=>{for(var t in l)__defProp(r,t,{get:l[t],enumerable:!0})},__copyProps=(r,l,t,u)=>{if(l&&typeof l=="object"||typeof l=="function")for(let f of __getOwnPropNames(l))!__hasOwnProp.call(r,f)&&f!==t&&__defProp(r,f,{get:()=>l[f],enumerable:!(u=__getOwnPropDesc(l,f))||u.enumerable});return r},__toCommonJS=r=>__copyProps(__defProp({},"__esModule",{value:!0}),r),labels_exports={};__export(labels_exports,{default:()=>YagrLabelsPlugin}),module.exports=__toCommonJS(labels_exports);var px=r=>r+"px",html=(r,l={},t)=>{const u=document.createElement(r);return Object.keys(l).forEach(f=>{const x=l[f];u.setAttribute(f,typeof x=="object"?Object.entries(x).map(([o,n])=>`${o}:${n}`).join(";"):x)}),t&&(typeof t=="string"?u.innerHTML=t:u.appendChild(t)),u};function isNil(r){return r==null}var defaultPositionTop=(r,l,t,u)=>[r.valToPos(l,"x"),r.valToPos(t,u)-15],getId=()=>r=>String(r);function renderAxisLabel({yagr:r,scaleKey:l,x:t,y:u,className:f="",render:x,onRender:o,onDestroy:n,label:d}){const e=r.root.querySelector(".u-over");if(x)return x(r,t,u,d);const c=d.label?typeof d.label=="function"?d.label(d):d.label:"",s=html("div",{class:`yagr-label ${f}`,style:{visibility:"hidden"}},c??d.value.toString());return e.append(s),l==="x"?(s.style.top=px(u-s.clientHeight/2),s.style.left=px(t-s.clientWidth/2)):(r.config.axes[l]?.side==="right"?s.style.left=px(t-s.clientWidth/2):s.style.left=px(t),s.style.top=px(u-s.clientHeight/2)),s.style.visibility="visible",o&&o(s),()=>{n&&n(s),s.remove()}}function renderPointLabel({yagr:r,label:l,x:t,y:u,className:f="",shifts:x={},onRender:o,onDestroy:n}){const d=r.root.querySelector(".u-over"),e=html("div",{class:`yagr-label ${f}`,style:{top:px(u+(x.top||0)),left:px(t+(x.left||0))}},l);return d.append(e),o&&o(e),e.style.left=px(Number(e.style.left.replace("px",""))-e.clientWidth/2),()=>{e.remove(),n&&n(e)}}function drawLabelOnPoint(r,l,t,u,f,x,o,n){const d=r.uplot.data[0][t],e=r.uplot.data[l][t];if(isNil(e)||!u||!f)return;const c=x(d),s=o(e),a=typeof f.label=="function"?f.label(d,e,t):f.label||`(${c}, ${s})`;if(f.render){const y=f.render(r,l,t,u,f);y&&n&&n(y,a??"",l);return}if(!a||isNil(e))return;const[i,v]=f.position?f.position(d,e):defaultPositionTop(r.uplot,d,e,u),p=r.uplot.data[l][t-1],w=r.uplot.data[l][t+1],m=p!=null&&w!==null&&w!==void 0&&e<p&&e<w?"_bottom":"_top";let L=()=>{};f.show!==!1&&(L=renderPointLabel({yagr:r,label:a,x:i,y:v,className:m,onRender:f.onRender,onDestroy:f.onDestroy})),n&&n(L,a,l)}function seriesDrawBasedLabels(r,l,t){const u={},f=[],x=[],o={};l.drawClear=l.drawClear||[],l.draw=l.draw||[],l.setCursor=l.setCursor||[],l.setSeries=l.setSeries||[];function n(e,c){const s=[];if(c)s.push(...c);else for(let a=1;a<e.series.length;a++){const i=e.series[a];if(t.scales?.draw){const v=i.scale;v&&t.scales?.draw[v]&&s.push(a)}t.series?.draw&&t.series?.draw[i.id]&&s.push(a)}for(const a of s){const i=e.series[a];if(!i.show||i._focus===!1)continue;const{scale:v="y",min:p,max:w}=i,m=e.series[0],L=t.series?.draw?.[i.id]||t.scales?.draw?.[i.scale],y=(e.axes.find(A=>A.scale===v)?.getFormatter||getId)(w-p),P=(e.axes.find(A=>A.scale==="x")?.getFormatter||getId)(m.max-m.min);let h=0;for(;h<e.data[0].length;)drawLabelOnPoint(r,a,h,v,L,P,y,(A,C)=>{u[a]=u[a]||[],u[a].push(A),o[a]=o[a]||[],o[a].push({idx:h,label:C})}),h++}}function d(e,c){const s=[];for(let a=1;a<e.series.length;a++){const i=e.series[a];if(t.scales?.cursor){const v=i.scale;v&&t.scales.cursor[v]&&s.push(a)}t.series?.cursor&&t.series.cursor[i.id]&&s.push(a)}for(const a of s){const i=e.series[a];if(!i.show||i._focus===!1)continue;const{scale:v="y",min:p,max:w}=i,m=e.series[0],L=t.series?.cursor?.[i.id]||t.scales?.cursor?.[i.scale],y=(e.axes.find(h=>h.scale===v)?.getFormatter||getId)(w-p),P=(e.axes.find(h=>h.scale==="x")?.getFormatter||getId)(m.max-m.min);drawLabelOnPoint(r,a,c,v,L,P,y,h=>{f.push(h)})}}return t.series?.focus&&l.setSeries.push((e,c,s)=>{if(c===null){x?.forEach(v=>v());return}const a=e.series[c],i=t.series?.focus?.[a.id];if(!i){x?.forEach(v=>v());return}if(a.show&&s.focus===!0){const{scale:v="y",min:p,max:w}=a,m=e.series[0],L=(e.axes.find(h=>h.scale===v)?.getFormatter||getId)(w-p),y=(e.axes.find(h=>h.scale==="x")?.getFormatter||getId)(m.max-m.min);let P=0;for(;P<e.data[0].length;)drawLabelOnPoint(r,c,P,v,i,y,L,h=>{x.push(h)}),P++}else x?.forEach(v=>v())}),(t.scales?.draw||t.series?.draw)&&(l.draw.push(e=>{n(e)}),l.drawClear.push(()=>{Object.values(u).forEach(e=>e.forEach(c=>c())),Object.keys(u).forEach(e=>delete u[Number(e)])})),(t.scales?.cursor||t.series?.cursor)&&l.setCursor.push(e=>{f.forEach(s=>s());const{idx:c}=e.cursor;isNil(c)||d(e,c)}),{getSeriesLabels:()=>o,getCurrentSeriesLabels:()=>{const e=r.uplot.cursor;return e.idx===null?{}:Object.entries(o).reduce((c,[s,a])=>(c[Number(s)]=a.find(i=>i.idx===e.idx),c),{})}}}function plotLinesDrawBasedLabels(r,l,t){let u=[],f=[];l.draw=l.draw||[],l.drawClear=l.drawClear||[],l.setCursor=l.setCursor||[];function x(o,n,d){const e=[];for(const[c,s]of Object.entries(o||{})){const a=(r.plugins.plotLines?.get()||[]).filter(i=>i.scale===c);a.length&&e.push({bands:a,labelOptions:s})}e.length&&e.forEach(({bands:c,labelOptions:s})=>{c.forEach(a=>{if(d?.(a)===!1)return;const[i,v]=a.scale==="x"?[Array.isArray(a.value)?a.value[0]:a.value,r.uplot.posToVal(0,"y")]:[r.uplot.posToVal(0,"x"),Array.isArray(a.value)?a.value[0]:a.value],[p,w]=s.position?s.position(i,v):defaultPositionTop(r.uplot,i,v,a.scale||"y"),m=typeof s.label=="function"?s.label(a):s.label||a.label;if(s.render){const L=s.render(r,a,p,w,s);L&&u.push(L);return}m&&s.show!==!1&&n.push(renderPointLabel({yagr:r,label:m,x:p,y:w}))})})}return t.plotLines?.cursor&&l.setCursor.push(o=>{f.forEach(e=>e()),f=[];const{left:n,top:d}=o.cursor;!isNil(n)&&!isNil(d)&&n>=0&&d>=0&&x(t.plotLines?.cursor,f,e=>{const c=r.uplot.posToVal(n,"x"),[s,a]=Array.isArray(e.value)?e.value:[e.value,e.value],[i,v]=Array.isArray(e.value)?[e.value[0],e.value[1]]:[e.value,e.value];if(e.scale==="x"){if(c>=s&&c<=a)return!0}else{const p=r.uplot.posToVal(d,e.scale);if(p>=i&&p<=v)return!0}return!1})}),t.plotLines?.draw&&(l.draw.push(()=>{x(t.plotLines?.draw,u)}),l.drawClear.push(()=>{u.forEach(o=>o()),u=[]})),{getPlotLinesLabels:()=>(r.plugins.plotLines?.get()||[]).filter(n=>t.plotLines?.draw?.[n.scale||"y"]).map(n=>({band:n,label:t.plotLines?.draw?.[n.scale||"y"]?.label||n.label})),getCurrentPlotLinesLabels:()=>{const o=r.uplot.cursor;if(!o.left||!o.top||o.left<0||o.top<0)return[];const n=[],{left:d,top:e}=o,c=r.uplot.posToVal(d,"x");return r.plugins.plotLines?.get().forEach(s=>{const[a,i]=Array.isArray(s.value)?s.value:[s.value,s.value],[v,p]=Array.isArray(s.value)?[s.value[0],s.value[1]]:[s.value,s.value];if(s.scale==="x")c>=a&&c<=i&&n.push({band:s,label:s.label});else{const w=r.uplot.posToVal(e,s.scale);w>=v&&w<=p&&n.push({band:s,label:s.label})}}),n}}}function axisDrawBasedLabels(r,l,t){let u=[];function f(x){u.forEach(o=>o()),u=[],Object.entries(t.axes||{}).forEach(([o,n])=>{x.axes.find(e=>e.scale===o)&&n.forEach(e=>{let c,s;o==="x"?(c=x.valToPos(e.value,"x"),s=x.valToPos(0,"y")):(r.config.axes[o]?.side==="right"?c=x.valToPos(x.data[0][x.data[0].length-1],"x"):c=x.valToPos(x.data[0][0],"x"),s=x.valToPos(e.value,"y")),u.push(renderAxisLabel({yagr:r,scaleKey:o,x:c,y:s,render:e.render,label:e,className:e.className,onRender:e.onRender,onDestroy:e.onDestroy}))})})}return l.drawAxes=l.drawAxes||[],t.axes&&l.drawAxes.push(f),{getAxisLabels(){return t.axes||{}},getCurrentAxisLabels(x){const o=r.uplot.cursor;if(!o)return{};const{left:n,top:d}=o;if(isNil(n)||isNil(d)||n<0||d<0)return{};const e={};return Object.entries(t.axes||{}).forEach(([c,s])=>{r.uplot.axes.find(i=>i.scale===c)&&s.forEach(i=>{let v,p;c==="x"?(v=r.uplot.posToVal(n,"x"),Math.abs(v-i.value)<x.x&&(e[c]=e[c]||[],e[c].push(i))):(p=r.uplot.posToVal(d,"y"),Math.abs(p-i.value)<x.y&&(e[c]=e[c]||[],e[c].push(i)))})}),e}}}function YagrLabelsPlugin(r){return l=>{const t={};return{...seriesDrawBasedLabels(l,t,r),...plotLinesDrawBasedLabels(l,t,r),...axisDrawBasedLabels(l,t,r),uplot:{hooks:t}}}}typeof window<"u"&&Object.assign(window,{YagrLabelsPlugin});
//# sourceMappingURL=labels.cjs.min.js.map

import type { AxisOptions } from '../../types';
import type uPlot from 'uplot';
import type Yagr from '../../index';
import { AxisLabel, Clear, PointLabel } from './types';
export declare const defaultPositionTop: (u: uPlot, x: number, y: number, scale: string) => number[];
export declare const getId: () => (x: number) => string;
export declare function renderAxisLabel({ yagr, scaleKey, x, y, className, render, onRender, onDestroy, label, }: {
    yagr: Yagr;
    scaleKey: string;
    x: number;
    y: number;
    label: AxisLabel;
    className?: string;
    render?: AxisLabel['render'];
    onRender?: (e: HTMLElement) => void;
    onDestroy?: (e: HTMLElement) => void;
}): Clear;
export declare function renderPointLabel({ yagr, label, x, y, className, shifts, onRender, onDestroy, }: {
    yagr: Yagr;
    label: string;
    x: number;
    y: number;
    onRender?: (e: HTMLElement) => void;
    onDestroy?: (e: HTMLElement) => void;
    className?: string;
    shifts?: {
        top?: number;
        left?: number;
    };
}): () => void;
export declare function drawLabelOnPoint(yagr: Yagr, serieIdx: number, xIdx: number, scaleKey: string | undefined, labelOptions: PointLabel | undefined, xAxisFormatter: ReturnType<Required<AxisOptions>['getFormatter']>, selfAxisFormatter: ReturnType<Required<AxisOptions>['getFormatter']>, onDraw?: (clear: Clear, label: string, serieIdx: number) => void): void;

{
  "version": 3,
  "sources": ["../src/index.ts", "../src/YagrCore/defaults.ts", "../src/YagrCore/utils/colors.ts", "../src/YagrCore/utils/common.ts", "../src/YagrCore/plugins/cursor/cursor.ts", "../src/YagrCore/utils/events.ts", "../src/YagrCore/plugins/legend/legend.ts", "../node_modules/uplot/dist/uPlot.esm.js", "../src/YagrCore/locale.ts", "../src/YagrCore/plugins/tooltip/placement.ts", "../src/YagrCore/plugins/tooltip/utils.ts", "../src/YagrCore/plugins/tooltip/render.ts", "../src/YagrCore/plugins/tooltip/tooltip.ts", "../src/YagrCore/plugins/markers/index.ts", "../src/YagrCore/utils/paths.ts", "../src/YagrCore/utils/series.ts", "../src/YagrCore/utils/types.ts", "../src/YagrCore/utils/scales.ts", "../src/YagrCore/utils/axes.ts", "../src/YagrCore/utils/chart.ts", "../src/YagrCore/plugins/plotLines/plotLines.ts", "../src/YagrCore/mixins/create-options.ts", "../src/YagrCore/mixins/transform-series.ts", "../src/YagrCore/mixins/dynamic-updates.ts", "../src/YagrCore/utils/mixins.ts", "../src/YagrCore/mixins/batch-updates.ts", "../src/YagrCore/index.ts"],
  "sourcesContent": ["export * from './YagrCore/types';\nexport * from './YagrCore/plugins/tooltip/types';\n\nexport {CursorOptions} from './YagrCore/plugins/cursor/cursor';\nexport {LegendOptions} from './YagrCore/plugins/legend/legend';\n\nimport * as DEF from './YagrCore/defaults';\nexport const defaults = DEF;\n\nimport Yagr from './YagrCore/index';\n\nif (typeof window !== 'undefined') {\n    Object.assign(window, {\n        Yagr,\n    });\n}\n\nexport default Yagr;\n", "import uPlot, {Padding} from 'uplot';\nimport {YagrTheme} from './types';\nimport type ColorParser from './utils/colors';\n\nexport const DEFAULT_X_SERIE_NAME = 'date';\nexport const DEFAULT_X_SCALE = 'x';\nexport const DEFAULT_Y_SCALE = 'y';\nexport const DEFAULT_FOCUS_ALPHA = 0.3;\nexport const DEFAULT_CANVAS_PIXEL_RATIO = typeof window === 'undefined' ? 1 : window.devicePixelRatio;\nexport const DEFAULT_MAX_TICKS = 5;\nexport const DEFAULT_Y_AXIS_OFFSET = 0.05;\nexport const DEFAULT_SCALE_MIN_RANGE = 0.01;\nexport const DEFAULT_LOGARITHMIC_MIN_SCALE_VALUE = 0.001;\nexport const DEFAULT_POINT_SIZE = DEFAULT_CANVAS_PIXEL_RATIO >= 2 ? 4 : 2;\n\nexport const DEFAULT_SYNC_KEY = 'sync';\nexport const DEFAULT_TITLE_FONT_SIZE = 14;\n\nexport const LIGHT_DEFAULT_LINE_COLOR = '#222222';\nexport const DARK_DEFAULT_LINE_COLOR = '#eeeeee';\n\nexport const DEFAULT_AXIS_FONT_SIZE = 11;\nexport const AXIS_LABEL_FONT = 'normal 11px Lucida Grande, Arial, Helvetica, sans-serif';\nexport const AXIS_VALUES_FONT = '11px Lucida Grande, Arial, Helvetica, sans-serif';\n\nexport const Y_AXIS_TICK_GAP = 6;\nexport const DEFAULT_Y_AXIS_SIZE = 12;\nexport const DEFAULT_Y_AXIS_PADDING = 12;\nexport const DEFAULT_Y_AXIS_LABEL_PADDING = 2;\nexport const Y_AXIS_SIZE = (self: uPlot, values: string[], axisIdx: number) => {\n    if (!values) {\n        return DEFAULT_Y_AXIS_SIZE;\n    }\n\n    const longesValue = values.reduce((l, c) => (l.length > c.length ? l : c));\n    const {ctx} = self;\n    ctx.save();\n    const axis = self.axes[axisIdx];\n\n    ctx.font = axis.font ? axis.font[0] : AXIS_VALUES_FONT;\n    const {width: textSize} = ctx.measureText(longesValue);\n    ctx.restore();\n\n    let labelSize = 0;\n    if (axis.label) {\n        labelSize = axis.labelSize || DEFAULT_AXIS_FONT_SIZE;\n\n        ctx.font = axis.labelFont ? axis.labelFont[0] : AXIS_LABEL_FONT;\n        const {fontBoundingBoxAscent: size} = ctx.measureText(axis.label);\n        labelSize = size;\n        ctx.restore();\n    }\n\n    return labelSize\n        ? textSize / DEFAULT_CANVAS_PIXEL_RATIO + labelSize / DEFAULT_CANVAS_PIXEL_RATIO + DEFAULT_Y_AXIS_LABEL_PADDING\n        : textSize / DEFAULT_CANVAS_PIXEL_RATIO + DEFAULT_Y_AXIS_PADDING;\n};\nexport const Y_AXIS_LABEL_SIZE = 11;\n\nexport const SECOND = 1000;\nexport const MINUTE = SECOND * 60;\nexport const HOUR = MINUTE * 60;\nexport const DAY = HOUR * 24;\nexport const YEAR = DAY * 365;\nexport const DECADE = YEAR * 10;\n\nexport const X_AXIS_TICK_GAP = 6;\nexport const X_AXIS_SIZE = 32;\nexport const X_AXIS_SPACE = 80;\nexport const X_AXIS_INCRS = [\n    // seconds divisors (# os ms)\n    1,\n    10,\n    50,\n    100,\n    200,\n    500,\n    // minute divisors\n    SECOND,\n    SECOND * 2,\n    SECOND * 5,\n    SECOND * 10,\n    SECOND * 15,\n    SECOND * 30,\n    // hour divisors\n    MINUTE,\n    MINUTE * 5,\n    MINUTE * 10,\n    MINUTE * 30,\n    // day divisors\n    HOUR,\n    HOUR * 2,\n    HOUR * 3,\n    HOUR * 4,\n    HOUR * 6,\n    HOUR * 12,\n    // month divisors\n    DAY,\n    DAY * 2,\n    DAY * 3,\n    DAY * 5,\n    DAY * 10,\n    DAY * 15,\n    DAY * 30,\n    DAY * 60,\n    DAY * 120,\n    DAY * 180,\n    // year divisors\n    YEAR,\n    YEAR * 2,\n    YEAR * 5,\n    YEAR * 10,\n];\n\nexport const TYPES_ORDER = ['dots', 'line', 'area', 'column'];\n\nexport const BARS_DRAW_FACTOR = 0.5;\nexport const BARS_DRAW_MAX = 100;\n\nexport const PADDING_LEFT: Padding = [14, 14, 0, 4];\nexport const PADDING_RIGHT: Padding = [14, 4, 0, 14];\nexport const PADDING_BOTH: Padding = [14, 4, 0, 4];\n\nexport const SERIE_COLOR = 'rgba(0, 0, 0, 1)';\nexport const SERIE_LINE_WIDTH = 2;\nexport const SERIE_AREA_BORDER_COLOR = 'rgba(0, 0, 0, 0.2)';\nexport const SERIE_AREA_BORDER_WIDTH = 1;\n\nexport const MARKER_DIAMETER = 8;\nexport const CURSOR_STYLE = '1px solid #ffa0a0';\n\nexport const MIN_SELECTION_WIDTH = 15;\n\nconst LIGHTEN_COLOR_SHIFT = 0.68;\nconst DARKEN_COLOR_SHIFT = -0.6;\n\nexport default class ThemedDefaults {\n    theme?: YagrTheme;\n    colors: ColorParser;\n\n    constructor(colors: ColorParser, theme: YagrTheme = 'light') {\n        this.setTheme(theme);\n        this.colors = colors;\n    }\n\n    setTheme(theme: YagrTheme) {\n        this.theme = theme;\n    }\n\n    get GRID() {\n        return {\n            show: true,\n            stroke: () => this.colors.parse('--yagr-grid'),\n            width: 1,\n        };\n    }\n\n    get X_AXIS_TICKS() {\n        return {size: 8, ...this.GRID};\n    }\n\n    get Y_AXIS_TICKS() {\n        return {size: 6, ...this.GRID};\n    }\n\n    get AXIS_STROKE() {\n        return this.colors.parse('--yagr-axis-stroke');\n    }\n\n    get BACKGROUND() {\n        return this.colors.parse('--yagr-background');\n    }\n\n    get SHIFT() {\n        return this.theme?.startsWith('light') ? LIGHTEN_COLOR_SHIFT : DARKEN_COLOR_SHIFT;\n    }\n\n    get DEFAULT_LINE_COLOR() {\n        return this.theme?.startsWith('light') ? LIGHT_DEFAULT_LINE_COLOR : DARK_DEFAULT_LINE_COLOR;\n    }\n}\n\nexport const TOOLTIP_Y_OFFSET = 24;\nexport const TOOLTIP_X_OFFSET = 24;\nexport const TOOLTIP_DEFAULT_MAX_LINES = 10;\nexport const TIME_MULTIPLIER = 1;", "import UPlot, {Series} from 'uplot';\nimport type Yagr from '../index';\n\nconst DEFAULT_SHADE_COLOR = [0, 0, 0, 0.6];\n\n/**\n * This class implements:\n *  - color parsing from RGBA, HEX or CSS color name\n *  - linear shade/lighten @see https://github.com/PimpTrizkit/PJs/wiki/12.-Shade,-Blend-and-Convert-a-Web-Color-(pSBC.js)#stackoverflow-archive-begin\n */\nexport default class ColorParser {\n    static parseRgba(rgbaColor: string) {\n        const m = rgbaColor.match(/rgba?\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,?\\s*(\\d+\\.?\\d*)?\\s*\\)/);\n        return m ? [m[1], m[2], m[3], m[4] || 1].map(Number) : null;\n    }\n\n    private context?: HTMLElement;\n\n    parse(color = '000') {\n        const isVar = color.startsWith('var(--');\n        let res = color,\n            pure = true,\n            prop;\n        const ctx = this.context as HTMLElement;\n\n        const pColor = ctx.style.color;\n\n        if (isVar || color.startsWith('--')) {\n            pure = false;\n            prop = isVar ? color.slice(4, -1) : color;\n        } else if (!color.startsWith('#') && !color.startsWith('rgb')) {\n            ctx.style.color = color;\n            prop = 'color';\n            pure = false;\n        }\n\n        res = pure ? res : getComputedStyle(ctx).getPropertyValue(prop as string);\n        ctx.style.color = pColor;\n        return res;\n    }\n\n    setContext(context: HTMLElement) {\n        this.context = context;\n    }\n\n    rgba(color: number[]) {\n        return `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${color[3]})`;\n    }\n\n    toRgba(color: string, fallbackRgba: number[]) {\n        return ColorParser.parseRgba(this.parse(color)) || fallbackRgba;\n    }\n\n    shade([r, g, b, a]: number[], value: number) {\n        const direction = value < 0;\n        const tOffset = direction ? 0 : 255 * value;\n        const transition = direction ? 1 + value : 1 - value;\n        const _r = Math.round(r * transition + tOffset);\n        const _g = Math.round(g * transition + tOffset);\n        const _b = Math.round(b * transition + tOffset);\n        return 'rgba(' + _r + ',' + _g + ',' + _b + ',' + a + ')';\n    }\n}\n\nexport const getFocusedColor = (y: Yagr, seriesIdx: number) => {\n    const shift = y.utils.theme.SHIFT;\n    const s = y.uplot.series[seriesIdx];\n    const mainColor = ColorParser.parseRgba(s.color) || DEFAULT_SHADE_COLOR;\n    return y.utils.colors.shade(mainColor, shift);\n};\n\nexport const getSerieFocusColors = (y: Yagr, field: keyof Series) => {\n    return (u: UPlot, idx: number) => {\n        const s = u.series[idx];\n        return s._focus === false ? s.getFocusedColor(y, idx) : (s[field] as string);\n    };\n};\n", "/* eslint-disable no-nested-ternary */\n\nimport {Series} from 'uplot';\nimport {DataSeriesExtended, DataSeries, SnapToValue, ProcessingSettings, ProcessingInterpolation} from '../types';\nimport {TooltipSection} from '../plugins/tooltip/types';\n\n/**\n * Finds index of point in ranges of Y-Axis values.\n * Returns index of starting range when idx < Y <= idx next\n *\n * @param {TooltipSection} section - tooltip section\n * @param {number} value - Y value of cursor\n * @param {boolean} stickToRanges - if true, then always return index of range\n * @returns {number | null}\n */\nexport const findInRange = (section: TooltipSection, value: number, stickToRanges = true): number | null => {\n    const positive = value >= 0;\n    let max = -Infinity,\n        maxIdx = null;\n    let min = Infinity,\n        minIdx = null;\n\n    const diffs: Array<number | null> = [];\n    let result: number | null = null;\n\n    for (let r = section.rows.length - 1; r >= 0; r--) {\n        const row = section.rows[r];\n        const {displayY: y, rowIdx} = row;\n\n        let diff: number | null;\n\n        if (y !== null) {\n            if (y > max) {\n                max = y;\n                maxIdx = row.rowIdx;\n            }\n\n            if (y < min) {\n                min = y;\n                minIdx = row.rowIdx;\n            }\n        }\n\n        if (y === null || (positive ? y < 0 : y >= 0)) {\n            diff = null;\n        } else if (positive) {\n            diff = value > y ? null : y - value;\n        } else {\n            diff = value < y ? null : Math.abs(y - value);\n        }\n\n        const currentMin = result === null ? Infinity : (diffs[result] as number);\n        const nextMin = diff === null ? currentMin : Math.min(currentMin, diff);\n\n        if ((diff !== null && currentMin === diff) || nextMin !== currentMin) {\n            result = rowIdx;\n        }\n    }\n\n    if (result === null && stickToRanges) {\n        return value >= max ? maxIdx : value <= min ? minIdx : null;\n    }\n\n    return result;\n};\n\n/* Gets sum of all values of given data index by all series */\nexport const getSumByIdx = (seriesOptions: Series[], idx: number, scale: string) => {\n    let sum = 0;\n    let i = 0;\n    while (i < seriesOptions.length) {\n        const seriesIdx = seriesOptions.length - i - 1;\n        const opts = seriesOptions[seriesIdx];\n        const seriesValues = opts.$c;\n        i += 1;\n        if (opts.scale !== scale || opts.show === false) {\n            continue;\n        }\n        const value = seriesValues[idx];\n        sum += typeof value === 'number' ? value : 0;\n    }\n    return sum;\n};\n\n/**\n * Finds index of nearest non-null point in range of Y-Axis values\n *\n * @param {TooltipSection} section\n * @param {number} value\n * @returns {number | null}\n */\nexport const findSticky = (section: TooltipSection, value: number): number | null => {\n    let nearestIndex;\n    let nearestValue;\n\n    let i = 0;\n    while (!nearestValue && i < section.rows.length) {\n        const r = section.rows[i].displayY;\n        if (r !== null) {\n            nearestIndex = i;\n            nearestValue = Math.abs(r - (value || 0));\n        }\n        i += 1;\n    }\n\n    if (!nearestValue || nearestIndex === undefined) {\n        return null;\n    }\n\n    for (i = nearestIndex + 1; i < section.rows.length; i++) {\n        const v = section.rows[i].displayY;\n\n        if (v === null) {\n            continue;\n        }\n\n        const diff = Math.abs(v - value);\n\n        if (nearestValue > diff) {\n            nearestValue = diff;\n            nearestIndex = i;\n        }\n    }\n\n    return nearestIndex;\n};\n\nexport const getUnitSuffix = (value: number): [number, string] => {\n    if (value >= 1e18) {\n        return [1e18, 'E'];\n    } else if (value >= 1e15) {\n        return [1e15, 'P'];\n    } else if (value >= 1e12) {\n        return [1e12, 'T'];\n    } else if (value >= 1e9) {\n        return [1e9, 'G'];\n    } else if (value >= 1e6) {\n        return [1e6, 'M'];\n    } else if (value >= 1e3) {\n        return [1e3, 'K'];\n    }\n    return [1, ''];\n};\n\n/* Number.toFixed() wihout rounding */\nexport function toFixed(num: number, fixed: number) {\n    if (fixed === 0) {\n        return parseInt(num as unknown as string);\n    }\n\n    if (Number.isInteger(num)) {\n        return num + '.' + '0'.repeat(fixed);\n    }\n\n    const [int, frac] = num.toString().split('.');\n    return frac.length >= fixed ? `${int}.${frac.slice(0, fixed)}` : `${int}.${frac}${'0'.repeat(fixed - frac.length)}`;\n}\n\n/**\n * Finds nearest non-null value's index in data series by given direction\n *\n * @param {DataSeriesExtended} data - Series data\n * @param {Series} series - Series options\n * @param {number} idx - cursor index\n * @param {SnapToValue | false} defaultSnapTo - default value for direction\n * @param {unknown} skipValue - value to skip\n * @returns {number}\n */\nexport function findDataIdx(\n    data: DataSeriesExtended,\n    series: Series,\n    idx: number,\n    defaultSnapTo: SnapToValue | false = 'closest',\n    skipValue: unknown = null,\n) {\n    let corL = idx,\n        corR = idx;\n\n    const direction = series.snapToValues ?? defaultSnapTo;\n\n    if (direction === false) {\n        return idx;\n    }\n\n    if (direction === 'left' || direction === 'closest') {\n        for (let i = idx - 1; i >= 0; i--) {\n            if (data[i] !== skipValue) {\n                corL = i;\n                break;\n            }\n        }\n    }\n\n    if (direction === 'right' || direction === 'closest') {\n        for (let i = idx + 1; i < data.length; i++) {\n            if (data[i] !== skipValue) {\n                corR = i;\n                break;\n            }\n        }\n    }\n\n    if (direction === 'left') {\n        return corL;\n    }\n    if (direction === 'right') {\n        return corR;\n    }\n\n    return corR - idx > idx - corL ? corL : corR;\n}\n\n/*\n * Interpolation function\n */\nconst interpolateImpl = (\n    timeline: number[],\n    y1: number | null,\n    y2: number | null,\n    x1: number,\n    x2: number,\n    xIdx: number,\n    iGroup: number[],\n    type: ProcessingInterpolation['type'] | number = 'linear',\n) => {\n    let result = null;\n    const x = timeline[xIdx];\n\n    switch (type) {\n        case 'linear': {\n            if (y1 === null || y2 === null) {\n                return null;\n            }\n\n            result = y1 + ((x - x1) * (y2 - y1)) / (x2 - x1);\n\n            if (isNaN(result) || Math.abs(result) === Infinity) {\n                result = null;\n            }\n            break;\n        }\n        case 'previous': {\n            result = y1;\n            break;\n        }\n        case 'next': {\n            result = y2;\n            break;\n        }\n        case 'left': {\n            result = iGroup[iGroup.length - 1] === timeline.length - 1 || y2 === null ? null : y1;\n            break;\n        }\n        case 'right': {\n            result = iGroup[0] === 0 ? null : y2;\n            break;\n        }\n        case 'closest': {\n            const lD = Math.abs(x1 - timeline[xIdx]);\n            const rD = Math.abs(x2 - timeline[xIdx]);\n            result = lD < rD ? y1 : y2;\n            break;\n        }\n        default: {\n            result = type;\n        }\n    }\n    return result;\n};\n\nexport const genId = () => Math.random().toString(36).substr(2, 9).replace(/^\\d+/, '');\n\n/**\n * Processing data series to:\n *  1. Find missing data and interpolate these points\n *  2. Find string special values to convert them to nulls\n *\n * @param {DataSeriesExtended[]} series\n * @param {number[]} timeline\n * @param {ProcessingSettings} settings\n * @returns {DataSeries[]}\n */\nexport const preprocess = (\n    series: DataSeriesExtended[],\n    timeline: number[],\n    settings: ProcessingSettings,\n): DataSeries[] => {\n    const result = [];\n    const nullValues = settings.nullValues || {};\n    const interpolation = settings.interpolation;\n    for (let sIdx = 0; sIdx < series.length; sIdx++) {\n        const line = series[sIdx];\n        const resultLine = [];\n\n        let iGroup = [];\n        let y1 = null,\n            y2 = null,\n            x1,\n            x2;\n\n        for (let idx = 0; idx < line.length; idx++) {\n            let val = line[idx];\n\n            if (interpolation && val === interpolation.value) {\n                iGroup.push(idx);\n                continue;\n            }\n\n            if (nullValues[val as string]) {\n                val = null;\n            }\n\n            if (iGroup.length) {\n                y2 = val;\n                x2 = timeline[idx];\n                for (const iIdx of iGroup) {\n                    resultLine[iIdx] = interpolateImpl(\n                        timeline,\n                        y1 as number | null,\n                        y2 as number | null,\n                        x1 || timeline[0],\n                        x2 || timeline[timeline.length - 1],\n                        iIdx,\n                        iGroup,\n                        interpolation && interpolation.type,\n                    );\n                }\n                iGroup = [];\n            }\n\n            y1 = val;\n            x1 = timeline[idx];\n            resultLine.push(val);\n        }\n\n        y2 = null;\n\n        if (iGroup.length) {\n            for (const iIdx of iGroup) {\n                resultLine.push(\n                    interpolateImpl(\n                        timeline,\n                        y1 as number | null,\n                        y2 as number | null,\n                        x1 || timeline[0],\n                        x2 || timeline[timeline.length - 1],\n                        iIdx,\n                        iGroup,\n                        interpolation && interpolation.type,\n                    ),\n                );\n            }\n        }\n        result.push(resultLine);\n    }\n\n    return result as DataSeries[];\n};\n\nexport const exec = <T, ArgsT extends unknown[]>(s: T | ((...a: ArgsT) => T), ...args: ArgsT) => {\n    return typeof s === 'function' ? (s as (...a: ArgsT) => T)(...args) : s;\n};\n\nexport function debounce<T extends Array<unknown> = []>(func: (...args: T) => void, timeout = 300) {\n    let timer: ReturnType<typeof setTimeout>;\n\n    return (...args: T) => {\n        clearTimeout(timer);\n        timer = setTimeout(() => func(...args), timeout);\n    };\n}\n\nexport const px = (x: number) => x + 'px';\nexport const html = (\n    tag: string,\n    attrs: Record<string, string | Record<string, string>> = {},\n    content?: string | HTMLElement,\n) => {\n    const el = document.createElement(tag);\n    Object.keys(attrs).forEach((key) => {\n        const attr = attrs[key];\n        el.setAttribute(\n            key,\n            typeof attr === 'object'\n                ? Object.entries(attr)\n                      .map(([a, b]) => `${a}:${b}`)\n                      .join(';')\n                : attr,\n        );\n    });\n    if (content) {\n        if (typeof content === 'string') {\n            el.innerHTML = content;\n        } else {\n            el.appendChild(content);\n        }\n    }\n    return el;\n};\n\ntype Prev = [never, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...0[]];\ntype Join<K, P> = K extends string | number\n    ? P extends string | number\n        ? `${K}${'' extends P ? '' : '.'}${P}`\n        : never\n    : never;\nexport type Paths<T, D extends number = 10> = [D] extends [never]\n    ? never\n    : T extends object\n    ? {\n          [K in keyof T]-?: K extends string | number ? `${K}` | Join<K, Paths<T[K], Prev[D]>> : never;\n      }[keyof T]\n    : '';\n\nexport function get(obj: object, key: string) {\n    return key.split('.').reduce((acc, key) => Object.getOwnPropertyDescriptor(acc, key)?.value ?? {}, obj);\n}\n\nexport function deepIsEqual(a: unknown, b: unknown): boolean {\n    if (typeof a !== typeof b) {\n        return false;\n    }\n\n    if (typeof a === 'function' || typeof b === 'function') {\n        a = (a as Function).toString();\n        b = (b as Function).toString();\n    }\n\n    if (typeof a !== 'object' || isNil(a) || isNil(b)) {\n        return a === b;\n    }\n\n    const aObject = a as Record<string, unknown>;\n    const bObject = b as Record<string, unknown>;\n\n    const aKeys = Object.keys(aObject);\n    const bKeys = Object.keys(bObject);\n\n    if (aKeys.length !== bKeys.length) {\n        return false;\n    }\n\n    for (const key of aKeys) {\n        if (!bObject.hasOwnProperty(key)) {\n            return false;\n        }\n\n        if (!deepIsEqual(aObject[key], bObject[key])) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function asFn<T>(t: T) {\n    return typeof t === 'function' ? t : typeof t === 'undefined' ? t : () => t;\n}\n\nexport function asPlain<T>(t: T): T extends (...args: any[]) => any ? ReturnType<T> : T {\n    return typeof t === 'function' ? t() : t;\n}\n\nexport function isNil(v: unknown): v is null | undefined {\n    return v === null || v === undefined;\n}\n\nexport function inBetween(value: number, start: number, end: number) {\n    return value >= start && value <= end ? value : value < start ? start : end;\n}\n", "import {SnapToValue} from '../../types';\nimport UPlot, {Plugin, Series} from 'uplot';\n\nimport {CURSOR_STYLE, DEFAULT_X_SCALE, MARKER_DIAMETER, SERIE_COLOR} from '../../defaults';\nimport CP from '../../utils/colors';\nimport {findDataIdx, html, isNil} from '../../utils/common';\nimport type Yagr from '../..';\n\n/**\n * Options for cursor plugin.\n */\nexport interface CursorOptions {\n    /** Diameter of point markers */\n    markersSize?: number;\n    /** Snap cursor to non-null value (default: SnapToValue.Closest) */\n    snapToValues?: false | SnapToValue;\n    /** X crosshair options */\n    x?: {\n        visible?: boolean;\n        style?: string; // css style\n    };\n    /** Y crosshair options */\n    y?: {\n        visible?: boolean;\n        style?: string;\n    };\n    /** Max count of visible markers. If lines > value then markers will be hidden (default: 50) */\n    maxMarkers?: number;\n\n    /** Cursror sync key (default if true) */\n    sync?: true | string;\n\n    /** Hide cursor markers by predicate */\n    hideMarkers?: (value: number | null | string, seriesIdx: number) => boolean;\n}\n\nconst MAX_CURSORS = 50;\n\nfunction paintCursorPoint(series: Series, pt: HTMLElement, span?: HTMLElement) {\n    span ||= pt.querySelector('span') as HTMLElement;\n\n    if (!span) {\n        return;\n    }\n\n    pt.style.background = `${series.color}`;\n    span.style.background = series.color || SERIE_COLOR;\n    const colorRgba = CP.parseRgba(series.color) || [256, 256, 256, 0];\n    pt.style.boxShadow = `0px 0px 0px 1px rgba(${colorRgba[0]}, ${colorRgba[1]}, ${colorRgba[2]}, 0.5)`;\n}\n\n/*\n * Draws HTML points for cursor to transform\n */\nexport function cursorPoint(u: UPlot, seriesIndex: number) {\n    const serie = u.series[seriesIndex];\n    const span = html('span');\n    const pt = html(\n        'div',\n        {\n            class: 'yagr-point',\n            'data-idx': String(seriesIndex),\n        },\n        serie.empty ? undefined : span,\n    );\n\n    // @TODO possibly not to render at all. Requires PR into uPlot\n    if (serie.empty) {\n        pt.style.display = 'none';\n        return pt;\n    }\n\n    paintCursorPoint(serie, pt, span);\n\n    return pt;\n}\n\nfunction getPointsByIdx(over: HTMLDivElement, idx?: number) {\n    return idx === undefined\n        ? (Array.from(over.querySelectorAll('.yagr-point')) as HTMLDivElement[])\n        : [over.querySelector(`.yagr-point[data-idx=\"${idx}\"]`) as HTMLDivElement];\n}\n\n/*\n * Cursor plugin responsible for drawing cursor points and crosshairs,\n * and for syncing cursors.\n */\nexport default function CursorPlugin(\n    yagr: Yagr,\n    opts: CursorOptions,\n): {\n    pin: (v: boolean) => void;\n    focus: (i: number | null, f: boolean) => void;\n    uplot: Plugin;\n    updatePoints: () => void;\n    showPoints: (idx?: number) => void;\n    hidePoints: (idx?: number) => void;\n} {\n    const config = yagr.config;\n    const processing = config.processing || {};\n    const pInterpolation = Boolean(processing.interpolation);\n    const iValue = processing.interpolation?.value;\n\n    const snapToNulls = opts.snapToValues === false ? false : opts.snapToValues || 'closest';\n    const snapToInterpolated = pInterpolation ? processing.interpolation?.snapToValues ?? 'closest' : false;\n\n    let mem: Record<string, HTMLElement> = {};\n\n    /*\n     * This function finds non null value index and returns\n     * it's value for drawIdx hook for cursor\n     */\n    const snapOnValues = (self: UPlot, seriesIdx: number, hoveredIdx: number) => {\n        const series = self.series[seriesIdx];\n\n        if (series.scale === DEFAULT_X_SCALE) {\n            return hoveredIdx;\n        }\n\n        const seriesData = series.$c || self.data[seriesIdx];\n        const value = seriesData[hoveredIdx];\n\n        if (pInterpolation && value === iValue) {\n            return findDataIdx(seriesData, series, hoveredIdx, snapToInterpolated, iValue);\n        } else if (value === null) {\n            return findDataIdx(seriesData, series, hoveredIdx, snapToNulls, null);\n        }\n\n        return hoveredIdx;\n    };\n\n    return {\n        showPoints: (idx?: number) => {\n            const over = yagr.uplot.over;\n\n            if (!over) {\n                return;\n            }\n\n            const points = getPointsByIdx(over, idx);\n            points.forEach((pt) => {\n                pt.style.visibility = 'visible';\n            });\n        },\n        hidePoints: (idx?: number) => {\n            const over = yagr.uplot.over;\n\n            if (!over) {\n                return;\n            }\n\n            const points = getPointsByIdx(over, idx);\n            points.forEach((pt) => {\n                pt.style.visibility = 'hidden';\n            });\n        },\n        pin: (pinState: boolean) => {\n            const over = yagr.root.querySelector('.u-over');\n\n            if (!over) {\n                return;\n            }\n\n            if (pinState) {\n                const pointsHolder = document.createElement('div');\n                pointsHolder.classList.add('yagr-points-holder');\n                over.querySelectorAll('.yagr-point').forEach((elem) => {\n                    const newElem = elem.cloneNode(true) as HTMLElement;\n                    pointsHolder.appendChild(newElem);\n                    const idx = newElem.dataset['idx'];\n                    if (idx) {\n                        mem[idx] = newElem;\n                    }\n                });\n                over.appendChild(pointsHolder);\n            } else {\n                mem = {};\n                over.querySelector('.yagr-points-holder')?.remove();\n            }\n        },\n        updatePoints: () => {\n            (yagr.root.querySelectorAll('.yagr-point') as NodeListOf<HTMLElement>).forEach((pt) => {\n                const idx = Number(pt.dataset['idx']);\n                if (isNaN(idx)) {\n                    return;\n                }\n\n                const series = yagr.uplot.series[idx];\n\n                paintCursorPoint(series, pt);\n            });\n        },\n        focus: (serieIdx: number | null, focus: boolean) => {\n            Object.entries(mem).forEach(([idx, item]) => {\n                if (serieIdx === null) {\n                    item.style.display = focus ? 'block' : 'none';\n                    return;\n                }\n\n                item.style.display = idx === String(serieIdx) && focus ? 'block' : 'none';\n            });\n        },\n        uplot: {\n            opts: (_, uplotOptions) => {\n                uplotOptions.cursor = uplotOptions.cursor || {};\n\n                const emptyLines = uplotOptions.series.filter((s) => s.empty).length;\n                const totalLines = uplotOptions.series.length - 1;\n                const maxCursors = opts?.maxMarkers ?? MAX_CURSORS;\n\n                uplotOptions.cursor.points = {\n                    show: totalLines - emptyLines <= maxCursors ? cursorPoint : false,\n                    size: (u: uPlot, seriesIdx: number) => {\n                        const serie = u.series[seriesIdx];\n                        return (\n                            (serie.cursorOptions ? serie.cursorOptions.markersSize : opts?.markersSize) ||\n                            MARKER_DIAMETER\n                        );\n                    },\n                };\n\n                uplotOptions.cursor.dataIdx = snapOnValues;\n            },\n            hooks: {\n                ...(opts.hideMarkers && {\n                    setCursor: (u: uPlot) => {\n                        const idx = u.cursor.idx;\n\n                        if (isNil(idx)) {\n                            return;\n                        }\n\n                        for (let i = 1; i < u.series.length; i++) {\n                            const seriesValue = u.series[i].$c[idx];\n\n                            if (opts.hideMarkers!(seriesValue, i)) {\n                                yagr.plugins.cursor?.hidePoints(i);\n                            } else {\n                                yagr.plugins.cursor?.showPoints(i);\n                            }\n                        }\n                    },\n                }),\n                init: (u) => {\n                    const cX: HTMLElement | null = u.root.querySelector('.u-cursor-x');\n                    if (cX) {\n                        if (opts.x && opts.x.visible === false) {\n                            cX.style.display = 'none';\n                        }\n                        cX.style.borderRight = (opts.x && opts.x.style) || CURSOR_STYLE;\n                    }\n\n                    const cY: HTMLElement | null = u.root.querySelector('.u-cursor-y');\n                    if (cY) {\n                        if (opts.y && opts.y.visible !== false) {\n                            cY.style.borderBottom = opts.y.style || CURSOR_STYLE;\n                        } else {\n                            cY.style.display = 'none';\n                        }\n                    }\n                },\n            },\n        },\n    };\n}\n", "export const preventMouseEvents = (e: MouseEvent) => e.preventDefault();\n", "import UPlot, {Options, Series} from 'uplot';\n\nimport Yagr from '../../index';\nimport {DEFAULT_X_SERIE_NAME} from '../../defaults';\nimport {html} from '../../utils/common';\nimport {preventMouseEvents} from '../../utils/events';\n\nexport type LegendPosition = 'top' | 'bottom';\nexport interface LegendOptions {\n    /** Show legend (default: false) */\n    show?: boolean;\n    /** Root classname */\n    className?: string;\n    /** Legend placement position */\n    position?: LegendPosition;\n    /** Maximal space fro legend as a fraction of chart height (default: 0.3) */\n    maxLegendSpace?: number;\n    /** @TODO Maybe bugs here  */\n    fontSize?: number;\n    /** Basic behaviour includes only toggle behaviuor (\"Hide/show all\" button exists) */\n    behaviour?: 'basic' | 'extended';\n}\n\ninterface LegendState {\n    page: number;\n    pages: number;\n    paginated: boolean;\n    rowsPerPage: number;\n    pageSize: number;\n    requiredSpace: number;\n    totalSpace: number;\n    startSerieRange?: UPlot.Series;\n}\n\nconst ALL_SERIES_IDX = 'null' as const;\nconst PAGINATION_BUTTON_HEIGHT = 18;\nconst TOTAL_LEGEND_VERTICAL_PADDING_BOTTOM = 20;\nconst TOTAL_LEGEND_VERTICAL_PADDING_TOP = 48;\nconst DEFAULT_FONT_SIZE = 12;\nconst DEFAULT_LEGEND_PLACE_RATIO = 0.3;\n\nexport const hasOneVisibleLine = (series: Series[]) => {\n    return series.some(({show, id}) => id !== DEFAULT_X_SERIE_NAME && show);\n};\n\nconst getPrependingTitle = (i18n: Yagr['utils']['i18n'], series: Series[]) => {\n    return series.length > 3 && i18n(hasOneVisibleLine(series) ? 'hide-all' : 'show-all');\n};\n\nconst getPrependingTitleId = (series: Series[]): typeof ALL_SERIES_IDX | undefined => {\n    return (series.length > 3 && ALL_SERIES_IDX) || undefined;\n};\n\nexport default class LegendPlugin {\n    yagr!: Yagr;\n    uplot?: UPlot;\n    options!: LegendOptions;\n    pagesCount = 0;\n    state: LegendState = {\n        page: 0,\n        pages: 1,\n        pageSize: 0,\n        rowsPerPage: 1,\n        paginated: false,\n        requiredSpace: 0,\n        totalSpace: 0,\n    };\n    itemsHtml = '';\n    legendEl?: HTMLElement;\n    items?: HTMLElement;\n    container?: HTMLElement;\n    private _onDestroy?: () => void;\n\n    redraw() {\n        if (!this.options.show) {\n            return;\n        }\n        this.render();\n    }\n\n    destroy() {\n        if (this._onDestroy) {\n            this._onDestroy();\n        }\n        this.legendEl?.remove();\n    }\n\n    preInit = (yagr: Yagr, options: LegendOptions, uplotOptions: Options) => {\n        this.yagr = yagr;\n        this.options = Object.assign(\n            {\n                show: false,\n                position: 'bottom',\n                fontSize: DEFAULT_FONT_SIZE,\n                maxLegendSpace: DEFAULT_LEGEND_PLACE_RATIO,\n                className: undefined,\n                behaviour: 'basic',\n            },\n            options || {},\n        );\n        this.calc(uplotOptions);\n    };\n\n    init = (u: uPlot) => {\n        if (!this.options.show) {\n            return;\n        }\n\n        this.uplot = u;\n\n        /** Removing native uPlot legend */\n        u.root.querySelector('.u-legend')?.remove();\n        this.render();\n    };\n\n    update = () => {\n        const series: NodeListOf<HTMLDivElement> = this.yagr.root.querySelectorAll('[data-serie-id]');\n\n        series.forEach((serieNode) => {\n            const serieId = serieNode.getAttribute('data-serie-id');\n            if (!serieId || serieId === ALL_SERIES_IDX) {\n                return;\n            }\n            const serieVisible = this.uplot?.series[this.yagr.state.y2uIdx[serieId]]?.show;\n\n            serieNode.classList[serieVisible ? 'remove' : 'add']('yagr-legend__item_hidden');\n        });\n    };\n\n    private applyHandlers() {\n        const {yagr, uplot: u} = this;\n\n        if (!u) {\n            return () => {};\n        }\n\n        const series: NodeListOf<HTMLDivElement> = yagr.root.querySelectorAll('[data-serie-id]');\n        const unsubsribe: (() => void)[] = [];\n\n        const onSerieClickBasic = (serieNode: HTMLElement) => () => {\n            const serieId = serieNode.getAttribute('data-serie-id');\n            const seriesToToggle: [Series, boolean][] = [];\n\n            if (serieId === ALL_SERIES_IDX) {\n                const nextToggleState = !hasOneVisibleLine(u.series);\n\n                for (let idx = 1; idx < u.series.length; idx++) {\n                    seriesToToggle.push([u.series[idx], nextToggleState]);\n                }\n            } else {\n                const serie = u.series.find(({id}) => id === serieId);\n                if (!serie) {\n                    return;\n                }\n                seriesToToggle.push([serie, !serie.show]);\n            }\n\n            seriesToToggle.forEach(([serie, nextState]) => {\n                if (serie.show === nextState) {\n                    return;\n                }\n                const node = yagr.root.querySelector(`[data-serie-id=\"${serie.id}\"]`);\n                yagr.setVisible(serie.id, nextState, false);\n                node?.classList[nextState ? 'remove' : 'add']('yagr-legend__item_hidden');\n            });\n\n            const allSeriesItem = yagr.root.querySelector('.yagr-legend__all-series');\n\n            if (allSeriesItem) {\n                const title = getPrependingTitle(this.yagr.utils.i18n, u.series);\n                allSeriesItem.innerHTML = title || '';\n            }\n        };\n\n        const onSerieClickExtended = (serieNode: HTMLElement) => {\n            const changeVisibility = (id: string, visibility: boolean) => {\n                const node = yagr.root.querySelector(`[data-serie-id=\"${id}\"]`);\n                yagr.setVisible(id, visibility, false);\n                node?.classList[visibility ? 'remove' : 'add']('yagr-legend__item_hidden');\n            };\n\n            const toggleSerie = (serie: UPlot.Series) => {\n                changeVisibility(serie.id, !serie.show);\n            };\n\n            const selectSerie = (serie: UPlot.Series) => {\n                this.state.startSerieRange = serie;\n\n                const otherSeries = u.series.filter((s) => s.id !== serie.id);\n                const otherVisibility = !hasOneVisibleLine(otherSeries) && serie.show !== false;\n\n                u.series.forEach((s) => {\n                    const visibility = serie.id === s.id ? true : otherVisibility;\n                    changeVisibility(s.id, visibility);\n                });\n            };\n\n            const selectRange = (serie: UPlot.Series) => {\n                // If startSerieRange is undefined then startSerieRange = first valid legend element\n                if (!this.state.startSerieRange) {\n                    this.state.startSerieRange = u.series[1];\n                }\n\n                const range: number[] = [];\n\n                u.series.forEach((s, i) => {\n                    if (s.id === serie.id) {\n                        range.push(i);\n                    }\n                    // There is no 'else' because exist case when startSerieRange and target serie are same elements\n                    if (s.id === this.state.startSerieRange?.id) {\n                        range.push(i);\n                    }\n                });\n\n                u.series.forEach((s, i) => {\n                    const visibility = i >= range[0] && i <= range[1];\n                    changeVisibility(s.id, visibility);\n                });\n            };\n\n            return (e: MouseEvent) => {\n                const serieId = serieNode.getAttribute('data-serie-id');\n\n                const serie = u.series.find(({id}) => id === serieId);\n\n                if (!serie) {\n                    return;\n                }\n\n                e.preventDefault();\n\n                if (e.ctrlKey || e.metaKey) {\n                    toggleSerie(serie);\n                } else if (e.shiftKey) {\n                    selectRange(serie);\n                } else {\n                    selectSerie(serie);\n                }\n            };\n        };\n\n        const onSerieClick = {\n            basic: onSerieClickBasic,\n            extended: onSerieClickExtended,\n        };\n\n        const onSerieMouseEnter = (serieNode: HTMLElement) => () => {\n            const serieId = serieNode.getAttribute('data-serie-id');\n\n            if (serieNode.classList.contains('yagr-legend__item_hidden') || serieId === ALL_SERIES_IDX) {\n                return;\n            }\n\n            const targetSerie = this.yagr.uplot.series.find(({id}) => id === serieId);\n\n            if (targetSerie) {\n                yagr.setFocus(targetSerie.id, true);\n            }\n        };\n\n        const onSerieMouseLeave = () => {\n            yagr.setFocus(null, true);\n        };\n\n        series.forEach((serieNode) => {\n            const onClick = onSerieClick[this.options.behaviour || 'basic'](serieNode);\n            const onFocus = onSerieMouseEnter(serieNode);\n\n            serieNode.addEventListener('click', onClick);\n            serieNode.addEventListener('mouseenter', onFocus);\n            serieNode.addEventListener('mouseleave', onSerieMouseLeave);\n            serieNode.addEventListener('mousedown', preventMouseEvents);\n\n            unsubsribe.push(() => {\n                serieNode.removeEventListener('click', onClick);\n                serieNode.removeEventListener('mouseenter', onFocus);\n                serieNode.removeEventListener('mouseleave', onSerieMouseLeave);\n                serieNode.removeEventListener('mousedown', preventMouseEvents);\n            });\n        });\n\n        const destroy = () => unsubsribe.forEach((fn) => fn());\n        this._onDestroy = destroy;\n        return destroy;\n    }\n\n    private render() {\n        let reRender = false;\n        const {uplot: u, options} = this;\n        if (!u) {\n            return;\n        }\n\n        let legendEl = this.yagr.root.querySelector('.yagr-legend') as HTMLElement;\n\n        if (legendEl) {\n            reRender = true;\n        } else {\n            legendEl = html('div', {\n                class: `yagr-legend yagr-legend__${this.options.position} ${options?.className || ''}`,\n            });\n        }\n\n        if (!legendEl) {\n            return;\n        }\n\n        if (!reRender) {\n            if (options.position === 'top') {\n                u.root.before(legendEl);\n            } else {\n                u.root?.after(legendEl);\n            }\n        }\n\n        this.legendEl = legendEl;\n\n        if (!this.itemsHtml || reRender) {\n            this.calc(this.yagr.options);\n        }\n\n        legendEl.innerHTML = `<div class=\"yagr-legend__container\" style=\"height: ${this.state.requiredSpace}px\">${this.itemsHtml}</div>`;\n\n        this.items = legendEl.querySelector('.yagr-legend__items') as HTMLElement;\n        this.container = legendEl.querySelector('.yagr-legend__container') as HTMLElement;\n\n        if (this.state.paginated) {\n            const pagination = this.renderPagination();\n            this.container?.after(pagination);\n        } else {\n            this.items.style.justifyContent = 'center';\n        }\n\n        this.applyHandlers();\n    }\n\n    private measureLegend = (body: string) => {\n        const rootEl = this.yagr.root;\n        const pseudo = html(\n            'div',\n            {\n                class: 'yagr-legend',\n                style: {visibility: 'hidden'},\n            },\n            body,\n        );\n\n        rootEl.appendChild(pseudo);\n\n        const items = pseudo.childNodes[0] as HTMLElement;\n        const result = items.getBoundingClientRect();\n        pseudo.remove();\n\n        return result;\n    };\n\n    private nextPage = () => {\n        const {state} = this;\n        this.state.page += 1;\n\n        if (this.items) {\n            this.items.style.transform = `translate(0, ${-1 * state.page * state.pageSize}px)`;\n            this.renderPagination();\n        }\n    };\n\n    private prevPage = () => {\n        const {state} = this;\n        this.state.page -= 1;\n\n        if (this.items) {\n            this.items.style.transform = `translate(0, ${-1 * state.page * state.pageSize}px)`;\n            this.renderPagination();\n        }\n    };\n\n    private renderPagination() {\n        const {state} = this;\n\n        let pagination = this.yagr.root.querySelector('.yagr-legend__pagination');\n\n        if (pagination) {\n            const nextPage = pagination.querySelector('.yagr-legend__icon-down') as HTMLElement;\n            const prevPage = pagination.querySelector('.yagr-legend__icon-up') as HTMLElement;\n\n            nextPage.removeEventListener('click', this.nextPage);\n            prevPage.removeEventListener('click', this.prevPage);\n        } else {\n            pagination = html('div', {\n                class: 'yagr-legend__pagination',\n            });\n        }\n\n        const upClassName = state.page === 0 ? 'yagr-legend__icon-up_disabled' : '';\n        const downClassName = state.page === state.pages - 1 ? 'yagr-legend__icon-down_disabled' : '';\n\n        pagination.innerHTML = `<span class=\"yagr-legend__icon-up ${upClassName}\"></span>\n<span class=\"yagr-legend__pagination-text\">${state.page + 1}/${state.pages}</span>\n<span class=\"yagr-legend__icon-down ${downClassName}\"></span>`;\n\n        const nextPage = pagination.querySelector('.yagr-legend__icon-down') as HTMLElement;\n        const prevPage = pagination.querySelector('.yagr-legend__icon-up') as HTMLElement;\n\n        if (!downClassName) {\n            nextPage.addEventListener('click', this.nextPage);\n        }\n        if (!upClassName) {\n            prevPage.addEventListener('click', this.prevPage);\n        }\n\n        return pagination;\n    }\n\n    private createIconLineElement(serie: Series) {\n        const iconLineElement = html('span', {\n            class: `yagr-legend__icon yagr-legend__icon_${serie.type}`,\n            style: {'background-color': serie.color},\n        });\n\n        return iconLineElement;\n    }\n\n    private createSerieNameElement(serie: Series) {\n        const serieNameElement = html('span');\n        serieNameElement.innerText = serie.name || 'unnamed';\n\n        return serieNameElement;\n    }\n\n    private renderItems(uplotOptions: Options) {\n        const title = getPrependingTitle(this.yagr.utils.i18n, uplotOptions.series);\n        const titleId = this.options.behaviour !== 'extended' && getPrependingTitleId(uplotOptions.series);\n        const series: (Series | typeof ALL_SERIES_IDX)[] = titleId ? [titleId] : [];\n\n        for (let i = 1; i < uplotOptions.series.length; i++) {\n            series.push(uplotOptions.series[i]);\n        }\n\n        const content = series\n            .map((serie) => {\n                let serieContent;\n                let sId;\n                let additionalCn = ' ';\n\n                if (serie === ALL_SERIES_IDX) {\n                    serieContent = title;\n                    sId = titleId;\n                    additionalCn = ' yagr-legend__all-series ';\n                } else {\n                    sId = serie.id;\n                    const icon = this.createIconLineElement(serie);\n                    const name = this.createSerieNameElement(serie);\n\n                    serieContent = `${icon.outerHTML}${name.outerHTML}`;\n                }\n\n                const visible = typeof serie === 'string' ? true : serie.show !== false;\n\n                return `<div class=\"yagr-legend__item${additionalCn}${\n                    visible ? '' : 'yagr-legend__item_hidden'\n                }\" data-serie-id=\"${sId}\">${serieContent}</div>`;\n            })\n            .join('');\n\n        return `<div class=\"yagr-legend__items\">${content}</div>`;\n    }\n\n    private calc(uplotOptions: Options) {\n        if (!this.options.show) {\n            return;\n        }\n\n        const chartHeight = uplotOptions.height - this.VERTICAL_PADDING;\n        const html = this.renderItems(uplotOptions);\n        const {height: requiredHeight} = this.measureLegend(html);\n        const rowHeight = (this.options.fontSize as number) + 2;\n\n        const maxPossiblePlace = chartHeight * (this.options.maxLegendSpace as number);\n        const rowsPerPage = Math.floor(maxPossiblePlace / rowHeight);\n        const itemsRowsPerPage = rowsPerPage - 1;\n        const itemsPageSize = Math.min(itemsRowsPerPage * rowHeight, maxPossiblePlace);\n        const paginatedPageSize = Math.min(rowsPerPage * rowHeight, maxPossiblePlace);\n        const paginated = requiredHeight > itemsPageSize && itemsPageSize > 0;\n        const requiredSpace = Math.min(paginated ? paginatedPageSize : itemsPageSize, requiredHeight);\n        const pages = Math.ceil(requiredHeight / itemsPageSize);\n        const additionalSpace = paginated ? this.VERTICAL_PADDING + PAGINATION_BUTTON_HEIGHT : this.VERTICAL_PADDING;\n\n        this.state.requiredSpace = requiredSpace;\n        this.state.totalSpace = requiredSpace + additionalSpace;\n        this.state.paginated = paginated;\n        this.state.page = this.state.page || 0;\n        this.state.pages = pages;\n        this.state.pageSize = itemsPageSize;\n        this.state.rowsPerPage = rowsPerPage;\n        this.itemsHtml = html;\n    }\n\n    private get VERTICAL_PADDING() {\n        return this.options.position === 'bottom'\n            ? TOTAL_LEGEND_VERTICAL_PADDING_BOTTOM\n            : TOTAL_LEGEND_VERTICAL_PADDING_TOP;\n    }\n}\n", "/**\n* Copyright (c) 2023, Leon Sorokin\n* All rights reserved. (MIT Licensed)\n*\n* uPlot.js (\u03BCPlot)\n* A small, fast chart for time series, lines, areas, ohlc & bars\n* https://github.com/leeoniya/uPlot (v1.6.27)\n*/\n\nconst FEAT_TIME          = true;\n\nconst pre = \"u-\";\n\nconst UPLOT          =       \"uplot\";\nconst ORI_HZ         = pre + \"hz\";\nconst ORI_VT         = pre + \"vt\";\nconst TITLE          = pre + \"title\";\nconst WRAP           = pre + \"wrap\";\nconst UNDER          = pre + \"under\";\nconst OVER           = pre + \"over\";\nconst AXIS           = pre + \"axis\";\nconst OFF            = pre + \"off\";\nconst SELECT         = pre + \"select\";\nconst CURSOR_X       = pre + \"cursor-x\";\nconst CURSOR_Y       = pre + \"cursor-y\";\nconst CURSOR_PT      = pre + \"cursor-pt\";\nconst LEGEND         = pre + \"legend\";\nconst LEGEND_LIVE    = pre + \"live\";\nconst LEGEND_INLINE  = pre + \"inline\";\nconst LEGEND_SERIES  = pre + \"series\";\nconst LEGEND_MARKER  = pre + \"marker\";\nconst LEGEND_LABEL   = pre + \"label\";\nconst LEGEND_VALUE   = pre + \"value\";\n\nconst WIDTH       = \"width\";\nconst HEIGHT      = \"height\";\nconst TOP         = \"top\";\nconst BOTTOM      = \"bottom\";\nconst LEFT        = \"left\";\nconst RIGHT       = \"right\";\nconst hexBlack    = \"#000\";\nconst transparent = hexBlack + \"0\";\n\nconst mousemove   = \"mousemove\";\nconst mousedown   = \"mousedown\";\nconst mouseup     = \"mouseup\";\nconst mouseenter  = \"mouseenter\";\nconst mouseleave  = \"mouseleave\";\nconst dblclick    = \"dblclick\";\nconst resize      = \"resize\";\nconst scroll      = \"scroll\";\n\nconst change      = \"change\";\nconst dppxchange  = \"dppxchange\";\n\nconst LEGEND_DISP = \"--\";\n\nconst domEnv = typeof window != 'undefined';\n\nconst doc = domEnv ? document  : null;\nconst win = domEnv ? window    : null;\nconst nav = domEnv ? navigator : null;\n\nlet pxRatio;\n\n//export const canHover = domEnv && !win.matchMedia('(hover: none)').matches;\n\nlet query;\n\nfunction setPxRatio() {\n\tlet _pxRatio = devicePixelRatio;\n\n\t// during print preview, Chrome fires off these dppx queries even without changes\n\tif (pxRatio != _pxRatio) {\n\t\tpxRatio = _pxRatio;\n\n\t\tquery && off(change, query, setPxRatio);\n\t\tquery = matchMedia(`(min-resolution: ${pxRatio - 0.001}dppx) and (max-resolution: ${pxRatio + 0.001}dppx)`);\n\t\ton(change, query, setPxRatio);\n\n\t\twin.dispatchEvent(new CustomEvent(dppxchange));\n\t}\n}\n\nfunction addClass(el, c) {\n\tif (c != null) {\n\t\tlet cl = el.classList;\n\t\t!cl.contains(c) && cl.add(c);\n\t}\n}\n\nfunction remClass(el, c) {\n\tlet cl = el.classList;\n\tcl.contains(c) && cl.remove(c);\n}\n\nfunction setStylePx(el, name, value) {\n\tel.style[name] = value + \"px\";\n}\n\nfunction placeTag(tag, cls, targ, refEl) {\n\tlet el = doc.createElement(tag);\n\n\tif (cls != null)\n\t\taddClass(el, cls);\n\n\tif (targ != null)\n\t\ttarg.insertBefore(el, refEl);\n\n\treturn el;\n}\n\nfunction placeDiv(cls, targ) {\n\treturn placeTag(\"div\", cls, targ);\n}\n\nconst xformCache = new WeakMap();\n\nfunction elTrans(el, xPos, yPos, xMax, yMax) {\n\tlet xform = \"translate(\" + xPos + \"px,\" + yPos + \"px)\";\n\tlet xformOld = xformCache.get(el);\n\n\tif (xform != xformOld) {\n\t\tel.style.transform = xform;\n\t\txformCache.set(el, xform);\n\n\t\tif (xPos < 0 || yPos < 0 || xPos > xMax || yPos > yMax)\n\t\t\taddClass(el, OFF);\n\t\telse\n\t\t\tremClass(el, OFF);\n\t}\n}\n\nconst colorCache = new WeakMap();\n\nfunction elColor(el, background, borderColor) {\n\tlet newColor = background + borderColor;\n\tlet oldColor = colorCache.get(el);\n\n\tif (newColor != oldColor) {\n\t\tcolorCache.set(el, newColor);\n\t\tel.style.background = background;\n\t\tel.style.borderColor = borderColor;\n\t}\n}\n\nconst sizeCache = new WeakMap();\n\nfunction elSize(el, newWid, newHgt, centered) {\n\tlet newSize = newWid + \"\" + newHgt;\n\tlet oldSize = sizeCache.get(el);\n\n\tif (newSize != oldSize) {\n\t\tsizeCache.set(el, newSize);\n\t\tel.style.height = newHgt + \"px\";\n\t\tel.style.width = newWid + \"px\";\n\t\tel.style.marginLeft = centered ? -newWid/2 + \"px\" : 0;\n\t\tel.style.marginTop = centered ? -newHgt/2 + \"px\" : 0;\n\t}\n}\n\nconst evOpts = {passive: true};\nconst evOpts2 = {...evOpts, capture: true};\n\nfunction on(ev, el, cb, capt) {\n\tel.addEventListener(ev, cb, capt ? evOpts2 : evOpts);\n}\n\nfunction off(ev, el, cb, capt) {\n\tel.removeEventListener(ev, cb, capt ? evOpts2 : evOpts);\n}\n\ndomEnv && setPxRatio();\n\n// binary search for index of closest value\nfunction closestIdx(num, arr, lo, hi) {\n\tlet mid;\n\tlo = lo || 0;\n\thi = hi || arr.length - 1;\n\tlet bitwise = hi <= 2147483647;\n\n\twhile (hi - lo > 1) {\n\t\tmid = bitwise ? (lo + hi) >> 1 : floor((lo + hi) / 2);\n\n\t\tif (arr[mid] < num)\n\t\t\tlo = mid;\n\t\telse\n\t\t\thi = mid;\n\t}\n\n\tif (num - arr[lo] <= arr[hi] - num)\n\t\treturn lo;\n\n\treturn hi;\n}\n\nfunction nonNullIdx(data, _i0, _i1, dir) {\n\tfor (let i = dir == 1 ? _i0 : _i1; i >= _i0 && i <= _i1; i += dir) {\n\t\tif (data[i] != null)\n\t\t\treturn i;\n\t}\n\n\treturn -1;\n}\n\nfunction getMinMax(data, _i0, _i1, sorted) {\n//\tconsole.log(\"getMinMax()\");\n\n\tlet _min = inf;\n\tlet _max = -inf;\n\n\tif (sorted == 1) {\n\t\t_min = data[_i0];\n\t\t_max = data[_i1];\n\t}\n\telse if (sorted == -1) {\n\t\t_min = data[_i1];\n\t\t_max = data[_i0];\n\t}\n\telse {\n\t\tfor (let i = _i0; i <= _i1; i++) {\n\t\t\tlet v = data[i];\n\n\t\t\tif (v != null) {\n\t\t\t\tif (v < _min)\n\t\t\t\t\t_min = v;\n\t\t\t\tif (v > _max)\n\t\t\t\t\t_max = v;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [_min, _max];\n}\n\nfunction getMinMaxLog(data, _i0, _i1) {\n//\tconsole.log(\"getMinMax()\");\n\n\tlet _min = inf;\n\tlet _max = -inf;\n\n\tfor (let i = _i0; i <= _i1; i++) {\n\t\tlet v = data[i];\n\n\t\tif (v != null && v > 0) {\n\t\t\tif (v < _min)\n\t\t\t\t_min = v;\n\t\t\tif (v > _max)\n\t\t\t\t_max = v;\n\t\t}\n\t}\n\n\treturn [\n\t\t_min ==  inf ?  1 : _min,\n\t\t_max == -inf ? 10 : _max,\n\t];\n}\n\nfunction rangeLog(min, max, base, fullMags) {\n\tlet minSign = sign(min);\n\tlet maxSign = sign(max);\n\n\tlet logFn = base == 10 ? log10 : log2;\n\n\tif (min == max) {\n\t\tif (minSign == -1) {\n\t\t\tmin *= base;\n\t\t\tmax /= base;\n\t\t}\n\t\telse {\n\t\t\tmin /= base;\n\t\t\tmax *= base;\n\t\t}\n\t}\n\n\tlet growMinAbs = minSign == 1 ? floor : ceil;\n\tlet growMaxAbs = maxSign == 1 ? ceil : floor;\n\n\tlet minExp = growMinAbs(logFn(abs(min)));\n\tlet maxExp = growMaxAbs(logFn(abs(max)));\n\n\tlet minIncr = pow(base, minExp);\n\tlet maxIncr = pow(base, maxExp);\n\n\t// fix values like Math.pow(10, -5) === 0.000009999999999999999\n\tif (base == 10) {\n\t\tif (minExp < 0)\n\t\t\tminIncr = roundDec(minIncr, -minExp);\n\t\tif (maxExp < 0)\n\t\t\tmaxIncr = roundDec(maxIncr, -maxExp);\n\t}\n\n\tif (fullMags || base == 2) {\n\t\tmin = minIncr * minSign;\n\t\tmax = maxIncr * maxSign;\n\t}\n\telse {\n\t\tmin = incrRoundDn(min, minIncr);\n\t\tmax = incrRoundUp(max, maxIncr);\n\t}\n\n\treturn [min, max];\n}\n\nfunction rangeAsinh(min, max, base, fullMags) {\n\tlet minMax = rangeLog(min, max, base, fullMags);\n\n\tif (min == 0)\n\t\tminMax[0] = 0;\n\n\tif (max == 0)\n\t\tminMax[1] = 0;\n\n\treturn minMax;\n}\n\nconst rangePad = 0.1;\n\nconst autoRangePart = {\n\tmode: 3,\n\tpad: rangePad,\n};\n\nconst _eqRangePart = {\n\tpad:  0,\n\tsoft: null,\n\tmode: 0,\n};\n\nconst _eqRange = {\n\tmin: _eqRangePart,\n\tmax: _eqRangePart,\n};\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction rangeNum(_min, _max, mult, extra) {\n\tif (isObj(mult))\n\t\treturn _rangeNum(_min, _max, mult);\n\n\t_eqRangePart.pad  = mult;\n\t_eqRangePart.soft = extra ? 0 : null;\n\t_eqRangePart.mode = extra ? 3 : 0;\n\n\treturn _rangeNum(_min, _max, _eqRange);\n}\n\n// nullish coalesce\nfunction ifNull(lh, rh) {\n\treturn lh == null ? rh : lh;\n}\n\n// checks if given index range in an array contains a non-null value\n// aka a range-bounded Array.some()\nfunction hasData(data, idx0, idx1) {\n\tidx0 = ifNull(idx0, 0);\n\tidx1 = ifNull(idx1, data.length - 1);\n\n\twhile (idx0 <= idx1) {\n\t\tif (data[idx0] != null)\n\t\t\treturn true;\n\t\tidx0++;\n\t}\n\n\treturn false;\n}\n\nfunction _rangeNum(_min, _max, cfg) {\n\tlet cmin = cfg.min;\n\tlet cmax = cfg.max;\n\n\tlet padMin = ifNull(cmin.pad, 0);\n\tlet padMax = ifNull(cmax.pad, 0);\n\n\tlet hardMin = ifNull(cmin.hard, -inf);\n\tlet hardMax = ifNull(cmax.hard,  inf);\n\n\tlet softMin = ifNull(cmin.soft,  inf);\n\tlet softMax = ifNull(cmax.soft, -inf);\n\n\tlet softMinMode = ifNull(cmin.mode, 0);\n\tlet softMaxMode = ifNull(cmax.mode, 0);\n\n\tlet delta = _max - _min;\n\tlet deltaMag = log10(delta);\n\n\tlet scalarMax = max(abs(_min), abs(_max));\n\tlet scalarMag = log10(scalarMax);\n\n\tlet scalarMagDelta = abs(scalarMag - deltaMag);\n\n\t// this handles situations like 89.7, 89.69999999999999\n\t// by assuming 0.001x deltas are precision errors\n//\tif (delta > 0 && delta < abs(_max) / 1e3)\n//\t\tdelta = 0;\n\n\t// treat data as flat if delta is less than 1 billionth\n\t// or range is 11+ orders of magnitude below raw values, e.g. 99999999.99999996 - 100000000.00000004\n\tif (delta < 1e-9 || scalarMagDelta > 10) {\n\t\tdelta = 0;\n\n\t\t// if soft mode is 2 and all vals are flat at 0, avoid the 0.1 * 1e3 fallback\n\t\t// this prevents 0,0,0 from ranging to -100,100 when softMin/softMax are -1,1\n\t\tif (_min == 0 || _max == 0) {\n\t\t\tdelta = 1e-9;\n\n\t\t\tif (softMinMode == 2 && softMin != inf)\n\t\t\t\tpadMin = 0;\n\n\t\t\tif (softMaxMode == 2 && softMax != -inf)\n\t\t\t\tpadMax = 0;\n\t\t}\n\t}\n\n\tlet nonZeroDelta = delta || scalarMax || 1e3;\n\tlet mag          = log10(nonZeroDelta);\n\tlet base         = pow(10, floor(mag));\n\n\tlet _padMin  = nonZeroDelta * (delta == 0 ? (_min == 0 ? .1 : 1) : padMin);\n\tlet _newMin  = roundDec(incrRoundDn(_min - _padMin, base/10), 9);\n\tlet _softMin = _min >= softMin && (softMinMode == 1 || softMinMode == 3 && _newMin <= softMin || softMinMode == 2 && _newMin >= softMin) ? softMin : inf;\n\tlet minLim   = max(hardMin, _newMin < _softMin && _min >= _softMin ? _softMin : min(_softMin, _newMin));\n\n\tlet _padMax  = nonZeroDelta * (delta == 0 ? (_max == 0 ? .1 : 1) : padMax);\n\tlet _newMax  = roundDec(incrRoundUp(_max + _padMax, base/10), 9);\n\tlet _softMax = _max <= softMax && (softMaxMode == 1 || softMaxMode == 3 && _newMax >= softMax || softMaxMode == 2 && _newMax <= softMax) ? softMax : -inf;\n\tlet maxLim   = min(hardMax, _newMax > _softMax && _max <= _softMax ? _softMax : max(_softMax, _newMax));\n\n\tif (minLim == maxLim && minLim == 0)\n\t\tmaxLim = 100;\n\n\treturn [minLim, maxLim];\n}\n\n// alternative: https://stackoverflow.com/a/2254896\nconst numFormatter = new Intl.NumberFormat(domEnv ? nav.language : 'en-US');\nconst fmtNum = val => numFormatter.format(val);\n\nconst M = Math;\n\nconst PI = M.PI;\nconst abs = M.abs;\nconst floor = M.floor;\nconst round = M.round;\nconst ceil = M.ceil;\nconst min = M.min;\nconst max = M.max;\nconst pow = M.pow;\nconst sign = M.sign;\nconst log10 = M.log10;\nconst log2 = M.log2;\n// TODO: seems like this needs to match asinh impl if the passed v is tweaked?\nconst sinh =  (v, linthresh = 1) => M.sinh(v) * linthresh;\nconst asinh = (v, linthresh = 1) => M.asinh(v / linthresh);\n\nconst inf = Infinity;\n\nfunction numIntDigits(x) {\n\treturn (log10((x ^ (x >> 31)) - (x >> 31)) | 0) + 1;\n}\n\nfunction clamp(num, _min, _max) {\n\treturn min(max(num, _min), _max);\n}\n\nfunction fnOrSelf(v) {\n\treturn typeof v == \"function\" ? v : () => v;\n}\n\nconst noop = () => {};\n\nconst retArg0 = _0 => _0;\n\nconst retArg1 = (_0, _1) => _1;\n\nconst retNull = _ => null;\n\nconst retTrue = _ => true;\n\nconst retEq = (a, b) => a == b;\n\n// this will probably prevent tick incrs > 14 decimal places\n// (we generate up to 17 dec, see fixedDec const)\nconst fixFloat = v => roundDec(v, 14);\n\nfunction incrRound(num, incr) {\n\treturn fixFloat(roundDec(fixFloat(num/incr))*incr);\n}\n\nfunction incrRoundUp(num, incr) {\n\treturn fixFloat(ceil(fixFloat(num/incr))*incr);\n}\n\nfunction incrRoundDn(num, incr) {\n\treturn fixFloat(floor(fixFloat(num/incr))*incr);\n}\n\n// https://stackoverflow.com/a/48764436\n// rounds half away from zero\nfunction roundDec(val, dec = 0) {\n\tif (isInt(val))\n\t\treturn val;\n//\telse if (dec == 0)\n//\t\treturn round(val);\n\n\tlet p = 10 ** dec;\n\tlet n = (val * p) * (1 + Number.EPSILON);\n\treturn round(n) / p;\n}\n\nconst fixedDec = new Map();\n\nfunction guessDec(num) {\n\treturn ((\"\"+num).split(\".\")[1] || \"\").length;\n}\n\nfunction genIncrs(base, minExp, maxExp, mults) {\n\tlet incrs = [];\n\n\tlet multDec = mults.map(guessDec);\n\n\tfor (let exp = minExp; exp < maxExp; exp++) {\n\t\tlet expa = abs(exp);\n\t\tlet mag = roundDec(pow(base, exp), expa);\n\n\t\tfor (let i = 0; i < mults.length; i++) {\n\t\t\tlet _incr = mults[i] * mag;\n\t\t\tlet dec = (_incr >= 0 && exp >= 0 ? 0 : expa) + (exp >= multDec[i] ? 0 : multDec[i]);\n\t\t\tlet incr = roundDec(_incr, dec);\n\t\t\tincrs.push(incr);\n\t\t\tfixedDec.set(incr, dec);\n\t\t}\n\t}\n\n\treturn incrs;\n}\n\n//export const assign = Object.assign;\n\nconst EMPTY_OBJ = {};\nconst EMPTY_ARR = [];\n\nconst nullNullTuple = [null, null];\n\nconst isArr = Array.isArray;\nconst isInt = Number.isInteger;\nconst isUndef = v => v === void 0;\n\nfunction isStr(v) {\n\treturn typeof v == 'string';\n}\n\nfunction isObj(v) {\n\tlet is = false;\n\n\tif (v != null) {\n\t\tlet c = v.constructor;\n\t\tis = c == null || c == Object;\n\t}\n\n\treturn is;\n}\n\nfunction fastIsObj(v) {\n\treturn v != null && typeof v == 'object';\n}\n\nconst TypedArray = Object.getPrototypeOf(Uint8Array);\n\nfunction copy(o, _isObj = isObj) {\n\tlet out;\n\n\tif (isArr(o)) {\n\t\tlet val = o.find(v => v != null);\n\n\t\tif (isArr(val) || _isObj(val)) {\n\t\t\tout = Array(o.length);\n\t\t\tfor (let i = 0; i < o.length; i++)\n\t\t\t\tout[i] = copy(o[i], _isObj);\n\t\t}\n\t\telse\n\t\t\tout = o.slice();\n\t}\n\telse if (o instanceof TypedArray) // also (ArrayBuffer.isView(o) && !(o instanceof DataView))\n\t\tout = o.slice();\n\telse if (_isObj(o)) {\n\t\tout = {};\n\t\tfor (let k in o)\n\t\t\tout[k] = copy(o[k], _isObj);\n\t}\n\telse\n\t\tout = o;\n\n\treturn out;\n}\n\nfunction assign(targ) {\n\tlet args = arguments;\n\n\tfor (let i = 1; i < args.length; i++) {\n\t\tlet src = args[i];\n\n\t\tfor (let key in src) {\n\t\t\tif (isObj(targ[key]))\n\t\t\t\tassign(targ[key], copy(src[key]));\n\t\t\telse\n\t\t\t\ttarg[key] = copy(src[key]);\n\t\t}\n\t}\n\n\treturn targ;\n}\n\n// nullModes\nconst NULL_REMOVE = 0;  // nulls are converted to undefined (e.g. for spanGaps: true)\nconst NULL_RETAIN = 1;  // nulls are retained, with alignment artifacts set to undefined (default)\nconst NULL_EXPAND = 2;  // nulls are expanded to include any adjacent alignment artifacts\n\n// sets undefined values to nulls when adjacent to existing nulls (minesweeper)\nfunction nullExpand(yVals, nullIdxs, alignedLen) {\n\tfor (let i = 0, xi, lastNullIdx = -1; i < nullIdxs.length; i++) {\n\t\tlet nullIdx = nullIdxs[i];\n\n\t\tif (nullIdx > lastNullIdx) {\n\t\t\txi = nullIdx - 1;\n\t\t\twhile (xi >= 0 && yVals[xi] == null)\n\t\t\t\tyVals[xi--] = null;\n\n\t\t\txi = nullIdx + 1;\n\t\t\twhile (xi < alignedLen && yVals[xi] == null)\n\t\t\t\tyVals[lastNullIdx = xi++] = null;\n\t\t}\n\t}\n}\n\n// nullModes is a tables-matched array indicating how to treat nulls in each series\n// output is sorted ASC on the joined field (table[0]) and duplicate join values are collapsed\nfunction join(tables, nullModes) {\n\tif (allHeadersSame(tables)) {\n\t//\tconsole.log('cheap join!');\n\n\t\tlet table = tables[0].slice();\n\n\t\tfor (let i = 1; i < tables.length; i++)\n\t\t\ttable.push(...tables[i].slice(1));\n\n\t\tif (!isAsc(table[0]))\n\t\t\ttable = sortCols(table);\n\n\t\treturn table;\n\t}\n\n\tlet xVals = new Set();\n\n\tfor (let ti = 0; ti < tables.length; ti++) {\n\t\tlet t = tables[ti];\n\t\tlet xs = t[0];\n\t\tlet len = xs.length;\n\n\t\tfor (let i = 0; i < len; i++)\n\t\t\txVals.add(xs[i]);\n\t}\n\n\tlet data = [Array.from(xVals).sort((a, b) => a - b)];\n\n\tlet alignedLen = data[0].length;\n\n\tlet xIdxs = new Map();\n\n\tfor (let i = 0; i < alignedLen; i++)\n\t\txIdxs.set(data[0][i], i);\n\n\tfor (let ti = 0; ti < tables.length; ti++) {\n\t\tlet t = tables[ti];\n\t\tlet xs = t[0];\n\n\t\tfor (let si = 1; si < t.length; si++) {\n\t\t\tlet ys = t[si];\n\n\t\t\tlet yVals = Array(alignedLen).fill(undefined);\n\n\t\t\tlet nullMode = nullModes ? nullModes[ti][si] : NULL_RETAIN;\n\n\t\t\tlet nullIdxs = [];\n\n\t\t\tfor (let i = 0; i < ys.length; i++) {\n\t\t\t\tlet yVal = ys[i];\n\t\t\t\tlet alignedIdx = xIdxs.get(xs[i]);\n\n\t\t\t\tif (yVal === null) {\n\t\t\t\t\tif (nullMode != NULL_REMOVE) {\n\t\t\t\t\t\tyVals[alignedIdx] = yVal;\n\n\t\t\t\t\t\tif (nullMode == NULL_EXPAND)\n\t\t\t\t\t\t\tnullIdxs.push(alignedIdx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tyVals[alignedIdx] = yVal;\n\t\t\t}\n\n\t\t\tnullExpand(yVals, nullIdxs, alignedLen);\n\n\t\t\tdata.push(yVals);\n\t\t}\n\t}\n\n\treturn data;\n}\n\nconst microTask = typeof queueMicrotask == \"undefined\" ? fn => Promise.resolve().then(fn) : queueMicrotask;\n\n// TODO: https://github.com/dy/sort-ids (~2x faster for 1e5+ arrays)\nfunction sortCols(table) {\n\tlet head = table[0];\n\tlet rlen = head.length;\n\n\tlet idxs = Array(rlen);\n\tfor (let i = 0; i < idxs.length; i++)\n\t\tidxs[i] = i;\n\n\tidxs.sort((i0, i1) => head[i0] - head[i1]);\n\n\tlet table2 = [];\n\tfor (let i = 0; i < table.length; i++) {\n\t\tlet row = table[i];\n\t\tlet row2 = Array(rlen);\n\n\t\tfor (let j = 0; j < rlen; j++)\n\t\t\trow2[j] = row[idxs[j]];\n\n\t\ttable2.push(row2);\n\t}\n\n\treturn table2;\n}\n\n// test if we can do cheap join (all join fields same)\nfunction allHeadersSame(tables) {\n\tlet vals0 = tables[0][0];\n\tlet len0 = vals0.length;\n\n\tfor (let i = 1; i < tables.length; i++) {\n\t\tlet vals1 = tables[i][0];\n\n\t\tif (vals1.length != len0)\n\t\t\treturn false;\n\n\t\tif (vals1 != vals0) {\n\t\t\tfor (let j = 0; j < len0; j++) {\n\t\t\t\tif (vals1[j] != vals0[j])\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction isAsc(vals, samples = 100) {\n\tconst len = vals.length;\n\n\t// empty or single value\n\tif (len <= 1)\n\t\treturn true;\n\n\t// skip leading & trailing nullish\n\tlet firstIdx = 0;\n\tlet lastIdx = len - 1;\n\n\twhile (firstIdx <= lastIdx && vals[firstIdx] == null)\n\t\tfirstIdx++;\n\n\twhile (lastIdx >= firstIdx && vals[lastIdx] == null)\n\t\tlastIdx--;\n\n\t// all nullish or one value surrounded by nullish\n\tif (lastIdx <= firstIdx)\n\t\treturn true;\n\n\tconst stride = max(1, floor((lastIdx - firstIdx + 1) / samples));\n\n\tfor (let prevVal = vals[firstIdx], i = firstIdx + stride; i <= lastIdx; i += stride) {\n\t\tconst v = vals[i];\n\n\t\tif (v != null) {\n\t\t\tif (v <= prevVal)\n\t\t\t\treturn false;\n\n\t\t\tprevVal = v;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nconst months = [\n\t\"January\",\n\t\"February\",\n\t\"March\",\n\t\"April\",\n\t\"May\",\n\t\"June\",\n\t\"July\",\n\t\"August\",\n\t\"September\",\n\t\"October\",\n\t\"November\",\n\t\"December\",\n];\n\nconst days = [\n\t\"Sunday\",\n\t\"Monday\",\n\t\"Tuesday\",\n\t\"Wednesday\",\n\t\"Thursday\",\n\t\"Friday\",\n\t\"Saturday\",\n];\n\nfunction slice3(str) {\n\treturn str.slice(0, 3);\n}\n\nconst days3 = days.map(slice3);\n\nconst months3 = months.map(slice3);\n\nconst engNames = {\n\tMMMM: months,\n\tMMM:  months3,\n\tWWWW: days,\n\tWWW:  days3,\n};\n\nfunction zeroPad2(int) {\n\treturn (int < 10 ? '0' : '') + int;\n}\n\nfunction zeroPad3(int) {\n\treturn (int < 10 ? '00' : int < 100 ? '0' : '') + int;\n}\n\n/*\nfunction suffix(int) {\n\tlet mod10 = int % 10;\n\n\treturn int + (\n\t\tmod10 == 1 && int != 11 ? \"st\" :\n\t\tmod10 == 2 && int != 12 ? \"nd\" :\n\t\tmod10 == 3 && int != 13 ? \"rd\" : \"th\"\n\t);\n}\n*/\n\nconst subs = {\n\t// 2019\n\tYYYY:\td => d.getFullYear(),\n\t// 19\n\tYY:\t\td => (d.getFullYear()+'').slice(2),\n\t// July\n\tMMMM:\t(d, names) => names.MMMM[d.getMonth()],\n\t// Jul\n\tMMM:\t(d, names) => names.MMM[d.getMonth()],\n\t// 07\n\tMM:\t\td => zeroPad2(d.getMonth()+1),\n\t// 7\n\tM:\t\td => d.getMonth()+1,\n\t// 09\n\tDD:\t\td => zeroPad2(d.getDate()),\n\t// 9\n\tD:\t\td => d.getDate(),\n\t// Monday\n\tWWWW:\t(d, names) => names.WWWW[d.getDay()],\n\t// Mon\n\tWWW:\t(d, names) => names.WWW[d.getDay()],\n\t// 03\n\tHH:\t\td => zeroPad2(d.getHours()),\n\t// 3\n\tH:\t\td => d.getHours(),\n\t// 9 (12hr, unpadded)\n\th:\t\td => {let h = d.getHours(); return h == 0 ? 12 : h > 12 ? h - 12 : h;},\n\t// AM\n\tAA:\t\td => d.getHours() >= 12 ? 'PM' : 'AM',\n\t// am\n\taa:\t\td => d.getHours() >= 12 ? 'pm' : 'am',\n\t// a\n\ta:\t\td => d.getHours() >= 12 ? 'p' : 'a',\n\t// 09\n\tmm:\t\td => zeroPad2(d.getMinutes()),\n\t// 9\n\tm:\t\td => d.getMinutes(),\n\t// 09\n\tss:\t\td => zeroPad2(d.getSeconds()),\n\t// 9\n\ts:\t\td => d.getSeconds(),\n\t// 374\n\tfff:\td => zeroPad3(d.getMilliseconds()),\n};\n\nfunction fmtDate(tpl, names) {\n\tnames = names || engNames;\n\tlet parts = [];\n\n\tlet R = /\\{([a-z]+)\\}|[^{]+/gi, m;\n\n\twhile (m = R.exec(tpl))\n\t\tparts.push(m[0][0] == '{' ? subs[m[1]] : m[0]);\n\n\treturn d => {\n\t\tlet out = '';\n\n\t\tfor (let i = 0; i < parts.length; i++)\n\t\t\tout += typeof parts[i] == \"string\" ? parts[i] : parts[i](d, names);\n\n\t\treturn out;\n\t}\n}\n\nconst localTz = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n// https://stackoverflow.com/questions/15141762/how-to-initialize-a-javascript-date-to-a-particular-time-zone/53652131#53652131\nfunction tzDate(date, tz) {\n\tlet date2;\n\n\t// perf optimization\n\tif (tz == 'UTC' || tz == 'Etc/UTC')\n\t\tdate2 = new Date(+date + date.getTimezoneOffset() * 6e4);\n\telse if (tz == localTz)\n\t\tdate2 = date;\n\telse {\n\t\tdate2 = new Date(date.toLocaleString('en-US', {timeZone: tz}));\n\t\tdate2.setMilliseconds(date.getMilliseconds());\n\t}\n\n\treturn date2;\n}\n\n//export const series = [];\n\n// default formatters:\n\nconst onlyWhole = v => v % 1 == 0;\n\nconst allMults = [1,2,2.5,5];\n\n// ...0.01, 0.02, 0.025, 0.05, 0.1, 0.2, 0.25, 0.5\nconst decIncrs = genIncrs(10, -16, 0, allMults);\n\n// 1, 2, 2.5, 5, 10, 20, 25, 50...\nconst oneIncrs = genIncrs(10, 0, 16, allMults);\n\n// 1, 2,      5, 10, 20, 25, 50...\nconst wholeIncrs = oneIncrs.filter(onlyWhole);\n\nconst numIncrs = decIncrs.concat(oneIncrs);\n\nconst NL = \"\\n\";\n\nconst yyyy    = \"{YYYY}\";\nconst NLyyyy  = NL + yyyy;\nconst md      = \"{M}/{D}\";\nconst NLmd    = NL + md;\nconst NLmdyy  = NLmd + \"/{YY}\";\n\nconst aa      = \"{aa}\";\nconst hmm     = \"{h}:{mm}\";\nconst hmmaa   = hmm + aa;\nconst NLhmmaa = NL + hmmaa;\nconst ss      = \":{ss}\";\n\nconst _ = null;\n\nfunction genTimeStuffs(ms) {\n\tlet\ts  = ms * 1e3,\n\t\tm  = s  * 60,\n\t\th  = m  * 60,\n\t\td  = h  * 24,\n\t\tmo = d  * 30,\n\t\ty  = d  * 365;\n\n\t// min of 1e-3 prevents setting a temporal x ticks too small since Date objects cannot advance ticks smaller than 1ms\n\tlet subSecIncrs = ms == 1 ? genIncrs(10, 0, 3, allMults).filter(onlyWhole) : genIncrs(10, -3, 0, allMults);\n\n\tlet timeIncrs = subSecIncrs.concat([\n\t\t// minute divisors (# of secs)\n\t\ts,\n\t\ts * 5,\n\t\ts * 10,\n\t\ts * 15,\n\t\ts * 30,\n\t\t// hour divisors (# of mins)\n\t\tm,\n\t\tm * 5,\n\t\tm * 10,\n\t\tm * 15,\n\t\tm * 30,\n\t\t// day divisors (# of hrs)\n\t\th,\n\t\th * 2,\n\t\th * 3,\n\t\th * 4,\n\t\th * 6,\n\t\th * 8,\n\t\th * 12,\n\t\t// month divisors TODO: need more?\n\t\td,\n\t\td * 2,\n\t\td * 3,\n\t\td * 4,\n\t\td * 5,\n\t\td * 6,\n\t\td * 7,\n\t\td * 8,\n\t\td * 9,\n\t\td * 10,\n\t\td * 15,\n\t\t// year divisors (# months, approx)\n\t\tmo,\n\t\tmo * 2,\n\t\tmo * 3,\n\t\tmo * 4,\n\t\tmo * 6,\n\t\t// century divisors\n\t\ty,\n\t\ty * 2,\n\t\ty * 5,\n\t\ty * 10,\n\t\ty * 25,\n\t\ty * 50,\n\t\ty * 100,\n\t]);\n\n\t// [0]:   minimum num secs in the tick incr\n\t// [1]:   default tick format\n\t// [2-7]: rollover tick formats\n\t// [8]:   mode: 0: replace [1] -> [2-7], 1: concat [1] + [2-7]\n\tconst _timeAxisStamps = [\n\t//   tick incr    default          year                    month   day                   hour    min       sec   mode\n\t\t[y,           yyyy,            _,                      _,      _,                    _,      _,        _,       1],\n\t\t[d * 28,      \"{MMM}\",         NLyyyy,                 _,      _,                    _,      _,        _,       1],\n\t\t[d,           md,              NLyyyy,                 _,      _,                    _,      _,        _,       1],\n\t\t[h,           \"{h}\" + aa,      NLmdyy,                 _,      NLmd,                 _,      _,        _,       1],\n\t\t[m,           hmmaa,           NLmdyy,                 _,      NLmd,                 _,      _,        _,       1],\n\t\t[s,           ss,              NLmdyy + \" \" + hmmaa,   _,      NLmd + \" \" + hmmaa,   _,      NLhmmaa,  _,       1],\n\t\t[ms,          ss + \".{fff}\",   NLmdyy + \" \" + hmmaa,   _,      NLmd + \" \" + hmmaa,   _,      NLhmmaa,  _,       1],\n\t];\n\n\t// the ensures that axis ticks, values & grid are aligned to logical temporal breakpoints and not an arbitrary timestamp\n\t// https://www.timeanddate.com/time/dst/\n\t// https://www.timeanddate.com/time/dst/2019.html\n\t// https://www.epochconverter.com/timezones\n\tfunction timeAxisSplits(tzDate) {\n\t\treturn (self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace) => {\n\t\t\tlet splits = [];\n\t\t\tlet isYr = foundIncr >= y;\n\t\t\tlet isMo = foundIncr >= mo && foundIncr < y;\n\n\t\t\t// get the timezone-adjusted date\n\t\t\tlet minDate = tzDate(scaleMin);\n\t\t\tlet minDateTs = roundDec(minDate * ms, 3);\n\n\t\t\t// get ts of 12am (this lands us at or before the original scaleMin)\n\t\t\tlet minMin = mkDate(minDate.getFullYear(), isYr ? 0 : minDate.getMonth(), isMo || isYr ? 1 : minDate.getDate());\n\t\t\tlet minMinTs = roundDec(minMin * ms, 3);\n\n\t\t\tif (isMo || isYr) {\n\t\t\t\tlet moIncr = isMo ? foundIncr / mo : 0;\n\t\t\t\tlet yrIncr = isYr ? foundIncr / y  : 0;\n\t\t\t//\tlet tzOffset = scaleMin - minDateTs;\t\t// needed?\n\t\t\t\tlet split = minDateTs == minMinTs ? minDateTs : roundDec(mkDate(minMin.getFullYear() + yrIncr, minMin.getMonth() + moIncr, 1) * ms, 3);\n\t\t\t\tlet splitDate = new Date(round(split / ms));\n\t\t\t\tlet baseYear = splitDate.getFullYear();\n\t\t\t\tlet baseMonth = splitDate.getMonth();\n\n\t\t\t\tfor (let i = 0; split <= scaleMax; i++) {\n\t\t\t\t\tlet next = mkDate(baseYear + yrIncr * i, baseMonth + moIncr * i, 1);\n\t\t\t\t\tlet offs = next - tzDate(roundDec(next * ms, 3));\n\n\t\t\t\t\tsplit = roundDec((+next + offs) * ms, 3);\n\n\t\t\t\t\tif (split <= scaleMax)\n\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet incr0 = foundIncr >= d ? d : foundIncr;\n\t\t\t\tlet tzOffset = floor(scaleMin) - floor(minDateTs);\n\t\t\t\tlet split = minMinTs + tzOffset + incrRoundUp(minDateTs - minMinTs, incr0);\n\t\t\t\tsplits.push(split);\n\n\t\t\t\tlet date0 = tzDate(split);\n\n\t\t\t\tlet prevHour = date0.getHours() + (date0.getMinutes() / m) + (date0.getSeconds() / h);\n\t\t\t\tlet incrHours = foundIncr / h;\n\n\t\t\t\tlet minSpace = self.axes[axisIdx]._space;\n\t\t\t\tlet pctSpace = foundSpace / minSpace;\n\n\t\t\t\twhile (1) {\n\t\t\t\t\tsplit = roundDec(split + foundIncr, ms == 1 ? 0 : 3);\n\n\t\t\t\t\tif (split > scaleMax)\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tif (incrHours > 1) {\n\t\t\t\t\t\tlet expectedHour = floor(roundDec(prevHour + incrHours, 6)) % 24;\n\t\t\t\t\t\tlet splitDate = tzDate(split);\n\t\t\t\t\t\tlet actualHour = splitDate.getHours();\n\n\t\t\t\t\t\tlet dstShift = actualHour - expectedHour;\n\n\t\t\t\t\t\tif (dstShift > 1)\n\t\t\t\t\t\t\tdstShift = -1;\n\n\t\t\t\t\t\tsplit -= dstShift * h;\n\n\t\t\t\t\t\tprevHour = (prevHour + incrHours) % 24;\n\n\t\t\t\t\t\t// add a tick only if it's further than 70% of the min allowed label spacing\n\t\t\t\t\t\tlet prevSplit = splits[splits.length - 1];\n\t\t\t\t\t\tlet pctIncr = roundDec((split - prevSplit) / foundIncr, 3);\n\n\t\t\t\t\t\tif (pctIncr * pctSpace >= .7)\n\t\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn splits;\n\t\t}\n\t}\n\n\treturn [\n\t\ttimeIncrs,\n\t\t_timeAxisStamps,\n\t\ttimeAxisSplits,\n\t];\n}\n\nconst [ timeIncrsMs, _timeAxisStampsMs, timeAxisSplitsMs ] = genTimeStuffs(1);\nconst [ timeIncrsS,  _timeAxisStampsS,  timeAxisSplitsS  ] = genTimeStuffs(1e-3);\n\n// base 2\ngenIncrs(2, -53, 53, [1]);\n\n/*\nconsole.log({\n\tdecIncrs,\n\toneIncrs,\n\twholeIncrs,\n\tnumIncrs,\n\ttimeIncrs,\n\tfixedDec,\n});\n*/\n\nfunction timeAxisStamps(stampCfg, fmtDate) {\n\treturn stampCfg.map(s => s.map((v, i) =>\n\t\ti == 0 || i == 8 || v == null ? v : fmtDate(i == 1 || s[8] == 0 ? v : s[1] + v)\n\t));\n}\n\n// TODO: will need to accept spaces[] and pull incr into the loop when grid will be non-uniform, eg for log scales.\n// currently we ignore this for months since they're *nearly* uniform and the added complexity is not worth it\nfunction timeAxisVals(tzDate, stamps) {\n\treturn (self, splits, axisIdx, foundSpace, foundIncr) => {\n\t\tlet s = stamps.find(s => foundIncr >= s[0]) || stamps[stamps.length - 1];\n\n\t\t// these track boundaries when a full label is needed again\n\t\tlet prevYear;\n\t\tlet prevMnth;\n\t\tlet prevDate;\n\t\tlet prevHour;\n\t\tlet prevMins;\n\t\tlet prevSecs;\n\n\t\treturn splits.map(split => {\n\t\t\tlet date = tzDate(split);\n\n\t\t\tlet newYear = date.getFullYear();\n\t\t\tlet newMnth = date.getMonth();\n\t\t\tlet newDate = date.getDate();\n\t\t\tlet newHour = date.getHours();\n\t\t\tlet newMins = date.getMinutes();\n\t\t\tlet newSecs = date.getSeconds();\n\n\t\t\tlet stamp = (\n\t\t\t\tnewYear != prevYear && s[2] ||\n\t\t\t\tnewMnth != prevMnth && s[3] ||\n\t\t\t\tnewDate != prevDate && s[4] ||\n\t\t\t\tnewHour != prevHour && s[5] ||\n\t\t\t\tnewMins != prevMins && s[6] ||\n\t\t\t\tnewSecs != prevSecs && s[7] ||\n\t\t\t\t                       s[1]\n\t\t\t);\n\n\t\t\tprevYear = newYear;\n\t\t\tprevMnth = newMnth;\n\t\t\tprevDate = newDate;\n\t\t\tprevHour = newHour;\n\t\t\tprevMins = newMins;\n\t\t\tprevSecs = newSecs;\n\n\t\t\treturn stamp(date);\n\t\t});\n\t}\n}\n\n// for when axis.values is defined as a static fmtDate template string\nfunction timeAxisVal(tzDate, dateTpl) {\n\tlet stamp = fmtDate(dateTpl);\n\treturn (self, splits, axisIdx, foundSpace, foundIncr) => splits.map(split => stamp(tzDate(split)));\n}\n\nfunction mkDate(y, m, d) {\n\treturn new Date(y, m, d);\n}\n\nfunction timeSeriesStamp(stampCfg, fmtDate) {\n\treturn fmtDate(stampCfg);\n}\nconst _timeSeriesStamp = '{YYYY}-{MM}-{DD} {h}:{mm}{aa}';\n\nfunction timeSeriesVal(tzDate, stamp) {\n\treturn (self, val, seriesIdx, dataIdx) => dataIdx == null ? LEGEND_DISP : stamp(tzDate(val));\n}\n\nfunction legendStroke(self, seriesIdx) {\n\tlet s = self.series[seriesIdx];\n\treturn s.width ? s.stroke(self, seriesIdx) : s.points.width ? s.points.stroke(self, seriesIdx) : null;\n}\n\nfunction legendFill(self, seriesIdx) {\n\treturn self.series[seriesIdx].fill(self, seriesIdx);\n}\n\nconst legendOpts = {\n\tshow: true,\n\tlive: true,\n\tisolate: false,\n\tmount: noop,\n\tmarkers: {\n\t\tshow: true,\n\t\twidth: 2,\n\t\tstroke: legendStroke,\n\t\tfill: legendFill,\n\t\tdash: \"solid\",\n\t},\n\tidx: null,\n\tidxs: null,\n\tvalues: [],\n};\n\nfunction cursorPointShow(self, si) {\n\tlet o = self.cursor.points;\n\n\tlet pt = placeDiv();\n\n\tlet size = o.size(self, si);\n\tsetStylePx(pt, WIDTH, size);\n\tsetStylePx(pt, HEIGHT, size);\n\n\tlet mar = size / -2;\n\tsetStylePx(pt, \"marginLeft\", mar);\n\tsetStylePx(pt, \"marginTop\", mar);\n\n\tlet width = o.width(self, si, size);\n\twidth && setStylePx(pt, \"borderWidth\", width);\n\n\treturn pt;\n}\n\nfunction cursorPointFill(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp._fill || sp._stroke;\n}\n\nfunction cursorPointStroke(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp._stroke || sp._fill;\n}\n\nfunction cursorPointSize(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp.size;\n}\n\nfunction dataIdx(self, seriesIdx, cursorIdx) {\n\treturn cursorIdx;\n}\n\nconst moveTuple = [0,0];\n\nfunction cursorMove(self, mouseLeft1, mouseTop1) {\n\tmoveTuple[0] = mouseLeft1;\n\tmoveTuple[1] = mouseTop1;\n\treturn moveTuple;\n}\n\nfunction filtBtn0(self, targ, handle, onlyTarg = true) {\n\treturn e => {\n\t\te.button == 0 && (!onlyTarg || e.target == targ) && handle(e);\n\t};\n}\n\nfunction filtTarg(self, targ, handle, onlyTarg = true) {\n\treturn e => {\n\t\t(!onlyTarg || e.target == targ) && handle(e);\n\t};\n}\n\nconst cursorOpts = {\n\tshow: true,\n\tx: true,\n\ty: true,\n\tlock: false,\n\tmove: cursorMove,\n\tpoints: {\n\t\tshow:   cursorPointShow,\n\t\tsize:   cursorPointSize,\n\t\twidth:  0,\n\t\tstroke: cursorPointStroke,\n\t\tfill:   cursorPointFill,\n\t},\n\n\tbind: {\n\t\tmousedown:   filtBtn0,\n\t\tmouseup:     filtBtn0,\n\t\tclick:       filtBtn0, // legend clicks, not .u-over clicks\n\t\tdblclick:    filtBtn0,\n\n\t\tmousemove:   filtTarg,\n\t\tmouseleave:  filtTarg,\n\t\tmouseenter:  filtTarg,\n\t},\n\n\tdrag: {\n\t\tsetScale: true,\n\t\tx: true,\n\t\ty: false,\n\t\tdist: 0,\n\t\tuni: null,\n\t\tclick: (self, e) => {\n\t\t//\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te.stopImmediatePropagation();\n\t\t},\n\t\t_x: false,\n\t\t_y: false,\n\t},\n\n\tfocus: {\n\t\tprox: -1,\n\t\tbias: 0,\n\t},\n\n\tleft: -10,\n\ttop: -10,\n\tidx: null,\n\tdataIdx,\n\tidxs: null,\n\n\tevent: null,\n};\n\nconst axisLines = {\n\tshow: true,\n\tstroke: \"rgba(0,0,0,0.07)\",\n\twidth: 2,\n//\tdash: [],\n};\n\nconst grid = assign({}, axisLines, {\n\tfilter: retArg1,\n});\n\nconst ticks = assign({}, grid, {\n\tsize: 10,\n});\n\nconst border = assign({}, axisLines, {\n\tshow: false,\n});\n\nconst font      = '12px system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"';\nconst labelFont = \"bold \" + font;\nconst lineGap = 1.5;\t// font-size multiplier\n\nconst xAxisOpts = {\n\tshow: true,\n\tscale: \"x\",\n\tstroke: hexBlack,\n\tspace: 50,\n\tgap: 5,\n\tsize: 50,\n\tlabelGap: 0,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 2,\n//\tclass: \"x-vals\",\n//\tincrs: timeIncrs,\n//\tvalues: timeVals,\n//\tfilter: retArg1,\n\tgrid,\n\tticks,\n\tborder,\n\tfont,\n\tlineGap,\n\trotate: 0,\n};\n\nconst numSeriesLabel = \"Value\";\nconst timeSeriesLabel = \"Time\";\n\nconst xSeriesOpts = {\n\tshow: true,\n\tscale: \"x\",\n\tauto: false,\n\tsorted: 1,\n//\tlabel: \"Time\",\n//\tvalue: v => stamp(new Date(v * 1e3)),\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n};\n\nfunction numAxisVals(self, splits, axisIdx, foundSpace, foundIncr) {\n\treturn splits.map(v => v == null ? \"\" : fmtNum(v));\n}\n\nfunction numAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tlet splits = [];\n\n\tlet numDec = fixedDec.get(foundIncr) || 0;\n\n\tscaleMin = forceMin ? scaleMin : roundDec(incrRoundUp(scaleMin, foundIncr), numDec);\n\n\tfor (let val = scaleMin; val <= scaleMax; val = roundDec(val + foundIncr, numDec))\n\t\tsplits.push(Object.is(val, -0) ? 0 : val);\t\t// coalesces -0\n\n\treturn splits;\n}\n\n// this doesnt work for sin, which needs to come off from 0 independently in pos and neg dirs\nfunction logAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tconst splits = [];\n\n\tconst logBase = self.scales[self.axes[axisIdx].scale].log;\n\n\tconst logFn = logBase == 10 ? log10 : log2;\n\n\tconst exp = floor(logFn(scaleMin));\n\n\tfoundIncr = pow(logBase, exp);\n\n\tif (logBase == 10 && exp < 0)\n\t\tfoundIncr = roundDec(foundIncr, -exp);\n\n\tlet split = scaleMin;\n\n\tdo {\n\t\tsplits.push(split);\n\t\tsplit = split + foundIncr;\n\n\t\tif (logBase == 10)\n\t\t\tsplit = roundDec(split, fixedDec.get(foundIncr));\n\n\t\tif (split >= foundIncr * logBase)\n\t\t\tfoundIncr = split;\n\n\t} while (split <= scaleMax);\n\n\treturn splits;\n}\n\nfunction asinhAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tlet sc = self.scales[self.axes[axisIdx].scale];\n\n\tlet linthresh = sc.asinh;\n\n\tlet posSplits = scaleMax > linthresh ? logAxisSplits(self, axisIdx, max(linthresh, scaleMin), scaleMax, foundIncr) : [linthresh];\n\tlet zero = scaleMax >= 0 && scaleMin <= 0 ? [0] : [];\n\tlet negSplits = scaleMin < -linthresh ? logAxisSplits(self, axisIdx, max(linthresh, -scaleMax), -scaleMin, foundIncr): [linthresh];\n\n\treturn negSplits.reverse().map(v => -v).concat(zero, posSplits);\n}\n\nconst RE_ALL   = /./;\nconst RE_12357 = /[12357]/;\nconst RE_125   = /[125]/;\nconst RE_1     = /1/;\n\nconst _filt = (splits, distr, re, keepMod) => splits.map((v, i) => ((distr == 4 && v == 0) || i % keepMod == 0 && re.test(v.toExponential()[v < 0 ? 1 : 0])) ? v : null);\n\nfunction log10AxisValsFilt(self, splits, axisIdx, foundSpace, foundIncr) {\n\tlet axis = self.axes[axisIdx];\n\tlet scaleKey = axis.scale;\n\tlet sc = self.scales[scaleKey];\n\n//\tif (sc.distr == 3 && sc.log == 2)\n//\t\treturn splits;\n\n\tlet valToPos = self.valToPos;\n\n\tlet minSpace = axis._space;\n\n\tlet _10 = valToPos(10, scaleKey);\n\n\tlet re = (\n\t\tvalToPos(9, scaleKey) - _10 >= minSpace ? RE_ALL :\n\t\tvalToPos(7, scaleKey) - _10 >= minSpace ? RE_12357 :\n\t\tvalToPos(5, scaleKey) - _10 >= minSpace ? RE_125 :\n\t\tRE_1\n\t);\n\n\tif (re == RE_1) {\n\t\tlet magSpace = abs(valToPos(1, scaleKey) - _10);\n\n\t\tif (magSpace < minSpace)\n\t\t\treturn _filt(splits.slice().reverse(), sc.distr, re, ceil(minSpace / magSpace)).reverse(); // max->min skip\n\t}\n\n\treturn _filt(splits, sc.distr, re, 1);\n}\n\nfunction log2AxisValsFilt(self, splits, axisIdx, foundSpace, foundIncr) {\n\tlet axis = self.axes[axisIdx];\n\tlet scaleKey = axis.scale;\n\tlet minSpace = axis._space;\n\tlet valToPos = self.valToPos;\n\n\tlet magSpace = abs(valToPos(1, scaleKey) - valToPos(2, scaleKey));\n\n\tif (magSpace < minSpace)\n\t\treturn _filt(splits.slice().reverse(), 3, RE_ALL, ceil(minSpace / magSpace)).reverse(); // max->min skip\n\n\treturn splits;\n}\n\nfunction numSeriesVal(self, val, seriesIdx, dataIdx) {\n\treturn dataIdx == null ? LEGEND_DISP : val == null ? \"\" : fmtNum(val);\n}\n\nconst yAxisOpts = {\n\tshow: true,\n\tscale: \"y\",\n\tstroke: hexBlack,\n\tspace: 30,\n\tgap: 5,\n\tsize: 50,\n\tlabelGap: 0,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 3,\n//\tclass: \"y-vals\",\n//\tincrs: numIncrs,\n//\tvalues: (vals, space) => vals,\n//\tfilter: retArg1,\n\tgrid,\n\tticks,\n\tborder,\n\tfont,\n\tlineGap,\n\trotate: 0,\n};\n\n// takes stroke width\nfunction ptDia(width, mult) {\n\tlet dia = 3 + (width || 1) * 2;\n\treturn roundDec(dia * mult, 3);\n}\n\nfunction seriesPointsShow(self, si) {\n\tlet { scale, idxs } = self.series[0];\n\tlet xData = self._data[0];\n\tlet p0 = self.valToPos(xData[idxs[0]], scale, true);\n\tlet p1 = self.valToPos(xData[idxs[1]], scale, true);\n\tlet dim = abs(p1 - p0);\n\n\tlet s = self.series[si];\n//\tconst dia = ptDia(s.width, pxRatio);\n\tlet maxPts = dim / (s.points.space * pxRatio);\n\treturn idxs[1] - idxs[0] <= maxPts;\n}\n\nconst facet = {\n\tscale: null,\n\tauto: true,\n\tsorted: 0,\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n};\n\nconst gaps = (self, seriesIdx, idx0, idx1, nullGaps) => nullGaps;\n\nconst xySeriesOpts = {\n\tshow: true,\n\tauto: true,\n\tsorted: 0,\n\tgaps,\n\talpha: 1,\n\tfacets: [\n\t\tassign({}, facet, {scale: 'x'}),\n\t\tassign({}, facet, {scale: 'y'}),\n\t],\n};\n\nconst ySeriesOpts = {\n\tscale: \"y\",\n\tauto: true,\n\tsorted: 0,\n\tshow: true,\n\tspanGaps: false,\n\tgaps,\n\talpha: 1,\n\tpoints: {\n\t\tshow: seriesPointsShow,\n\t\tfilter: null,\n\t//  paths:\n\t//\tstroke: \"#000\",\n\t//\tfill: \"#fff\",\n\t//\twidth: 1,\n\t//\tsize: 10,\n\t},\n//\tlabel: \"Value\",\n//\tvalue: v => v,\n\tvalues: null,\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n\n\tpath: null,\n\tclip: null,\n};\n\nfunction clampScale(self, val, scaleMin, scaleMax, scaleKey) {\n/*\n\tif (val < 0) {\n\t\tlet cssHgt = self.bbox.height / pxRatio;\n\t\tlet absPos = self.valToPos(abs(val), scaleKey);\n\t\tlet fromBtm = cssHgt - absPos;\n\t\treturn self.posToVal(cssHgt + fromBtm, scaleKey);\n\t}\n*/\n\treturn scaleMin / 10;\n}\n\nconst xScaleOpts = {\n\ttime: FEAT_TIME,\n\tauto: true,\n\tdistr: 1,\n\tlog: 10,\n\tasinh: 1,\n\tmin: null,\n\tmax: null,\n\tdir: 1,\n\tori: 0,\n};\n\nconst yScaleOpts = assign({}, xScaleOpts, {\n\ttime: false,\n\tori: 1,\n});\n\nconst syncs = {};\n\nfunction _sync(key, opts) {\n\tlet s = syncs[key];\n\n\tif (!s) {\n\t\ts = {\n\t\t\tkey,\n\t\t\tplots: [],\n\t\t\tsub(plot) {\n\t\t\t\ts.plots.push(plot);\n\t\t\t},\n\t\t\tunsub(plot) {\n\t\t\t\ts.plots = s.plots.filter(c => c != plot);\n\t\t\t},\n\t\t\tpub(type, self, x, y, w, h, i) {\n\t\t\t\tfor (let j = 0; j < s.plots.length; j++)\n\t\t\t\t\ts.plots[j] != self && s.plots[j].pub(type, self, x, y, w, h, i);\n\t\t\t},\n\t\t};\n\n\t\tif (key != null)\n\t\t\tsyncs[key] = s;\n\t}\n\n\treturn s;\n}\n\nconst BAND_CLIP_FILL   = 1 << 0;\nconst BAND_CLIP_STROKE = 1 << 1;\n\nfunction orient(u, seriesIdx, cb) {\n\tconst mode = u.mode;\n\tconst series = u.series[seriesIdx];\n\tconst data = mode == 2 ? u._data[seriesIdx] : u._data;\n\tconst scales = u.scales;\n\tconst bbox   = u.bbox;\n\n\tlet dx = data[0],\n\t\tdy = mode == 2 ? data[1] : data[seriesIdx],\n\t\tsx = mode == 2 ? scales[series.facets[0].scale] : scales[u.series[0].scale],\n\t\tsy = mode == 2 ? scales[series.facets[1].scale] : scales[series.scale],\n\t\tl = bbox.left,\n\t\tt = bbox.top,\n\t\tw = bbox.width,\n\t\th = bbox.height,\n\t\tH = u.valToPosH,\n\t\tV = u.valToPosV;\n\n\treturn (sx.ori == 0\n\t\t? cb(\n\t\t\tseries,\n\t\t\tdx,\n\t\t\tdy,\n\t\t\tsx,\n\t\t\tsy,\n\t\t\tH,\n\t\t\tV,\n\t\t\tl,\n\t\t\tt,\n\t\t\tw,\n\t\t\th,\n\t\t\tmoveToH,\n\t\t\tlineToH,\n\t\t\trectH,\n\t\t\tarcH,\n\t\t\tbezierCurveToH,\n\t\t)\n\t\t: cb(\n\t\t\tseries,\n\t\t\tdx,\n\t\t\tdy,\n\t\t\tsx,\n\t\t\tsy,\n\t\t\tV,\n\t\t\tH,\n\t\t\tt,\n\t\t\tl,\n\t\t\th,\n\t\t\tw,\n\t\t\tmoveToV,\n\t\t\tlineToV,\n\t\t\trectV,\n\t\t\tarcV,\n\t\t\tbezierCurveToV,\n\t\t)\n\t);\n}\n\nfunction bandFillClipDirs(self, seriesIdx) {\n\tlet fillDir = 0;\n\n\t// 2 bits, -1 | 1\n\tlet clipDirs = 0;\n\n\tlet bands = ifNull(self.bands, EMPTY_ARR);\n\n\tfor (let i = 0; i < bands.length; i++) {\n\t\tlet b = bands[i];\n\n\t\t// is a \"from\" band edge\n\t\tif (b.series[0] == seriesIdx)\n\t\t\tfillDir = b.dir;\n\t\t// is a \"to\" band edge\n\t\telse if (b.series[1] == seriesIdx) {\n\t\t\tif (b.dir == 1)\n\t\t\t\tclipDirs |= 1;\n\t\t\telse\n\t\t\t\tclipDirs |= 2;\n\t\t}\n\t}\n\n\treturn [\n\t\tfillDir,\n\t\t(\n\t\t\tclipDirs == 1 ? -1 : // neg only\n\t\t\tclipDirs == 2 ?  1 : // pos only\n\t\t\tclipDirs == 3 ?  2 : // both\n\t\t\t                 0   // neither\n\t\t)\n\t];\n}\n\nfunction seriesFillTo(self, seriesIdx, dataMin, dataMax, bandFillDir) {\n\tlet mode = self.mode;\n\tlet series = self.series[seriesIdx];\n\tlet scaleKey = mode == 2 ? series.facets[1].scale : series.scale;\n\tlet scale = self.scales[scaleKey];\n\n\treturn (\n\t\tbandFillDir == -1 ? scale.min :\n\t\tbandFillDir ==  1 ? scale.max :\n\t\tscale.distr ==  3 ? (\n\t\t\tscale.dir == 1 ? scale.min :\n\t\t\tscale.max\n\t\t) : 0\n\t);\n}\n\n// creates inverted band clip path (from stroke path -> yMax || yMin)\n// clipDir is always inverse of fillDir\n// default clip dir is upwards (1), since default band fill is downwards/fillBelowTo (-1) (highIdx -> lowIdx)\nfunction clipBandLine(self, seriesIdx, idx0, idx1, strokePath, clipDir) {\n\treturn orient(self, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\tlet pxRound = series.pxRound;\n\n\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\t\tconst lineTo = scaleX.ori == 0 ? lineToH : lineToV;\n\n\t\tlet frIdx, toIdx;\n\n\t\tif (dir == 1) {\n\t\t\tfrIdx = idx0;\n\t\t\ttoIdx = idx1;\n\t\t}\n\t\telse {\n\t\t\tfrIdx = idx1;\n\t\t\ttoIdx = idx0;\n\t\t}\n\n\t\t// path start\n\t\tlet x0 = pxRound(valToPosX(dataX[frIdx], scaleX, xDim, xOff));\n\t\tlet y0 = pxRound(valToPosY(dataY[frIdx], scaleY, yDim, yOff));\n\t\t// path end x\n\t\tlet x1 = pxRound(valToPosX(dataX[toIdx], scaleX, xDim, xOff));\n\t\t// upper or lower y limit\n\t\tlet yLimit = pxRound(valToPosY(clipDir == 1 ? scaleY.max : scaleY.min, scaleY, yDim, yOff));\n\n\t\tlet clip = new Path2D(strokePath);\n\n\t\tlineTo(clip, x1, yLimit);\n\t\tlineTo(clip, x0, yLimit);\n\t\tlineTo(clip, x0, y0);\n\n\t\treturn clip;\n\t});\n}\n\nfunction clipGaps(gaps, ori, plotLft, plotTop, plotWid, plotHgt) {\n\tlet clip = null;\n\n\t// create clip path (invert gaps and non-gaps)\n\tif (gaps.length > 0) {\n\t\tclip = new Path2D();\n\n\t\tconst rect = ori == 0 ? rectH : rectV;\n\n\t\tlet prevGapEnd = plotLft;\n\n\t\tfor (let i = 0; i < gaps.length; i++) {\n\t\t\tlet g = gaps[i];\n\n\t\t\tif (g[1] > g[0]) {\n\t\t\t\tlet w = g[0] - prevGapEnd;\n\n\t\t\t\tw > 0 && rect(clip, prevGapEnd, plotTop, w, plotTop + plotHgt);\n\n\t\t\t\tprevGapEnd = g[1];\n\t\t\t}\n\t\t}\n\n\t\tlet w = plotLft + plotWid - prevGapEnd;\n\n\t\t// hack to ensure we expand the clip enough to avoid cutting off strokes at edges\n\t\tlet maxStrokeWidth = 10;\n\n\t\tw > 0 && rect(clip, prevGapEnd, plotTop - maxStrokeWidth / 2, w, plotTop + plotHgt + maxStrokeWidth);\n\t}\n\n\treturn clip;\n}\n\nfunction addGap(gaps, fromX, toX) {\n\tlet prevGap = gaps[gaps.length - 1];\n\n\tif (prevGap && prevGap[0] == fromX)\t\t\t// TODO: gaps must be encoded at stroke widths?\n\t\tprevGap[1] = toX;\n\telse\n\t\tgaps.push([fromX, toX]);\n}\n\nfunction findGaps(xs, ys, idx0, idx1, dir, pixelForX, align) {\n\tlet gaps = [];\n\tlet len = xs.length;\n\n\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\tlet yVal = ys[i];\n\n\t\tif (yVal === null) {\n\t\t\tlet fr = i, to = i;\n\n\t\t\tif (dir == 1) {\n\t\t\t\twhile (++i <= idx1 && ys[i] === null)\n\t\t\t\t\tto = i;\n\t\t\t}\n\t\t\telse {\n\t\t\t\twhile (--i >= idx0 && ys[i] === null)\n\t\t\t\t\tto = i;\n\t\t\t}\n\n\t\t\tlet frPx = pixelForX(xs[fr]);\n\t\t\tlet toPx = to == fr ? frPx : pixelForX(xs[to]);\n\n\t\t\t// if value adjacent to edge null is same pixel, then it's partially\n\t\t\t// filled and gap should start at next pixel\n\t\t\tlet fri2 = fr - dir;\n\t\t\tlet frPx2 = align <= 0 && fri2 >= 0 && fri2 < len ? pixelForX(xs[fri2]) : frPx;\n\t\t//\tif (frPx2 == frPx)\n\t\t//\t\tfrPx++;\n\t\t//\telse\n\t\t\t\tfrPx = frPx2;\n\n\t\t\tlet toi2 = to + dir;\n\t\t\tlet toPx2 = align >= 0 && toi2 >= 0 && toi2 < len ? pixelForX(xs[toi2]) : toPx;\n\t\t//\tif (toPx2 == toPx)\n\t\t//\t\ttoPx--;\n\t\t//\telse\n\t\t\t\ttoPx = toPx2;\n\n\t\t\tif (toPx >= frPx)\n\t\t\t\tgaps.push([frPx, toPx]); // addGap\n\t\t}\n\t}\n\n\treturn gaps;\n}\n\nfunction pxRoundGen(pxAlign) {\n\treturn pxAlign == 0 ? retArg0 : pxAlign == 1 ? round : v => incrRound(v, pxAlign);\n}\n\nfunction rect(ori) {\n\tlet moveTo = ori == 0 ?\n\t\tmoveToH :\n\t\tmoveToV;\n\n\tlet arcTo = ori == 0 ?\n\t\t(p, x1, y1, x2, y2, r) => { p.arcTo(x1, y1, x2, y2, r); } :\n\t\t(p, y1, x1, y2, x2, r) => { p.arcTo(x1, y1, x2, y2, r); };\n\n\tlet rect = ori == 0 ?\n\t\t(p, x, y, w, h) => { p.rect(x, y, w, h); } :\n\t\t(p, y, x, h, w) => { p.rect(x, y, w, h); };\n\n\t// TODO (pending better browser support): https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/roundRect\n\treturn (p, x, y, w, h, endRad = 0, baseRad = 0) => {\n\t\tif (endRad == 0 && baseRad == 0)\n\t\t\trect(p, x, y, w, h);\n\t\telse {\n\t\t\tendRad  = min(endRad,  w / 2, h / 2);\n\t\t\tbaseRad = min(baseRad, w / 2, h / 2);\n\n\t\t\t// adapted from https://stackoverflow.com/questions/1255512/how-to-draw-a-rounded-rectangle-using-html-canvas/7838871#7838871\n\t\t\tmoveTo(p, x + endRad, y);\n\t\t\tarcTo(p, x + w, y, x + w, y + h, endRad);\n\t\t\tarcTo(p, x + w, y + h, x, y + h, baseRad);\n\t\t\tarcTo(p, x, y + h, x, y, baseRad);\n\t\t\tarcTo(p, x, y, x + w, y, endRad);\n\t\t\tp.closePath();\n\t\t}\n\t};\n}\n\n// orientation-inverting canvas functions\nconst moveToH = (p, x, y) => { p.moveTo(x, y); };\nconst moveToV = (p, y, x) => { p.moveTo(x, y); };\nconst lineToH = (p, x, y) => { p.lineTo(x, y); };\nconst lineToV = (p, y, x) => { p.lineTo(x, y); };\nconst rectH = rect(0);\nconst rectV = rect(1);\nconst arcH = (p, x, y, r, startAngle, endAngle) => { p.arc(x, y, r, startAngle, endAngle); };\nconst arcV = (p, y, x, r, startAngle, endAngle) => { p.arc(x, y, r, startAngle, endAngle); };\nconst bezierCurveToH = (p, bp1x, bp1y, bp2x, bp2y, p2x, p2y) => { p.bezierCurveTo(bp1x, bp1y, bp2x, bp2y, p2x, p2y); };\nconst bezierCurveToV = (p, bp1y, bp1x, bp2y, bp2x, p2y, p2x) => { p.bezierCurveTo(bp1x, bp1y, bp2x, bp2y, p2x, p2y); };\n\n// TODO: drawWrap(seriesIdx, drawPoints) (save, restore, translate, clip)\nfunction points(opts) {\n\treturn (u, seriesIdx, idx0, idx1, filtIdxs) => {\n\t//\tlog(\"drawPoints()\", arguments);\n\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet { pxRound, points } = series;\n\n\t\t\tlet moveTo, arc;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tmoveTo = moveToH;\n\t\t\t\tarc = arcH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmoveTo = moveToV;\n\t\t\t\tarc = arcV;\n\t\t\t}\n\n\t\t\tconst width = roundDec(points.width * pxRatio, 3);\n\n\t\t\tlet rad = (points.size - points.width) / 2 * pxRatio;\n\t\t\tlet dia = roundDec(rad * 2, 3);\n\n\t\t\tlet fill = new Path2D();\n\t\t\tlet clip = new Path2D();\n\n\t\t\tlet { left: lft, top: top, width: wid, height: hgt } = u.bbox;\n\n\t\t\trectH(clip,\n\t\t\t\tlft - dia,\n\t\t\t\ttop - dia,\n\t\t\t\twid + dia * 2,\n\t\t\t\thgt + dia * 2,\n\t\t\t);\n\n\t\t\tconst drawPoint = pi => {\n\t\t\t\tif (dataY[pi] != null) {\n\t\t\t\t\tlet x = pxRound(valToPosX(dataX[pi], scaleX, xDim, xOff));\n\t\t\t\t\tlet y = pxRound(valToPosY(dataY[pi], scaleY, yDim, yOff));\n\n\t\t\t\t\tmoveTo(fill, x + rad, y);\n\t\t\t\t\tarc(fill, x, y, rad, 0, PI * 2);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (filtIdxs)\n\t\t\t\tfiltIdxs.forEach(drawPoint);\n\t\t\telse {\n\t\t\t\tfor (let pi = idx0; pi <= idx1; pi++)\n\t\t\t\t\tdrawPoint(pi);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tstroke: width > 0 ? fill : null,\n\t\t\t\tfill,\n\t\t\t\tclip,\n\t\t\t\tflags: BAND_CLIP_FILL | BAND_CLIP_STROKE,\n\t\t\t};\n\t\t});\n\t};\n}\n\nfunction _drawAcc(lineTo) {\n\treturn (stroke, accX, minY, maxY, inY, outY) => {\n\t\tif (minY != maxY) {\n\t\t\tif (inY != minY && outY != minY)\n\t\t\t\tlineTo(stroke, accX, minY);\n\t\t\tif (inY != maxY && outY != maxY)\n\t\t\t\tlineTo(stroke, accX, maxY);\n\n\t\t\tlineTo(stroke, accX, outY);\n\t\t}\n\t};\n}\n\nconst drawAccH = _drawAcc(lineToH);\nconst drawAccV = _drawAcc(lineToV);\n\nfunction linear(opts) {\n\tconst alignGaps = ifNull(opts?.alignGaps, 0);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet lineTo, drawAcc;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tlineTo = lineToH;\n\t\t\t\tdrawAcc = drawAccH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlineTo = lineToV;\n\t\t\t\tdrawAcc = drawAccV;\n\t\t\t}\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tconst _paths = {stroke: new Path2D(), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tlet minY = inf,\n\t\t\t\tmaxY = -inf,\n\t\t\t\tinY, outY, drawnAtX;\n\n\t\t\tlet accX = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\n\t\t\t// data edges\n\t\t\tlet lftIdx = nonNullIdx(dataY, idx0, idx1,  1 * dir);\n\t\t\tlet rgtIdx = nonNullIdx(dataY, idx0, idx1, -1 * dir);\n\t\t\tlet lftX   =  pixelForX(dataX[lftIdx]);\n\t\t\tlet rgtX   =  pixelForX(dataX[rgtIdx]);\n\n\t\t\tlet hasGap = false;\n\n\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\tlet x = pixelForX(dataX[i]);\n\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\tif (x == accX) {\n\t\t\t\t\tif (yVal != null) {\n\t\t\t\t\t\toutY = pixelForY(yVal);\n\n\t\t\t\t\t\tif (minY == inf) {\n\t\t\t\t\t\t\tlineTo(stroke, x, outY);\n\t\t\t\t\t\t\tinY = outY;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tminY = min(outY, minY);\n\t\t\t\t\t\tmaxY = max(outY, maxY);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (yVal === null)\n\t\t\t\t\t\t\thasGap = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (minY != inf) {\n\t\t\t\t\t\tdrawAcc(stroke, accX, minY, maxY, inY, outY);\n\t\t\t\t\t\tdrawnAtX = accX;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yVal != null) {\n\t\t\t\t\t\toutY = pixelForY(yVal);\n\t\t\t\t\t\tlineTo(stroke, x, outY);\n\t\t\t\t\t\tminY = maxY = inY = outY;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tminY = inf;\n\t\t\t\t\t\tmaxY = -inf;\n\n\t\t\t\t\t\tif (yVal === null)\n\t\t\t\t\t\t\thasGap = true;\n\t\t\t\t\t}\n\n\t\t\t\t\taccX = x;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (minY != inf && minY != maxY && drawnAtX != accX)\n\t\t\t\tdrawAcc(stroke, accX, minY, maxY, inY, outY);\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillToVal = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillToVal);\n\n\t\t\t\tlineTo(fill, rgtX, fillToY);\n\t\t\t\tlineTo(fill, lftX, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) {\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\thasGap && gaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}\n\n// BUG: align: -1 behaves like align: 1 when scale.dir: -1\nfunction stepped(opts) {\n\tconst align = ifNull(opts.align, 1);\n\t// whether to draw ascenders/descenders at null/gap bondaries\n\tconst ascDesc = ifNull(opts.ascDesc, false);\n\tconst alignGaps = ifNull(opts.alignGaps, 0);\n\tconst extend = ifNull(opts.extend, false);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet { left, width } = u.bbox;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet lineTo = scaleX.ori == 0 ? lineToH : lineToV;\n\n\t\t\tconst _paths = {stroke: new Path2D(), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tidx0 = nonNullIdx(dataY, idx0, idx1,  1);\n\t\t\tidx1 = nonNullIdx(dataY, idx0, idx1, -1);\n\n\t\t\tlet prevYPos  = pixelForY(dataY[dir == 1 ? idx0 : idx1]);\n\t\t\tlet firstXPos = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\t\t\tlet prevXPos = firstXPos;\n\n\t\t\tlet firstXPosExt = firstXPos;\n\n\t\t\tif (extend && align == -1) {\n\t\t\t\tfirstXPosExt = left;\n\t\t\t\tlineTo(stroke, firstXPosExt, prevYPos);\n\t\t\t}\n\n\t\t\tlineTo(stroke, firstXPos, prevYPos);\n\n\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\tlet yVal1 = dataY[i];\n\n\t\t\t\tif (yVal1 == null)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet x1 = pixelForX(dataX[i]);\n\t\t\t\tlet y1 = pixelForY(yVal1);\n\n\t\t\t\tif (align == 1)\n\t\t\t\t\tlineTo(stroke, x1, prevYPos);\n\t\t\t\telse\n\t\t\t\t\tlineTo(stroke, prevXPos, y1);\n\n\t\t\t\tlineTo(stroke, x1, y1);\n\n\t\t\t\tprevYPos = y1;\n\t\t\t\tprevXPos = x1;\n\t\t\t}\n\n\t\t\tlet prevXPosExt = prevXPos;\n\n\t\t\tif (extend && align == 1) {\n\t\t\t\tprevXPosExt = left + width;\n\t\t\t\tlineTo(stroke, prevXPosExt, prevYPos);\n\t\t\t}\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillTo = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillTo);\n\n\t\t\t\tlineTo(fill, prevXPosExt, fillToY);\n\t\t\t\tlineTo(fill, firstXPosExt, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) {\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\tgaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t// expand/contract clips for ascenders/descenders\n\t\t\t\tlet halfStroke = (series.width * pxRatio) / 2;\n\t\t\t\tlet startsOffset = (ascDesc || align ==  1) ?  halfStroke : -halfStroke;\n\t\t\t\tlet endsOffset   = (ascDesc || align == -1) ? -halfStroke :  halfStroke;\n\n\t\t\t\tgaps.forEach(g => {\n\t\t\t\t\tg[0] += startsOffset;\n\t\t\t\t\tg[1] += endsOffset;\n\t\t\t\t});\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}\n\nfunction bars(opts) {\n\topts = opts || EMPTY_OBJ;\n\tconst size = ifNull(opts.size, [0.6, inf, 1]);\n\tconst align = opts.align || 0;\n\tconst extraGap = (opts.gap || 0) * pxRatio;\n\n\tlet ro = opts.radius;\n\n\tro =\n\t\t// [valueRadius, baselineRadius]\n\t\tro == null ? [0, 0] :\n\t\ttypeof ro == 'number' ? [ro, 0] : ro;\n\n\tconst radiusFn = fnOrSelf(ro);\n\n\tconst gapFactor = 1 - size[0];\n\tconst maxWidth  = ifNull(size[1], inf) * pxRatio;\n\tconst minWidth  = ifNull(size[2], 1) * pxRatio;\n\n\tconst disp = ifNull(opts.disp, EMPTY_OBJ);\n\tconst _each = ifNull(opts.each, _ => {});\n\n\tconst { fill: dispFills, stroke: dispStrokes } = disp;\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet valRadius, baseRadius;\n\n\t\t\tif (scaleX.ori == 0)\n\t\t\t\t[valRadius, baseRadius] = radiusFn(u, seriesIdx);\n\t\t\telse\n\t\t\t\t[baseRadius, valRadius] = radiusFn(u, seriesIdx);\n\n\t\t\tconst _dirX = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\t\t\tconst _dirY = scaleY.dir * (scaleY.ori == 1 ? 1 : -1);\n\n\t\t\tlet rect = scaleX.ori == 0 ? rectH : rectV;\n\n\t\t\tlet each = scaleX.ori == 0 ? _each : (u, seriesIdx, i, top, lft, hgt, wid) => {\n\t\t\t\t_each(u, seriesIdx, i, lft, top, wid, hgt);\n\t\t\t};\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t//\tlet fillToY = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\tlet fillToY = scaleY.distr == 3 ? (bandFillDir == 1 ? scaleY.max : scaleY.min) : 0;\n\n\t\t\tlet y0Pos = valToPosY(fillToY, scaleY, yDim, yOff);\n\n\t\t\t// barWid is to center of stroke\n\t\t\tlet xShift, barWid;\n\n\t\t\tlet strokeWidth = pxRound(series.width * pxRatio);\n\n\t\t\tlet multiPath = false;\n\n\t\t\tlet fillColors = null;\n\t\t\tlet fillPaths = null;\n\t\t\tlet strokeColors = null;\n\t\t\tlet strokePaths = null;\n\n\t\t\tif (dispFills != null && (strokeWidth == 0 || dispStrokes != null)) {\n\t\t\t\tmultiPath = true;\n\n\t\t\t\tfillColors = dispFills.values(u, seriesIdx, idx0, idx1);\n\t\t\t\tfillPaths = new Map();\n\t\t\t\t(new Set(fillColors)).forEach(color => {\n\t\t\t\t\tif (color != null)\n\t\t\t\t\t\tfillPaths.set(color, new Path2D());\n\t\t\t\t});\n\n\t\t\t\tif (strokeWidth > 0) {\n\t\t\t\t\tstrokeColors = dispStrokes.values(u, seriesIdx, idx0, idx1);\n\t\t\t\t\tstrokePaths = new Map();\n\t\t\t\t\t(new Set(strokeColors)).forEach(color => {\n\t\t\t\t\t\tif (color != null)\n\t\t\t\t\t\t\tstrokePaths.set(color, new Path2D());\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet { x0, size } = disp;\n\n\t\t\tlet bandClipNulls = true;\n\n\t\t\tif (x0 != null && size != null) {\n\t\t\t\tdataX = x0.values(u, seriesIdx, idx0, idx1);\n\n\t\t\t\tif (x0.unit == 2)\n\t\t\t\t\tdataX = dataX.map(pct => u.posToVal(xOff + pct * xDim, scaleX.key, true));\n\n\t\t\t\t// assumes uniform sizes, for now\n\t\t\t\tlet sizes = size.values(u, seriesIdx, idx0, idx1);\n\n\t\t\t\tif (size.unit == 2)\n\t\t\t\t\tbarWid = sizes[0] * xDim;\n\t\t\t\telse\n\t\t\t\t\tbarWid = valToPosX(sizes[0], scaleX, xDim, xOff) - valToPosX(0, scaleX, xDim, xOff); // assumes linear scale (delta from 0)\n\n\t\t\t\tif (strokeWidth >= barWid / 2)\n\t\t\t\t\tstrokeWidth = 0;\n\n\t\t\t\t// for small gaps, disable pixel snapping since gap inconsistencies become noticible and annoying\n\t\t\t//\tif (gapWid + extraGap < 5)\n\t\t\t//\t\tpxRound = retArg0;\n\n\t\t\t\tbarWid = pxRound(clamp(barWid - strokeWidth, minWidth, maxWidth)); // TODO: extraGap?\n\n\t\t\t\txShift = (_dirX == 1 ? -strokeWidth / 2 : barWid + strokeWidth / 2);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet colWid = xDim;\n\n\t\t\t\tif (dataX.length > 1) {\n\t\t\t\t\t// prior index with non-undefined y data\n\t\t\t\t\tlet prevIdx = null;\n\n\t\t\t\t\t// scan full dataset for smallest adjacent delta\n\t\t\t\t\t// will not work properly for non-linear x scales, since does not do expensive valToPosX calcs till end\n\t\t\t\t\tfor (let i = 0, minDelta = Infinity; i < dataX.length; i++) {\n\t\t\t\t\t\tif (dataY[i] !== undefined) {\n\t\t\t\t\t\t\tif (prevIdx != null) {\n\t\t\t\t\t\t\t\tlet delta = abs(dataX[i] - dataX[prevIdx]);\n\n\t\t\t\t\t\t\t\tif (delta < minDelta) {\n\t\t\t\t\t\t\t\t\tminDelta = delta;\n\t\t\t\t\t\t\t\t\tcolWid = abs(valToPosX(dataX[i], scaleX, xDim, xOff) - valToPosX(dataX[prevIdx], scaleX, xDim, xOff));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprevIdx = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet gapWid = colWid * gapFactor;\n\n\t\t\t\tbarWid = colWid - gapWid - extraGap;\n\n\t\t\t\tif (strokeWidth >= barWid / 2)\n\t\t\t\t\tstrokeWidth = 0;\n\n\t\t\t\t// for small gaps, disable pixel snapping since gap inconsistencies become noticible and annoying\n\t\t\t\tif (gapWid + extraGap < 5)\n\t\t\t\t\tpxRound = retArg0;\n\n\t\t\t\tbarWid = pxRound(clamp(colWid - gapWid, minWidth, maxWidth) - strokeWidth - extraGap);\n\n\t\t\t\txShift = (align == 0 ? barWid / 2 : align == _dirX ? 0 : barWid) - align * _dirX * extraGap / 2;\n\n\t\t\t\t// when colWidth is smaller than [min-clamped] bar width (e.g. aligned data values are non-uniform)\n\t\t\t\t// disable clipping of null-valued band bars to avoid clip overlap / bleed into adjacent bars\n\t\t\t\t// (this could still bleed clips of adjacent band/stacked bars into each other, so is far from perfect)\n\t\t\t\tif (barWid + strokeWidth > colWid)\n\t\t\t\t\tbandClipNulls = false;\n\t\t\t}\n\n\t\t\tconst _paths = {stroke: null, fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL | BAND_CLIP_STROKE};  // disp, geom\n\n\t\t\tlet yLimit;\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = new Path2D();\n\t\t\t\tyLimit = pxRound(valToPosY(bandClipDir == 1 ? scaleY.max : scaleY.min, scaleY, yDim, yOff));\n\t\t\t}\n\n\t\t\tconst stroke = multiPath ? null : new Path2D();\n\t\t\tconst band = _paths.band;\n\n\t\t\tlet { y0, y1 } = disp;\n\n\t\t\tlet dataY0 = null;\n\n\t\t\tif (y0 != null && y1 != null) {\n\t\t\t\tdataY = y1.values(u, seriesIdx, idx0, idx1);\n\t\t\t\tdataY0 = y0.values(u, seriesIdx, idx0, idx1);\n\t\t\t}\n\n\t\t\tlet radVal = valRadius * barWid;\n\t\t\tlet radBase = baseRadius * barWid;\n\n\t\t\tfor (let i = _dirX == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += _dirX) {\n\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\t// we can skip both, drawing and band clipping for alignment artifacts\n\t\t\t\tif (yVal === undefined)\n\t\t\t\t\tcontinue;\n\n\t\t\t/*\n\t\t\t\t// interpolate upwards band clips\n\t\t\t\tif (yVal == null) {\n\t\t\t\t//\tif (hasBands)\n\t\t\t\t//\t\tyVal = costlyLerp(i, idx0, idx1, _dirX, dataY);\n\t\t\t\t//\telse\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t*/\n\n\t\t\t\tlet xVal = scaleX.distr != 2 || disp != null ? dataX[i] : i;\n\n\t\t\t\t// TODO: all xPos can be pre-computed once for all series in aligned set\n\t\t\t\tlet xPos = valToPosX(xVal, scaleX, xDim, xOff);\n\t\t\t\tlet yPos = valToPosY(ifNull(yVal, fillToY), scaleY, yDim, yOff);\n\n\t\t\t\tif (dataY0 != null && yVal != null)\n\t\t\t\t\ty0Pos = valToPosY(dataY0[i], scaleY, yDim, yOff);\n\n\t\t\t\tlet lft = pxRound(xPos - xShift);\n\t\t\t\tlet btm = pxRound(max(yPos, y0Pos));\n\t\t\t\tlet top = pxRound(min(yPos, y0Pos));\n\t\t\t\t// this includes the stroke\n\t\t\t\tlet barHgt = btm - top;\n\n\t\t\t\tif (yVal != null) {  // && yVal != fillToY (0 height bar)\n\t\t\t\t\tlet rv = yVal < 0 ? radBase : radVal;\n\t\t\t\t\tlet rb = yVal < 0 ? radVal : radBase;\n\n\t\t\t\t\tif (multiPath) {\n\t\t\t\t\t\tif (strokeWidth > 0 && strokeColors[i] != null)\n\t\t\t\t\t\t\trect(strokePaths.get(strokeColors[i]), lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\n\t\t\t\t\t\tif (fillColors[i] != null)\n\t\t\t\t\t\t\trect(fillPaths.get(fillColors[i]), lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trect(stroke, lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\n\t\t\t\t\teach(u, seriesIdx, i,\n\t\t\t\t\t\tlft    - strokeWidth / 2,\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbarWid + strokeWidth,\n\t\t\t\t\t\tbarHgt,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (bandClipDir != 0 && (yVal != null || bandClipNulls)) {\n\t\t\t\t\tif (_dirY * bandClipDir == 1) {\n\t\t\t\t\t\tbtm = top;\n\t\t\t\t\t\ttop = yLimit;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttop = btm;\n\t\t\t\t\t\tbtm = yLimit;\n\t\t\t\t\t}\n\n\t\t\t\t\tbarHgt = btm - top;\n\n\t\t\t\t\trect(band, lft - strokeWidth / 2, top, barWid + strokeWidth, max(0, barHgt), 0, 0);  // radius here?\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (strokeWidth > 0)\n\t\t\t\t_paths.stroke = multiPath ? strokePaths : stroke;\n\t\t\telse if (!multiPath) {\n\t\t\t\t_paths._fill = series.width == 0 ? series._fill : series._stroke ?? series._fill;\n\t\t\t\t_paths.width = 0;\n\t\t\t}\n\n\t\t\t_paths.fill = multiPath ? fillPaths : stroke;\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}\n\nfunction splineInterp(interp, opts) {\n\tconst alignGaps = ifNull(opts?.alignGaps, 0);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet moveTo, bezierCurveTo, lineTo;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tmoveTo = moveToH;\n\t\t\t\tlineTo = lineToH;\n\t\t\t\tbezierCurveTo = bezierCurveToH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmoveTo = moveToV;\n\t\t\t\tlineTo = lineToV;\n\t\t\t\tbezierCurveTo = bezierCurveToV;\n\t\t\t}\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tidx0 = nonNullIdx(dataY, idx0, idx1,  1);\n\t\t\tidx1 = nonNullIdx(dataY, idx0, idx1, -1);\n\n\t\t\tlet firstXPos = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\t\t\tlet prevXPos = firstXPos;\n\n\t\t\tlet xCoords = [];\n\t\t\tlet yCoords = [];\n\n\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\tif (yVal != null) {\n\t\t\t\t\tlet xVal = dataX[i];\n\t\t\t\t\tlet xPos = pixelForX(xVal);\n\n\t\t\t\t\txCoords.push(prevXPos = xPos);\n\t\t\t\t\tyCoords.push(pixelForY(dataY[i]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst _paths = {stroke: interp(xCoords, yCoords, moveTo, lineTo, bezierCurveTo, pxRound), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillTo = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillTo);\n\n\t\t\t\tlineTo(fill, prevXPos, fillToY);\n\t\t\t\tlineTo(fill, firstXPos, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) {\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\tgaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\n\t\t\t//  if FEAT_PATHS: false in rollup.config.js\n\t\t\t//\tu.ctx.save();\n\t\t\t//\tu.ctx.beginPath();\n\t\t\t//\tu.ctx.rect(u.bbox.left, u.bbox.top, u.bbox.width, u.bbox.height);\n\t\t\t//\tu.ctx.clip();\n\t\t\t//\tu.ctx.strokeStyle = u.series[sidx].stroke;\n\t\t\t//\tu.ctx.stroke(stroke);\n\t\t\t//\tu.ctx.fillStyle = u.series[sidx].fill;\n\t\t\t//\tu.ctx.fill(fill);\n\t\t\t//\tu.ctx.restore();\n\t\t\t//\treturn null;\n\t\t});\n\t};\n}\n\nfunction monotoneCubic(opts) {\n\treturn splineInterp(_monotoneCubic, opts);\n}\n\n// Monotone Cubic Spline interpolation, adapted from the Chartist.js implementation:\n// https://github.com/gionkunz/chartist-js/blob/e7e78201bffe9609915e5e53cfafa29a5d6c49f9/src/scripts/interpolation.js#L240-L369\nfunction _monotoneCubic(xs, ys, moveTo, lineTo, bezierCurveTo, pxRound) {\n\tconst n = xs.length;\n\n\tif (n < 2)\n\t\treturn null;\n\n\tconst path = new Path2D();\n\n\tmoveTo(path, xs[0], ys[0]);\n\n\tif (n == 2)\n\t\tlineTo(path, xs[1], ys[1]);\n\telse {\n\t\tlet ms  = Array(n),\n\t\t\tds  = Array(n - 1),\n\t\t\tdys = Array(n - 1),\n\t\t\tdxs = Array(n - 1);\n\n\t\t// calc deltas and derivative\n\t\tfor (let i = 0; i < n - 1; i++) {\n\t\t\tdys[i] = ys[i + 1] - ys[i];\n\t\t\tdxs[i] = xs[i + 1] - xs[i];\n\t\t\tds[i]  = dys[i] / dxs[i];\n\t\t}\n\n\t\t// determine desired slope (m) at each point using Fritsch-Carlson method\n\t\t// http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\t\tms[0] = ds[0];\n\n\t\tfor (let i = 1; i < n - 1; i++) {\n\t\t\tif (ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0))\n\t\t\t\tms[i] = 0;\n\t\t\telse {\n\t\t\t\tms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n\t\t\t\t\t(2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n\t\t\t\t\t(dxs[i] + 2 * dxs[i - 1]) / ds[i]\n\t\t\t\t);\n\n\t\t\t\tif (!isFinite(ms[i]))\n\t\t\t\t\tms[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tms[n - 1] = ds[n - 2];\n\n\t\tfor (let i = 0; i < n - 1; i++) {\n\t\t\tbezierCurveTo(\n\t\t\t\tpath,\n\t\t\t\txs[i] + dxs[i] / 3,\n\t\t\t\tys[i] + ms[i] * dxs[i] / 3,\n\t\t\t\txs[i + 1] - dxs[i] / 3,\n\t\t\t\tys[i + 1] - ms[i + 1] * dxs[i] / 3,\n\t\t\t\txs[i + 1],\n\t\t\t\tys[i + 1],\n\t\t\t);\n\t\t}\n\t}\n\n\treturn path;\n}\n\nconst cursorPlots = new Set();\n\nfunction invalidateRects() {\n\tfor (let u of cursorPlots)\n\t\tu.syncRect(true);\n}\n\nif (domEnv) {\n\ton(resize, win, invalidateRects);\n\ton(scroll, win, invalidateRects, true);\n\ton(dppxchange, win, () => { uPlot.pxRatio = pxRatio; });\n}\n\nconst linearPath = linear() ;\nconst pointsPath = points() ;\n\nfunction setDefaults(d, xo, yo, initY) {\n\tlet d2 = initY ? [d[0], d[1]].concat(d.slice(2)) : [d[0]].concat(d.slice(1));\n\treturn d2.map((o, i) => setDefault(o, i, xo, yo));\n}\n\nfunction setDefaults2(d, xyo) {\n\treturn d.map((o, i) => i == 0 ? null : assign({}, xyo, o));  // todo: assign() will not merge facet arrays\n}\n\nfunction setDefault(o, i, xo, yo) {\n\treturn assign({}, (i == 0 ? xo : yo), o);\n}\n\nfunction snapNumX(self, dataMin, dataMax) {\n\treturn dataMin == null ? nullNullTuple : [dataMin, dataMax];\n}\n\nconst snapTimeX = snapNumX;\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction snapNumY(self, dataMin, dataMax) {\n\treturn dataMin == null ? nullNullTuple : rangeNum(dataMin, dataMax, rangePad, true);\n}\n\nfunction snapLogY(self, dataMin, dataMax, scale) {\n\treturn dataMin == null ? nullNullTuple : rangeLog(dataMin, dataMax, self.scales[scale].log, false);\n}\n\nconst snapLogX = snapLogY;\n\nfunction snapAsinhY(self, dataMin, dataMax, scale) {\n\treturn dataMin == null ? nullNullTuple : rangeAsinh(dataMin, dataMax, self.scales[scale].log, false);\n}\n\nconst snapAsinhX = snapAsinhY;\n\n// dim is logical (getClientBoundingRect) pixels, not canvas pixels\nfunction findIncr(minVal, maxVal, incrs, dim, minSpace) {\n\tlet intDigits = max(numIntDigits(minVal), numIntDigits(maxVal));\n\n\tlet delta = maxVal - minVal;\n\n\tlet incrIdx = closestIdx((minSpace / dim) * delta, incrs);\n\n\tdo {\n\t\tlet foundIncr = incrs[incrIdx];\n\t\tlet foundSpace = dim * foundIncr / delta;\n\n\t\tif (foundSpace >= minSpace && intDigits + (foundIncr < 5 ? fixedDec.get(foundIncr) : 0) <= 17)\n\t\t\treturn [foundIncr, foundSpace];\n\t} while (++incrIdx < incrs.length);\n\n\treturn [0, 0];\n}\n\nfunction pxRatioFont(font) {\n\tlet fontSize, fontSizeCss;\n\tfont = font.replace(/(\\d+)px/, (m, p1) => (fontSize = round((fontSizeCss = +p1) * pxRatio)) + 'px');\n\treturn [font, fontSize, fontSizeCss];\n}\n\nfunction syncFontSize(axis) {\n\tif (axis.show) {\n\t\t[axis.font, axis.labelFont].forEach(f => {\n\t\t\tlet size = roundDec(f[2] * pxRatio, 1);\n\t\t\tf[0] = f[0].replace(/[0-9.]+px/, size + 'px');\n\t\t\tf[1] = size;\n\t\t});\n\t}\n}\n\nfunction uPlot(opts, data, then) {\n\tconst self = {\n\t\tmode: ifNull(opts.mode, 1),\n\t};\n\n\tconst mode = self.mode;\n\n\t// TODO: cache denoms & mins scale.cache = {r, min, }\n\tfunction getValPct(val, scale) {\n\t\tlet _val = (\n\t\t\tscale.distr == 3 ? log10(val > 0 ? val : scale.clamp(self, val, scale.min, scale.max, scale.key)) :\n\t\t\tscale.distr == 4 ? asinh(val, scale.asinh) :\n\t\t\tval\n\t\t);\n\n\t\treturn (_val - scale._min) / (scale._max - scale._min);\n\t}\n\n\tfunction getHPos(val, scale, dim, off) {\n\t\tlet pct = getValPct(val, scale);\n\t\treturn off + dim * (scale.dir == -1 ? (1 - pct) : pct);\n\t}\n\n\tfunction getVPos(val, scale, dim, off) {\n\t\tlet pct = getValPct(val, scale);\n\t\treturn off + dim * (scale.dir == -1 ? pct : (1 - pct));\n\t}\n\n\tfunction getPos(val, scale, dim, off) {\n\t\treturn scale.ori == 0 ? getHPos(val, scale, dim, off) : getVPos(val, scale, dim, off);\n\t}\n\n\tself.valToPosH = getHPos;\n\tself.valToPosV = getVPos;\n\n\tlet ready = false;\n\tself.status = 0;\n\n\tconst root = self.root = placeDiv(UPLOT);\n\n\tif (opts.id != null)\n\t\troot.id = opts.id;\n\n\taddClass(root, opts.class);\n\n\tif (opts.title) {\n\t\tlet title = placeDiv(TITLE, root);\n\t\ttitle.textContent = opts.title;\n\t}\n\n\tconst can = placeTag(\"canvas\");\n\tconst ctx = self.ctx = can.getContext(\"2d\");\n\n\tconst wrap = placeDiv(WRAP, root);\n\n\ton(\"click\", wrap, e => {\n\t\tif (e.target === over) {\n\t\t\tlet didDrag = mouseLeft1 != mouseLeft0 || mouseTop1 != mouseTop0;\n\t\t\tdidDrag && drag.click(self, e);\n\t\t}\n\t}, true);\n\n\tconst under = self.under = placeDiv(UNDER, wrap);\n\twrap.appendChild(can);\n\tconst over = self.over = placeDiv(OVER, wrap);\n\n\topts = copy(opts);\n\n\tconst pxAlign = +ifNull(opts.pxAlign, 1);\n\n\tconst pxRound = pxRoundGen(pxAlign);\n\n\t(opts.plugins || []).forEach(p => {\n\t\tif (p.opts)\n\t\t\topts = p.opts(self, opts) || opts;\n\t});\n\n\tconst ms = opts.ms || 1e-3;\n\n\tconst series  = self.series = mode == 1 ?\n\t\tsetDefaults(opts.series || [], xSeriesOpts, ySeriesOpts, false) :\n\t\tsetDefaults2(opts.series || [null], xySeriesOpts);\n\tconst axes    = self.axes   = setDefaults(opts.axes   || [], xAxisOpts,   yAxisOpts,    true);\n\tconst scales  = self.scales = {};\n\tconst bands   = self.bands  = opts.bands || [];\n\n\tbands.forEach(b => {\n\t\tb.fill = fnOrSelf(b.fill || null);\n\t\tb.dir = ifNull(b.dir, -1);\n\t});\n\n\tconst xScaleKey = mode == 2 ? series[1].facets[0].scale : series[0].scale;\n\n\tconst drawOrderMap = {\n\t\taxes: drawAxesGrid,\n\t\tseries: drawSeries,\n\t};\n\n\tconst drawOrder = (opts.drawOrder || [\"axes\", \"series\"]).map(key => drawOrderMap[key]);\n\n\tfunction initScale(scaleKey) {\n\t\tlet sc = scales[scaleKey];\n\n\t\tif (sc == null) {\n\t\t\tlet scaleOpts = (opts.scales || EMPTY_OBJ)[scaleKey] || EMPTY_OBJ;\n\n\t\t\tif (scaleOpts.from != null) {\n\t\t\t\t// ensure parent is initialized\n\t\t\t\tinitScale(scaleOpts.from);\n\t\t\t\t// dependent scales inherit\n\t\t\t\tscales[scaleKey] = assign({}, scales[scaleOpts.from], scaleOpts, {key: scaleKey});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsc = scales[scaleKey] = assign({}, (scaleKey == xScaleKey ? xScaleOpts : yScaleOpts), scaleOpts);\n\n\t\t\t\tsc.key = scaleKey;\n\n\t\t\t\tlet isTime = sc.time;\n\n\t\t\t\tlet rn = sc.range;\n\n\t\t\t\tlet rangeIsArr = isArr(rn);\n\n\t\t\t\tif (scaleKey != xScaleKey || (mode == 2 && !isTime)) {\n\t\t\t\t\t// if range array has null limits, it should be auto\n\t\t\t\t\tif (rangeIsArr && (rn[0] == null || rn[1] == null)) {\n\t\t\t\t\t\trn = {\n\t\t\t\t\t\t\tmin: rn[0] == null ? autoRangePart : {\n\t\t\t\t\t\t\t\tmode: 1,\n\t\t\t\t\t\t\t\thard: rn[0],\n\t\t\t\t\t\t\t\tsoft: rn[0],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmax: rn[1] == null ? autoRangePart : {\n\t\t\t\t\t\t\t\tmode: 1,\n\t\t\t\t\t\t\t\thard: rn[1],\n\t\t\t\t\t\t\t\tsoft: rn[1],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\trangeIsArr = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!rangeIsArr && isObj(rn)) {\n\t\t\t\t\t\tlet cfg = rn;\n\t\t\t\t\t\t// this is similar to snapNumY\n\t\t\t\t\t\trn = (self, dataMin, dataMax) => dataMin == null ? nullNullTuple : rangeNum(dataMin, dataMax, cfg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsc.range = fnOrSelf(rn || (isTime ? snapTimeX : scaleKey == xScaleKey ?\n\t\t\t\t\t(sc.distr == 3 ? snapLogX : sc.distr == 4 ? snapAsinhX : snapNumX) :\n\t\t\t\t\t(sc.distr == 3 ? snapLogY : sc.distr == 4 ? snapAsinhY : snapNumY)\n\t\t\t\t));\n\n\t\t\t\tsc.auto = fnOrSelf(rangeIsArr ? false : sc.auto);\n\n\t\t\t\tsc.clamp = fnOrSelf(sc.clamp || clampScale);\n\n\t\t\t\t// caches for expensive ops like asinh() & log()\n\t\t\t\tsc._min = sc._max = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tinitScale(\"x\");\n\tinitScale(\"y\");\n\n\t// TODO: init scales from facets in mode: 2\n\tif (mode == 1) {\n\t\tseries.forEach(s => {\n\t\t\tinitScale(s.scale);\n\t\t});\n\t}\n\n\taxes.forEach(a => {\n\t\tinitScale(a.scale);\n\t});\n\n\tfor (let k in opts.scales)\n\t\tinitScale(k);\n\n\tconst scaleX = scales[xScaleKey];\n\n\tconst xScaleDistr = scaleX.distr;\n\n\tlet valToPosX, valToPosY;\n\n\tif (scaleX.ori == 0) {\n\t\taddClass(root, ORI_HZ);\n\t\tvalToPosX = getHPos;\n\t\tvalToPosY = getVPos;\n\t\t/*\n\t\tupdOriDims = () => {\n\t\t\txDimCan = plotWid;\n\t\t\txOffCan = plotLft;\n\t\t\tyDimCan = plotHgt;\n\t\t\tyOffCan = plotTop;\n\n\t\t\txDimCss = plotWidCss;\n\t\t\txOffCss = plotLftCss;\n\t\t\tyDimCss = plotHgtCss;\n\t\t\tyOffCss = plotTopCss;\n\t\t};\n\t\t*/\n\t}\n\telse {\n\t\taddClass(root, ORI_VT);\n\t\tvalToPosX = getVPos;\n\t\tvalToPosY = getHPos;\n\t\t/*\n\t\tupdOriDims = () => {\n\t\t\txDimCan = plotHgt;\n\t\t\txOffCan = plotTop;\n\t\t\tyDimCan = plotWid;\n\t\t\tyOffCan = plotLft;\n\n\t\t\txDimCss = plotHgtCss;\n\t\t\txOffCss = plotTopCss;\n\t\t\tyDimCss = plotWidCss;\n\t\t\tyOffCss = plotLftCss;\n\t\t};\n\t\t*/\n\t}\n\n\tconst pendScales = {};\n\n\t// explicitly-set initial scales\n\tfor (let k in scales) {\n\t\tlet sc = scales[k];\n\n\t\tif (sc.min != null || sc.max != null) {\n\t\t\tpendScales[k] = {min: sc.min, max: sc.max};\n\t\t\tsc.min = sc.max = null;\n\t\t}\n\t}\n\n//\tself.tz = opts.tz || Intl.DateTimeFormat().resolvedOptions().timeZone;\n\tconst _tzDate  = (opts.tzDate || (ts => new Date(round(ts / ms))));\n\tconst _fmtDate = (opts.fmtDate || fmtDate);\n\n\tconst _timeAxisSplits = (ms == 1 ? timeAxisSplitsMs(_tzDate) : timeAxisSplitsS(_tzDate));\n\tconst _timeAxisVals   = timeAxisVals(_tzDate, timeAxisStamps((ms == 1 ? _timeAxisStampsMs : _timeAxisStampsS), _fmtDate));\n\tconst _timeSeriesVal  = timeSeriesVal(_tzDate, timeSeriesStamp(_timeSeriesStamp, _fmtDate));\n\n\tconst activeIdxs = [];\n\n\tconst legend     = (self.legend = assign({}, legendOpts, opts.legend));\n\tconst showLegend = legend.show;\n\tconst markers    = legend.markers;\n\n\t{\n\t\tlegend.idxs = activeIdxs;\n\n\t\tmarkers.width  = fnOrSelf(markers.width);\n\t\tmarkers.dash   = fnOrSelf(markers.dash);\n\t\tmarkers.stroke = fnOrSelf(markers.stroke);\n\t\tmarkers.fill   = fnOrSelf(markers.fill);\n\t}\n\n\tlet legendTable;\n\tlet legendHead;\n\tlet legendBody;\n\tlet legendRows = [];\n\tlet legendCells = [];\n\tlet legendCols;\n\tlet multiValLegend = false;\n\tlet NULL_LEGEND_VALUES = {};\n\n\tif (legend.live) {\n\t\tconst getMultiVals = series[1] ? series[1].values : null;\n\t\tmultiValLegend = getMultiVals != null;\n\t\tlegendCols = multiValLegend ? getMultiVals(self, 1, 0) : {_: 0};\n\n\t\tfor (let k in legendCols)\n\t\t\tNULL_LEGEND_VALUES[k] = LEGEND_DISP;\n\t}\n\n\tif (showLegend) {\n\t\tlegendTable = placeTag(\"table\", LEGEND, root);\n\t\tlegendBody = placeTag(\"tbody\", null, legendTable);\n\n\t\t// allows legend to be moved out of root\n\t\tlegend.mount(self, legendTable);\n\n\t\tif (multiValLegend) {\n\t\t\tlegendHead = placeTag(\"thead\", null, legendTable, legendBody);\n\n\t\t\tlet head = placeTag(\"tr\", null, legendHead);\n\t\t\tplaceTag(\"th\", null, head);\n\n\t\t\tfor (var key in legendCols)\n\t\t\t\tplaceTag(\"th\", LEGEND_LABEL, head).textContent = key;\n\t\t}\n\t\telse {\n\t\t\taddClass(legendTable, LEGEND_INLINE);\n\t\t\tlegend.live && addClass(legendTable, LEGEND_LIVE);\n\t\t}\n\t}\n\n\tconst son  = {show: true};\n\tconst soff = {show: false};\n\n\tfunction initLegendRow(s, i) {\n\t\tif (i == 0 && (multiValLegend || !legend.live || mode == 2))\n\t\t\treturn nullNullTuple;\n\n\t\tlet cells = [];\n\n\t\tlet row = placeTag(\"tr\", LEGEND_SERIES, legendBody, legendBody.childNodes[i]);\n\n\t\taddClass(row, s.class);\n\n\t\tif (!s.show)\n\t\t\taddClass(row, OFF);\n\n\t\tlet label = placeTag(\"th\", null, row);\n\n\t\tif (markers.show) {\n\t\t\tlet indic = placeDiv(LEGEND_MARKER, label);\n\n\t\t\tif (i > 0) {\n\t\t\t\tlet width  = markers.width(self, i);\n\n\t\t\t\tif (width)\n\t\t\t\t\tindic.style.border = width + \"px \" + markers.dash(self, i) + \" \" + markers.stroke(self, i);\n\n\t\t\t\tindic.style.background = markers.fill(self, i);\n\t\t\t}\n\t\t}\n\n\t\tlet text = placeDiv(LEGEND_LABEL, label);\n\t\ttext.textContent = s.label;\n\n\t\tif (i > 0) {\n\t\t\tif (!markers.show)\n\t\t\t\ttext.style.color = s.width > 0 ? markers.stroke(self, i) : markers.fill(self, i);\n\n\t\t\tonMouse(\"click\", label, e => {\n\t\t\t\tif (cursor._lock)\n\t\t\t\t\treturn;\n\n\t\t\t\tsetCursorEvent(e);\n\n\t\t\t\tlet seriesIdx = series.indexOf(s);\n\n\t\t\t\tif ((e.ctrlKey || e.metaKey) != legend.isolate) {\n\t\t\t\t\t// if any other series is shown, isolate this one. else show all\n\t\t\t\t\tlet isolate = series.some((s, i) => i > 0 && i != seriesIdx && s.show);\n\n\t\t\t\t\tseries.forEach((s, i) => {\n\t\t\t\t\t\ti > 0 && setSeries(i, isolate ? (i == seriesIdx ? son : soff) : son, true, syncOpts.setSeries);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsetSeries(seriesIdx, {show: !s.show}, true, syncOpts.setSeries);\n\t\t\t}, false);\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tonMouse(mouseenter, label, e => {\n\t\t\t\t\tif (cursor._lock)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tsetCursorEvent(e);\n\n\t\t\t\t\tsetSeries(series.indexOf(s), FOCUS_TRUE, true, syncOpts.setSeries);\n\t\t\t\t}, false);\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in legendCols) {\n\t\t\tlet v = placeTag(\"td\", LEGEND_VALUE, row);\n\t\t\tv.textContent = \"--\";\n\t\t\tcells.push(v);\n\t\t}\n\n\t\treturn [row, cells];\n\t}\n\n\tconst mouseListeners = new Map();\n\n\tfunction onMouse(ev, targ, fn, onlyTarg = true) {\n\t\tconst targListeners = mouseListeners.get(targ) || {};\n\t\tconst listener = cursor.bind[ev](self, targ, fn, onlyTarg);\n\n\t\tif (listener) {\n\t\t\ton(ev, targ, targListeners[ev] = listener);\n\t\t\tmouseListeners.set(targ, targListeners);\n\t\t}\n\t}\n\n\tfunction offMouse(ev, targ, fn) {\n\t\tconst targListeners = mouseListeners.get(targ) || {};\n\n\t\tfor (let k in targListeners) {\n\t\t\tif (ev == null || k == ev) {\n\t\t\t\toff(k, targ, targListeners[k]);\n\t\t\t\tdelete targListeners[k];\n\t\t\t}\n\t\t}\n\n\t\tif (ev == null)\n\t\t\tmouseListeners.delete(targ);\n\t}\n\n\tlet fullWidCss = 0;\n\tlet fullHgtCss = 0;\n\n\tlet plotWidCss = 0;\n\tlet plotHgtCss = 0;\n\n\t// plot margins to account for axes\n\tlet plotLftCss = 0;\n\tlet plotTopCss = 0;\n\n\tlet plotLft = 0;\n\tlet plotTop = 0;\n\tlet plotWid = 0;\n\tlet plotHgt = 0;\n\n\tself.bbox = {};\n\n\tlet shouldSetScales = false;\n\tlet shouldSetSize = false;\n\tlet shouldConvergeSize = false;\n\tlet shouldSetCursor = false;\n\tlet shouldSetSelect = false;\n\tlet shouldSetLegend = false;\n\n\tfunction _setSize(width, height, force) {\n\t\tif (force || (width != self.width || height != self.height))\n\t\t\tcalcSize(width, height);\n\n\t\tresetYSeries(false);\n\n\t\tshouldConvergeSize = true;\n\t\tshouldSetSize = true;\n\n\t\tif (cursor.left >= 0)\n\t\t\tshouldSetCursor = shouldSetLegend = true;\n\n\t\tcommit();\n\t}\n\n\tfunction calcSize(width, height) {\n\t//\tlog(\"calcSize()\", arguments);\n\n\t\tself.width  = fullWidCss = plotWidCss = width;\n\t\tself.height = fullHgtCss = plotHgtCss = height;\n\t\tplotLftCss  = plotTopCss = 0;\n\n\t\tcalcPlotRect();\n\t\tcalcAxesRects();\n\n\t\tlet bb = self.bbox;\n\n\t\tplotLft = bb.left   = incrRound(plotLftCss * pxRatio, 0.5);\n\t\tplotTop = bb.top    = incrRound(plotTopCss * pxRatio, 0.5);\n\t\tplotWid = bb.width  = incrRound(plotWidCss * pxRatio, 0.5);\n\t\tplotHgt = bb.height = incrRound(plotHgtCss * pxRatio, 0.5);\n\n\t//\tupdOriDims();\n\t}\n\n\t// ensures size calc convergence\n\tconst CYCLE_LIMIT = 3;\n\n\tfunction convergeSize() {\n\t\tlet converged = false;\n\n\t\tlet cycleNum = 0;\n\n\t\twhile (!converged) {\n\t\t\tcycleNum++;\n\n\t\t\tlet axesConverged = axesCalc(cycleNum);\n\t\t\tlet paddingConverged = paddingCalc(cycleNum);\n\n\t\t\tconverged = cycleNum == CYCLE_LIMIT || (axesConverged && paddingConverged);\n\n\t\t\tif (!converged) {\n\t\t\t\tcalcSize(self.width, self.height);\n\t\t\t\tshouldSetSize = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setSize({width, height}) {\n\t\t_setSize(width, height);\n\t}\n\n\tself.setSize = setSize;\n\n\t// accumulate axis offsets, reduce canvas width\n\tfunction calcPlotRect() {\n\t\t// easements for edge labels\n\t\tlet hasTopAxis = false;\n\t\tlet hasBtmAxis = false;\n\t\tlet hasRgtAxis = false;\n\t\tlet hasLftAxis = false;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show && axis._show) {\n\t\t\t\tlet {side, _size} = axis;\n\t\t\t\tlet isVt = side % 2;\n\t\t\t\tlet labelSize = axis.label != null ? axis.labelSize : 0;\n\n\t\t\t\tlet fullSize = _size + labelSize;\n\n\t\t\t\tif (fullSize > 0) {\n\t\t\t\t\tif (isVt) {\n\t\t\t\t\t\tplotWidCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 3) {\n\t\t\t\t\t\t\tplotLftCss += fullSize;\n\t\t\t\t\t\t\thasLftAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasRgtAxis = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplotHgtCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 0) {\n\t\t\t\t\t\t\tplotTopCss += fullSize;\n\t\t\t\t\t\t\thasTopAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasBtmAxis = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsidesWithAxes[0] = hasTopAxis;\n\t\tsidesWithAxes[1] = hasRgtAxis;\n\t\tsidesWithAxes[2] = hasBtmAxis;\n\t\tsidesWithAxes[3] = hasLftAxis;\n\n\t\t// hz padding\n\t\tplotWidCss -= _padding[1] + _padding[3];\n\t\tplotLftCss += _padding[3];\n\n\t\t// vt padding\n\t\tplotHgtCss -= _padding[2] + _padding[0];\n\t\tplotTopCss += _padding[0];\n\t}\n\n\tfunction calcAxesRects() {\n\t\t// will accum +\n\t\tlet off1 = plotLftCss + plotWidCss;\n\t\tlet off2 = plotTopCss + plotHgtCss;\n\t\t// will accum -\n\t\tlet off3 = plotLftCss;\n\t\tlet off0 = plotTopCss;\n\n\t\tfunction incrOffset(side, size) {\n\t\t\tswitch (side) {\n\t\t\t\tcase 1: off1 += size; return off1 - size;\n\t\t\t\tcase 2: off2 += size; return off2 - size;\n\t\t\t\tcase 3: off3 -= size; return off3 + size;\n\t\t\t\tcase 0: off0 -= size; return off0 + size;\n\t\t\t}\n\t\t}\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show && axis._show) {\n\t\t\t\tlet side = axis.side;\n\n\t\t\t\taxis._pos = incrOffset(side, axis._size);\n\n\t\t\t\tif (axis.label != null)\n\t\t\t\t\taxis._lpos = incrOffset(side, axis.labelSize);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst cursor = self.cursor = assign({}, cursorOpts, {drag: {y: mode == 2}}, opts.cursor);\n\tconst setCursorEvent = e => { cursor.event = e; };\n\n\tcursor.idxs = activeIdxs;\n\n\tcursor._lock = false;\n\n\tlet points = cursor.points;\n\n\tpoints.show   = fnOrSelf(points.show);\n\tpoints.size   = fnOrSelf(points.size);\n\tpoints.stroke = fnOrSelf(points.stroke);\n\tpoints.width  = fnOrSelf(points.width);\n\tpoints.fill   = fnOrSelf(points.fill);\n\n\tconst focus = self.focus = assign({}, opts.focus || {alpha: 0.3}, cursor.focus);\n\n\tconst cursorFocus = focus.prox >= 0;\n\n\t// series-intersection markers\n\tlet cursorPts = [null];\n\n\tfunction initCursorPt(s, si) {\n\t\tif (si > 0) {\n\t\t\tlet pt = cursor.points.show(self, si);\n\n\t\t\tif (pt) {\n\t\t\t\taddClass(pt, CURSOR_PT);\n\t\t\t\taddClass(pt, s.class);\n\t\t\t\telTrans(pt, -10, -10, plotWidCss, plotHgtCss);\n\t\t\t\tover.insertBefore(pt, cursorPts[si]);\n\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initSeries(s, i) {\n\t\tif (mode == 1 || i > 0) {\n\t\t\tlet isTime = mode == 1 && scales[s.scale].time;\n\n\t\t\tlet sv = s.value;\n\t\t\ts.value = isTime ? (isStr(sv) ? timeSeriesVal(_tzDate, timeSeriesStamp(sv, _fmtDate)) : sv || _timeSeriesVal) : sv || numSeriesVal;\n\t\t\ts.label = s.label || (isTime ? timeSeriesLabel : numSeriesLabel);\n\t\t}\n\n\t\tif (i > 0) {\n\t\t\ts.width  = s.width == null ? 1 : s.width;\n\t\t\ts.paths  = s.paths || linearPath || retNull;\n\t\t\ts.fillTo = fnOrSelf(s.fillTo || seriesFillTo);\n\t\t\ts.pxAlign = +ifNull(s.pxAlign, pxAlign);\n\t\t\ts.pxRound = pxRoundGen(s.pxAlign);\n\n\t\t\ts.stroke = fnOrSelf(s.stroke || null);\n\t\t\ts.fill   = fnOrSelf(s.fill || null);\n\t\t\ts._stroke = s._fill = s._paths = s._focus = null;\n\n\t\t\tlet _ptDia = ptDia(max(1, s.width), 1);\n\t\t\tlet points = s.points = assign({}, {\n\t\t\t\tsize: _ptDia,\n\t\t\t\twidth: max(1, _ptDia * .2),\n\t\t\t\tstroke: s.stroke,\n\t\t\t\tspace: _ptDia * 2,\n\t\t\t\tpaths: pointsPath,\n\t\t\t\t_stroke: null,\n\t\t\t\t_fill: null,\n\t\t\t}, s.points);\n\t\t\tpoints.show   = fnOrSelf(points.show);\n\t\t\tpoints.filter = fnOrSelf(points.filter);\n\t\t\tpoints.fill   = fnOrSelf(points.fill);\n\t\t\tpoints.stroke = fnOrSelf(points.stroke);\n\t\t\tpoints.paths  = fnOrSelf(points.paths);\n\t\t\tpoints.pxAlign = s.pxAlign;\n\t\t}\n\n\t\tif (showLegend) {\n\t\t\tlet rowCells = initLegendRow(s, i);\n\t\t\tlegendRows.splice(i, 0, rowCells[0]);\n\t\t\tlegendCells.splice(i, 0, rowCells[1]);\n\t\t\tlegend.values.push(null);\t// NULL_LEGEND_VALS not yet avil here :(\n\t\t}\n\n\t\tif (cursor.show) {\n\t\t\tactiveIdxs.splice(i, 0, null);\n\n\t\t\tlet pt = initCursorPt(s, i);\n\t\t\tpt && cursorPts.splice(i, 0, pt);\n\t\t}\n\n\t\tfire(\"addSeries\", i);\n\t}\n\n\tfunction addSeries(opts, si) {\n\t\tsi = si == null ? series.length : si;\n\n\t\topts = mode == 1 ? setDefault(opts, si, xSeriesOpts, ySeriesOpts) : setDefault(opts, si, null, xySeriesOpts);\n\n\t\tseries.splice(si, 0, opts);\n\t\tinitSeries(series[si], si);\n\t}\n\n\tself.addSeries = addSeries;\n\n\tfunction delSeries(i) {\n\t\tseries.splice(i, 1);\n\n\t\tif (showLegend) {\n\t\t\tlegend.values.splice(i, 1);\n\n\t\t\tlegendCells.splice(i, 1);\n\t\t\tlet tr = legendRows.splice(i, 1)[0];\n\t\t\toffMouse(null, tr.firstChild);\n\t\t\ttr.remove();\n\t\t}\n\n\t\tif (cursor.show) {\n\t\t\tactiveIdxs.splice(i, 1);\n\n\t\t\tcursorPts.length > 1 && cursorPts.splice(i, 1)[0].remove();\n\t\t}\n\n\t\t// TODO: de-init no-longer-needed scales?\n\n\t\tfire(\"delSeries\", i);\n\t}\n\n\tself.delSeries = delSeries;\n\n\tconst sidesWithAxes = [false, false, false, false];\n\n\tfunction initAxis(axis, i) {\n\t\taxis._show = axis.show;\n\n\t\tif (axis.show) {\n\t\t\tlet isVt = axis.side % 2;\n\n\t\t\tlet sc = scales[axis.scale];\n\n\t\t\t// this can occur if all series specify non-default scales\n\t\t\tif (sc == null) {\n\t\t\t\taxis.scale = isVt ? series[1].scale : xScaleKey;\n\t\t\t\tsc = scales[axis.scale];\n\t\t\t}\n\n\t\t\t// also set defaults for incrs & values based on axis distr\n\t\t\tlet isTime = sc.time;\n\n\t\t\taxis.size   = fnOrSelf(axis.size);\n\t\t\taxis.space  = fnOrSelf(axis.space);\n\t\t\taxis.rotate = fnOrSelf(axis.rotate);\n\n\t\t\tif (isArr(axis.incrs)) {\n\t\t\t\taxis.incrs.forEach(incr => {\n\t\t\t\t\t!fixedDec.has(incr) && fixedDec.set(incr, guessDec(incr));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\taxis.incrs  = fnOrSelf(axis.incrs  || (          sc.distr == 2 ? wholeIncrs : (isTime ? (ms == 1 ? timeIncrsMs : timeIncrsS) : numIncrs)));\n\t\t\taxis.splits = fnOrSelf(axis.splits || (isTime && sc.distr == 1 ? _timeAxisSplits : sc.distr == 3 ? logAxisSplits : sc.distr == 4 ? asinhAxisSplits : numAxisSplits));\n\n\t\t\taxis.stroke        = fnOrSelf(axis.stroke);\n\t\t\taxis.grid.stroke   = fnOrSelf(axis.grid.stroke);\n\t\t\taxis.ticks.stroke  = fnOrSelf(axis.ticks.stroke);\n\t\t\taxis.border.stroke = fnOrSelf(axis.border.stroke);\n\n\t\t\tlet av = axis.values;\n\n\t\t\taxis.values = (\n\t\t\t\t// static array of tick values\n\t\t\t\tisArr(av) && !isArr(av[0]) ? fnOrSelf(av) :\n\t\t\t\t// temporal\n\t\t\t\tisTime ? (\n\t\t\t\t\t// config array of fmtDate string tpls\n\t\t\t\t\tisArr(av) ?\n\t\t\t\t\t\ttimeAxisVals(_tzDate, timeAxisStamps(av, _fmtDate)) :\n\t\t\t\t\t// fmtDate string tpl\n\t\t\t\t\tisStr(av) ?\n\t\t\t\t\t\ttimeAxisVal(_tzDate, av) :\n\t\t\t\t\tav || _timeAxisVals\n\t\t\t\t) : av || numAxisVals\n\t\t\t);\n\n\t\t\taxis.filter = fnOrSelf(axis.filter || (          sc.distr >= 3 && sc.log == 10 ? log10AxisValsFilt : sc.distr == 3 && sc.log == 2 ? log2AxisValsFilt : retArg1));\n\n\t\t\taxis.font      = pxRatioFont(axis.font);\n\t\t\taxis.labelFont = pxRatioFont(axis.labelFont);\n\n\t\t\taxis._size   = axis.size(self, null, i, 0);\n\n\t\t\taxis._space  =\n\t\t\taxis._rotate =\n\t\t\taxis._incrs  =\n\t\t\taxis._found  =\t// foundIncrSpace\n\t\t\taxis._splits =\n\t\t\taxis._values = null;\n\n\t\t\tif (axis._size > 0) {\n\t\t\t\tsidesWithAxes[i] = true;\n\t\t\t\taxis._el = placeDiv(AXIS, wrap);\n\t\t\t}\n\n\t\t\t// debug\n\t\t//\taxis._el.style.background = \"#\"  + Math.floor(Math.random()*16777215).toString(16) + '80';\n\t\t}\n\t}\n\n\tfunction autoPadSide(self, side, sidesWithAxes, cycleNum) {\n\t\tlet [hasTopAxis, hasRgtAxis, hasBtmAxis, hasLftAxis] = sidesWithAxes;\n\n\t\tlet ori = side % 2;\n\t\tlet size = 0;\n\n\t\tif (ori == 0 && (hasLftAxis || hasRgtAxis))\n\t\t\tsize = (side == 0 && !hasTopAxis || side == 2 && !hasBtmAxis ? round(xAxisOpts.size / 3) : 0);\n\t\tif (ori == 1 && (hasTopAxis || hasBtmAxis))\n\t\t\tsize = (side == 1 && !hasRgtAxis || side == 3 && !hasLftAxis ? round(yAxisOpts.size / 2) : 0);\n\n\t\treturn size;\n\t}\n\n\tconst padding = self.padding = (opts.padding || [autoPadSide,autoPadSide,autoPadSide,autoPadSide]).map(p => fnOrSelf(ifNull(p, autoPadSide)));\n\tconst _padding = self._padding = padding.map((p, i) => p(self, i, sidesWithAxes, 0));\n\n\tlet dataLen;\n\n\t// rendered data window\n\tlet i0 = null;\n\tlet i1 = null;\n\tconst idxs = mode == 1 ? series[0].idxs : null;\n\n\tlet data0 = null;\n\n\tlet viaAutoScaleX = false;\n\n\tfunction setData(_data, _resetScales) {\n\t\tdata = _data == null ? [] : copy(_data, fastIsObj);\n\n\t\tif (mode == 2) {\n\t\t\tdataLen = 0;\n\t\t\tfor (let i = 1; i < series.length; i++)\n\t\t\t\tdataLen += data[i][0].length;\n\t\t\tself.data = data = _data;\n\t\t}\n\t\telse {\n\t\t\tif (data[0] == null)\n\t\t\t\tdata[0] = [];\n\n\t\t\tself.data = data.slice();\n\n\t\t\tdata0 = data[0];\n\t\t\tdataLen = data0.length;\n\n\t\t\tif (xScaleDistr == 2) {\n\t\t\t\tdata[0] = Array(dataLen);\n\t\t\t\tfor (let i = 0; i < dataLen; i++)\n\t\t\t\t\tdata[0][i] = i;\n\t\t\t}\n\t\t}\n\n\t\tself._data = data;\n\n\t\tresetYSeries(true);\n\n\t\tfire(\"setData\");\n\n\t\t// forces x axis tick values to re-generate when neither x scale nor y scale changes\n\t\t// in ordinal mode, scale range is by index, so will not change if new data has same length, but tick values are from data\n\t\tif (xScaleDistr == 2) {\n\t\t\tshouldConvergeSize = true;\n\n\t\t\t/* or somewhat cheaper, and uglier:\n\t\t\tif (ready) {\n\t\t\t\t// logic extracted from axesCalc()\n\t\t\t\tlet i = 0;\n\t\t\t\tlet axis = axes[i];\n\t\t\t\tlet _splits = axis._splits.map(i => data0[i]);\n\t\t\t\tlet [_incr, _space] = axis._found;\n\t\t\t\tlet incr = data0[_splits[1]] - data0[_splits[0]];\n\t\t\t\taxis._values = axis.values(self, axis.filter(self, _splits, i, _space, incr), i, _space, incr);\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tif (_resetScales !== false) {\n\t\t\tlet xsc = scaleX;\n\n\t\t\tif (xsc.auto(self, viaAutoScaleX))\n\t\t\t\tautoScaleX();\n\t\t\telse\n\t\t\t\t_setScale(xScaleKey, xsc.min, xsc.max);\n\n\t\t\tshouldSetCursor = shouldSetCursor || cursor.left >= 0;\n\t\t\tshouldSetLegend = true;\n\t\t\tcommit();\n\t\t}\n\t}\n\n\tself.setData = setData;\n\n\tfunction autoScaleX() {\n\t\tviaAutoScaleX = true;\n\n\t\tlet _min, _max;\n\n\t\tif (mode == 1) {\n\t\t\tif (dataLen > 0) {\n\t\t\t\ti0 = idxs[0] = 0;\n\t\t\t\ti1 = idxs[1] = dataLen - 1;\n\n\t\t\t\t_min = data[0][i0];\n\t\t\t\t_max = data[0][i1];\n\n\t\t\t\tif (xScaleDistr == 2) {\n\t\t\t\t\t_min = i0;\n\t\t\t\t\t_max = i1;\n\t\t\t\t}\n\t\t\t\telse if (_min == _max) {\n\t\t\t\t\tif (xScaleDistr == 3)\n\t\t\t\t\t\t[_min, _max] = rangeLog(_min, _min, scaleX.log, false);\n\t\t\t\t\telse if (xScaleDistr == 4)\n\t\t\t\t\t\t[_min, _max] = rangeAsinh(_min, _min, scaleX.log, false);\n\t\t\t\t\telse if (scaleX.time)\n\t\t\t\t\t\t_max = _min + round(86400 / ms);\n\t\t\t\t\telse\n\t\t\t\t\t\t[_min, _max] = rangeNum(_min, _max, rangePad, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ti0 = idxs[0] = _min = null;\n\t\t\t\ti1 = idxs[1] = _max = null;\n\t\t\t}\n\t\t}\n\n\t\t_setScale(xScaleKey, _min, _max);\n\t}\n\n\tlet ctxStroke, ctxFill, ctxWidth, ctxDash, ctxJoin, ctxCap, ctxFont, ctxAlign, ctxBaseline;\n\tlet ctxAlpha;\n\n\tfunction setCtxStyle(stroke, width, dash, cap, fill, join) {\n\t\tstroke ??= transparent;\n\t\tdash   ??= EMPTY_ARR;\n\t\tcap    ??= \"butt\"; // (\u203F|\u203F)\n\t\tfill   ??= transparent;\n\t\tjoin   ??= \"round\";\n\n\t\tif (stroke != ctxStroke)\n\t\t\tctx.strokeStyle = ctxStroke = stroke;\n\t\tif (fill != ctxFill)\n\t\t\tctx.fillStyle = ctxFill = fill;\n\t\tif (width != ctxWidth)\n\t\t\tctx.lineWidth = ctxWidth = width;\n\t\tif (join != ctxJoin)\n\t\t\tctx.lineJoin = ctxJoin = join;\n\t\tif (cap != ctxCap)\n\t\t\tctx.lineCap = ctxCap = cap;\n\t\tif (dash != ctxDash)\n\t\t\tctx.setLineDash(ctxDash = dash);\n\t}\n\n\tfunction setFontStyle(font, fill, align, baseline) {\n\t\tif (fill != ctxFill)\n\t\t\tctx.fillStyle = ctxFill = fill;\n\t\tif (font != ctxFont)\n\t\t\tctx.font = ctxFont = font;\n\t\tif (align != ctxAlign)\n\t\t\tctx.textAlign = ctxAlign = align;\n\t\tif (baseline != ctxBaseline)\n\t\t\tctx.textBaseline = ctxBaseline = baseline;\n\t}\n\n\tfunction accScale(wsc, psc, facet, data, sorted = 0) {\n\t\tif (data.length > 0 && wsc.auto(self, viaAutoScaleX) && (psc == null || psc.min == null)) {\n\t\t\tlet _i0 = ifNull(i0, 0);\n\t\t\tlet _i1 = ifNull(i1, data.length - 1);\n\n\t\t\t// only run getMinMax() for invalidated series data, else reuse\n\t\t\tlet minMax = facet.min == null ? (wsc.distr == 3 ? getMinMaxLog(data, _i0, _i1) : getMinMax(data, _i0, _i1, sorted)) : [facet.min, facet.max];\n\n\t\t\t// initial min/max\n\t\t\twsc.min = min(wsc.min, facet.min = minMax[0]);\n\t\t\twsc.max = max(wsc.max, facet.max = minMax[1]);\n\t\t}\n\t}\n\n\tfunction setScales() {\n\t//\tlog(\"setScales()\", arguments);\n\n\t\t// wip scales\n\t\tlet wipScales = copy(scales, fastIsObj);\n\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\t\t\tlet psc = pendScales[k];\n\n\t\t\tif (psc != null && psc.min != null) {\n\t\t\t\tassign(wsc, psc);\n\n\t\t\t\t// explicitly setting the x-scale invalidates everything (acts as redraw)\n\t\t\t\tif (k == xScaleKey)\n\t\t\t\t\tresetYSeries(true);\n\t\t\t}\n\t\t\telse if (k != xScaleKey || mode == 2) {\n\t\t\t\tif (dataLen == 0 && wsc.from == null) {\n\t\t\t\t\tlet minMax = wsc.range(self, null, null, k);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twsc.min = inf;\n\t\t\t\t\twsc.max = -inf;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataLen > 0) {\n\t\t\t// pre-range y-scales from y series' data values\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (mode == 1) {\n\t\t\t\t\tlet k = s.scale;\n\t\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\t\tif (i == 0) {\n\t\t\t\t\t\tlet minMax = wsc.range(self, wsc.min, wsc.max, k);\n\n\t\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\t\twsc.max = minMax[1];\n\n\t\t\t\t\t\ti0 = closestIdx(wsc.min, data[0]);\n\t\t\t\t\t\ti1 = closestIdx(wsc.max, data[0]);\n\n\t\t\t\t\t\t// don't try to contract same or adjacent idxs\n\t\t\t\t\t\tif (i1 - i0 > 1) {\n\t\t\t\t\t\t\t// closest indices can be outside of view\n\t\t\t\t\t\t\tif (data[0][i0] < wsc.min)\n\t\t\t\t\t\t\t\ti0++;\n\t\t\t\t\t\t\tif (data[0][i1] > wsc.max)\n\t\t\t\t\t\t\t\ti1--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ts.min = data0[i0];\n\t\t\t\t\t\ts.max = data0[i1];\n\t\t\t\t\t}\n\t\t\t\t\telse if (s.show && s.auto)\n\t\t\t\t\t\taccScale(wsc, psc, s, data[i], s.sorted);\n\n\t\t\t\t\ts.idxs[0] = i0;\n\t\t\t\t\ts.idxs[1] = i1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tif (s.show && s.auto) {\n\t\t\t\t\t\t\t// TODO: only handles, assumes and requires facets[0] / 'x' scale, and facets[1] / 'y' scale\n\t\t\t\t\t\t\tlet [ xFacet, yFacet ] = s.facets;\n\t\t\t\t\t\t\tlet xScaleKey = xFacet.scale;\n\t\t\t\t\t\t\tlet yScaleKey = yFacet.scale;\n\t\t\t\t\t\t\tlet [ xData, yData ] = data[i];\n\n\t\t\t\t\t\t\taccScale(wipScales[xScaleKey], pendScales[xScaleKey], xFacet, xData, xFacet.sorted);\n\t\t\t\t\t\t\taccScale(wipScales[yScaleKey], pendScales[yScaleKey], yFacet, yData, yFacet.sorted);\n\n\t\t\t\t\t\t\t// temp\n\t\t\t\t\t\t\ts.min = yFacet.min;\n\t\t\t\t\t\t\ts.max = yFacet.max;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// range independent scales\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\tif (wsc.from == null && (psc == null || psc.min == null)) {\n\t\t\t\t\tlet minMax = wsc.range(\n\t\t\t\t\t\tself,\n\t\t\t\t\t\twsc.min ==  inf ? null : wsc.min,\n\t\t\t\t\t\twsc.max == -inf ? null : wsc.max,\n\t\t\t\t\t\tk\n\t\t\t\t\t);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// range dependent scales\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\n\t\t\tif (wsc.from != null) {\n\t\t\t\tlet base = wipScales[wsc.from];\n\n\t\t\t\tif (base.min == null)\n\t\t\t\t\twsc.min = wsc.max = null;\n\t\t\t\telse {\n\t\t\t\t\tlet minMax = wsc.range(self, base.min, base.max, k);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet changed = {};\n\t\tlet anyChanged = false;\n\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\t\t\tlet sc = scales[k];\n\n\t\t\tif (sc.min != wsc.min || sc.max != wsc.max) {\n\t\t\t\tsc.min = wsc.min;\n\t\t\t\tsc.max = wsc.max;\n\n\t\t\t\tlet distr = sc.distr;\n\n\t\t\t\tsc._min = distr == 3 ? log10(sc.min) : distr == 4 ? asinh(sc.min, sc.asinh) : sc.min;\n\t\t\t\tsc._max = distr == 3 ? log10(sc.max) : distr == 4 ? asinh(sc.max, sc.asinh) : sc.max;\n\n\t\t\t\tchanged[k] = anyChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (anyChanged) {\n\t\t\t// invalidate paths of all series on changed scales\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (mode == 2) {\n\t\t\t\t\tif (i > 0 && changed.y)\n\t\t\t\t\t\ts._paths = null;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (changed[s.scale])\n\t\t\t\t\t\ts._paths = null;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (let k in changed) {\n\t\t\t\tshouldConvergeSize = true;\n\t\t\t\tfire(\"setScale\", k);\n\t\t\t}\n\n\t\t\tif (cursor.show && cursor.left >= 0)\n\t\t\t\tshouldSetCursor = shouldSetLegend = true;\n\t\t}\n\n\t\tfor (let k in pendScales)\n\t\t\tpendScales[k] = null;\n\t}\n\n\t// grabs the nearest indices with y data outside of x-scale limits\n\tfunction getOuterIdxs(ydata) {\n\t\tlet _i0 = clamp(i0 - 1, 0, dataLen - 1);\n\t\tlet _i1 = clamp(i1 + 1, 0, dataLen - 1);\n\n\t\twhile (ydata[_i0] == null && _i0 > 0)\n\t\t\t_i0--;\n\n\t\twhile (ydata[_i1] == null && _i1 < dataLen - 1)\n\t\t\t_i1++;\n\n\t\treturn [_i0, _i1];\n\t}\n\n\tfunction drawSeries() {\n\t\tif (dataLen > 0) {\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tcacheStrokeFill(i, false);\n\t\t\t\t\tcacheStrokeFill(i, true);\n\n\t\t\t\t\tif (s._paths == null) {\n\t\t\t\t\t\tlet _idxs = mode == 2 ? [0, data[i][0].length - 1] : getOuterIdxs(data[i]);\n\t\t\t\t\t\ts._paths = s.paths(self, i, _idxs[0], _idxs[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tif (ctxAlpha != s.alpha)\n\t\t\t\t\t\tctx.globalAlpha = ctxAlpha = s.alpha;\n\n\t\t\t\t\ts._paths != null && drawPath(i, false);\n\n\t\t\t\t\t{\n\t\t\t\t\t\tlet _gaps = s._paths != null ? s._paths.gaps : null;\n\n\t\t\t\t\t\tlet show = s.points.show(self, i, i0, i1, _gaps);\n\t\t\t\t\t\tlet idxs = s.points.filter(self, i, show, _gaps);\n\n\t\t\t\t\t\tif (show || idxs) {\n\t\t\t\t\t\t\ts.points._paths = s.points.paths(self, i, i0, i1, idxs);\n\t\t\t\t\t\t\tdrawPath(i, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ctxAlpha != 1)\n\t\t\t\t\t\tctx.globalAlpha = ctxAlpha = 1;\n\n\t\t\t\t\tfire(\"drawSeries\", i);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction cacheStrokeFill(si, _points) {\n\t\tlet s = _points ? series[si].points : series[si];\n\n\t\ts._stroke = s.stroke(self, si);\n\t\ts._fill   = s.fill(self, si);\n\t}\n\n\tfunction drawPath(si, _points) {\n\t\tlet s = _points ? series[si].points : series[si];\n\n\t\tlet {\n\t\t\tstroke,\n\t\t\tfill,\n\t\t\tclip: gapsClip,\n\t\t\tflags,\n\n\t\t\t_stroke: strokeStyle = s._stroke,\n\t\t\t_fill:   fillStyle   = s._fill,\n\t\t\t_width:  width       = s.width,\n\t\t} = s._paths;\n\n\t\twidth = roundDec(width * pxRatio, 3);\n\n\t\tlet boundsClip = null;\n\t\tlet offset = (width % 2) / 2;\n\n\t\tif (_points && fillStyle == null)\n\t\t\tfillStyle = width > 0 ? \"#fff\" : strokeStyle;\n\n\t\tlet _pxAlign = s.pxAlign == 1 && offset > 0;\n\n\t\t_pxAlign && ctx.translate(offset, offset);\n\n\t\tif (!_points) {\n\t\t\tlet lft = plotLft - width / 2,\n\t\t\t\ttop = plotTop - width / 2,\n\t\t\t\twid = plotWid + width,\n\t\t\t\thgt = plotHgt + width;\n\n\t\t\tboundsClip = new Path2D();\n\t\t\tboundsClip.rect(lft, top, wid, hgt);\n\t\t}\n\n\t\t// the points pathbuilder's gapsClip is its boundsClip, since points dont need gaps clipping, and bounds depend on point size\n\t\tif (_points)\n\t\t\tstrokeFill(strokeStyle, width, s.dash, s.cap, fillStyle, stroke, fill, flags, gapsClip);\n\t\telse\n\t\t\tfillStroke(si, strokeStyle, width, s.dash, s.cap, fillStyle, stroke, fill, flags, boundsClip, gapsClip);\n\n\t\t_pxAlign && ctx.translate(-offset, -offset);\n\t}\n\n\tfunction fillStroke(si, strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip) {\n\t\tlet didStrokeFill = false;\n\n\t\t// for all bands where this series is the top edge, create upwards clips using the bottom edges\n\t\t// and apply clips + fill with band fill or dfltFill\n\t\tbands.forEach((b, bi) => {\n\t\t\t// isUpperEdge?\n\t\t\tif (b.series[0] == si) {\n\t\t\t\tlet lowerEdge = series[b.series[1]];\n\t\t\t\tlet lowerData = data[b.series[1]];\n\n\t\t\t\tlet bandClip = (lowerEdge._paths || EMPTY_OBJ).band;\n\n\t\t\t\tif (isArr(bandClip))\n\t\t\t\t\tbandClip = b.dir == 1 ? bandClip[0] : bandClip[1];\n\n\t\t\t\tlet gapsClip2;\n\n\t\t\t\tlet _fillStyle = null;\n\n\t\t\t\t// hasLowerEdge?\n\t\t\t\tif (lowerEdge.show && bandClip && hasData(lowerData, i0, i1)) {\n\t\t\t\t\t_fillStyle = b.fill(self, bi) || fillStyle;\n\t\t\t\t\tgapsClip2 = lowerEdge._paths.clip;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbandClip = null;\n\n\t\t\t\tstrokeFill(strokeStyle, lineWidth, lineDash, lineCap, _fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip, gapsClip2, bandClip);\n\n\t\t\t\tdidStrokeFill = true;\n\t\t\t}\n\t\t});\n\n\t\tif (!didStrokeFill)\n\t\t\tstrokeFill(strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip);\n\t}\n\n\tconst CLIP_FILL_STROKE = BAND_CLIP_FILL | BAND_CLIP_STROKE;\n\n\tfunction strokeFill(strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip, gapsClip2, bandClip) {\n\t\tsetCtxStyle(strokeStyle, lineWidth, lineDash, lineCap, fillStyle);\n\n\t\tif (boundsClip || gapsClip || bandClip) {\n\t\t\tctx.save();\n\t\t\tboundsClip && ctx.clip(boundsClip);\n\t\t\tgapsClip && ctx.clip(gapsClip);\n\t\t}\n\n\t\tif (bandClip) {\n\t\t\tif ((flags & CLIP_FILL_STROKE) == CLIP_FILL_STROKE) {\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tgapsClip2 && ctx.clip(gapsClip2);\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t\telse if (flags & BAND_CLIP_STROKE) {\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t\telse if (flags & BAND_CLIP_FILL) {\n\t\t\t\tctx.save();\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tgapsClip2 && ctx.clip(gapsClip2);\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tctx.restore();\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdoFill(fillStyle, fillPath);\n\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t}\n\n\t\tif (boundsClip || gapsClip || bandClip)\n\t\t\tctx.restore();\n\t}\n\n\tfunction doStroke(strokeStyle, strokePath, lineWidth) {\n\t\tif (lineWidth > 0) {\n\t\t\tif (strokePath instanceof Map) {\n\t\t\t\tstrokePath.forEach((strokePath, strokeStyle) => {\n\t\t\t\t\tctx.strokeStyle = ctxStroke = strokeStyle;\n\t\t\t\t\tctx.stroke(strokePath);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t\tstrokePath != null && strokeStyle && ctx.stroke(strokePath);\n\t\t}\n\t}\n\n\tfunction doFill(fillStyle, fillPath) {\n\t\tif (fillPath instanceof Map) {\n\t\t\tfillPath.forEach((fillPath, fillStyle) => {\n\t\t\t\tctx.fillStyle = ctxFill = fillStyle;\n\t\t\t\tctx.fill(fillPath);\n\t\t\t});\n\t\t}\n\t\telse\n\t\t\tfillPath != null && fillStyle && ctx.fill(fillPath);\n\t}\n\n\tfunction getIncrSpace(axisIdx, min, max, fullDim) {\n\t\tlet axis = axes[axisIdx];\n\n\t\tlet incrSpace;\n\n\t\tif (fullDim <= 0)\n\t\t\tincrSpace = [0, 0];\n\t\telse {\n\t\t\tlet minSpace = axis._space = axis.space(self, axisIdx, min, max, fullDim);\n\t\t\tlet incrs    = axis._incrs = axis.incrs(self, axisIdx, min, max, fullDim, minSpace);\n\t\t\tincrSpace    = findIncr(min, max, incrs, fullDim, minSpace);\n\t\t}\n\n\t\treturn (axis._found = incrSpace);\n\t}\n\n\tfunction drawOrthoLines(offs, filts, ori, side, pos0, len, width, stroke, dash, cap) {\n\t\tlet offset = (width % 2) / 2;\n\n\t\tpxAlign == 1 && ctx.translate(offset, offset);\n\n\t\tsetCtxStyle(stroke, width, dash, cap, stroke);\n\n\t\tctx.beginPath();\n\n\t\tlet x0, y0, x1, y1, pos1 = pos0 + (side == 0 || side == 3 ? -len : len);\n\n\t\tif (ori == 0) {\n\t\t\ty0 = pos0;\n\t\t\ty1 = pos1;\n\t\t}\n\t\telse {\n\t\t\tx0 = pos0;\n\t\t\tx1 = pos1;\n\t\t}\n\n\t\tfor (let i = 0; i < offs.length; i++) {\n\t\t\tif (filts[i] != null) {\n\t\t\t\tif (ori == 0)\n\t\t\t\t\tx0 = x1 = offs[i];\n\t\t\t\telse\n\t\t\t\t\ty0 = y1 = offs[i];\n\n\t\t\t\tctx.moveTo(x0, y0);\n\t\t\t\tctx.lineTo(x1, y1);\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\n\t\tpxAlign == 1 && ctx.translate(-offset, -offset);\n\t}\n\n\tfunction axesCalc(cycleNum) {\n\t//\tlog(\"axesCalc()\", arguments);\n\n\t\tlet converged = true;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (!axis.show)\n\t\t\t\treturn;\n\n\t\t\tlet scale = scales[axis.scale];\n\n\t\t\tif (scale.min == null) {\n\t\t\t\tif (axis._show) {\n\t\t\t\t\tconverged = false;\n\t\t\t\t\taxis._show = false;\n\t\t\t\t\tresetYSeries(false);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!axis._show) {\n\t\t\t\t\tconverged = false;\n\t\t\t\t\taxis._show = true;\n\t\t\t\t\tresetYSeries(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet {min, max} = scale;\t\t// \t\t// should this toggle them ._show = false\n\n\t\t\tlet [_incr, _space] = getIncrSpace(i, min, max, ori == 0 ? plotWidCss : plotHgtCss);\n\n\t\t\tif (_space == 0)\n\t\t\t\treturn;\n\n\t\t\t// if we're using index positions, force first tick to match passed index\n\t\t\tlet forceMin = scale.distr == 2;\n\n\t\t\tlet _splits = axis._splits = axis.splits(self, i, min, max, _incr, _space, forceMin);\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet splits = scale.distr == 2 ? _splits.map(i => data0[i]) : _splits;\n\t\t\tlet incr   = scale.distr == 2 ? data0[_splits[1]] - data0[_splits[0]] : _incr;\n\n\t\t\tlet values = axis._values = axis.values(self, axis.filter(self, splits, i, _space, incr), i, _space, incr);\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\taxis._rotate = side == 2 ? axis.rotate(self, values, i, _space) : 0;\n\n\t\t\tlet oldSize = axis._size;\n\n\t\t\taxis._size = ceil(axis.size(self, values, i, cycleNum));\n\n\t\t\tif (oldSize != null && axis._size != oldSize)\t\t\t// ready && ?\n\t\t\t\tconverged = false;\n\t\t});\n\n\t\treturn converged;\n\t}\n\n\tfunction paddingCalc(cycleNum) {\n\t\tlet converged = true;\n\n\t\tpadding.forEach((p, i) => {\n\t\t\tlet _p = p(self, i, sidesWithAxes, cycleNum);\n\n\t\t\tif (_p != _padding[i])\n\t\t\t\tconverged = false;\n\n\t\t\t_padding[i] = _p;\n\t\t});\n\n\t\treturn converged;\n\t}\n\n\tfunction drawAxesGrid() {\n\t\tfor (let i = 0; i < axes.length; i++) {\n\t\t\tlet axis = axes[i];\n\n\t\t\tif (!axis.show || !axis._show)\n\t\t\t\tcontinue;\n\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet x, y;\n\n\t\t\tlet fillStyle = axis.stroke(self, i);\n\n\t\t\tlet shiftDir = side == 0 || side == 3 ? -1 : 1;\n\n\t\t\t// axis label\n\t\t\tif (axis.label) {\n\t\t\t\tlet shiftAmt = axis.labelGap * shiftDir;\n\t\t\t\tlet baseLpos = round((axis._lpos + shiftAmt) * pxRatio);\n\n\t\t\t\tsetFontStyle(axis.labelFont[0], fillStyle, \"center\", side == 2 ? TOP : BOTTOM);\n\n\t\t\t\tctx.save();\n\n\t\t\t\tif (ori == 1) {\n\t\t\t\t\tx = y = 0;\n\n\t\t\t\t\tctx.translate(\n\t\t\t\t\t\tbaseLpos,\n\t\t\t\t\t\tround(plotTop + plotHgt / 2),\n\t\t\t\t\t);\n\t\t\t\t\tctx.rotate((side == 3 ? -PI : PI) / 2);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = round(plotLft + plotWid / 2);\n\t\t\t\t\ty = baseLpos;\n\t\t\t\t}\n\n\t\t\t\tctx.fillText(axis.label, x, y);\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\tlet [_incr, _space] = axis._found;\n\n\t\t\tif (_space == 0)\n\t\t\t\tcontinue;\n\n\t\t\tlet scale = scales[axis.scale];\n\n\t\t\tlet plotDim = ori == 0 ? plotWid : plotHgt;\n\t\t\tlet plotOff = ori == 0 ? plotLft : plotTop;\n\n\t\t\tlet axisGap = round(axis.gap * pxRatio);\n\n\t\t\tlet _splits = axis._splits;\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet splits = scale.distr == 2 ? _splits.map(i => data0[i]) : _splits;\n\t\t\tlet incr   = scale.distr == 2 ? data0[_splits[1]] - data0[_splits[0]] : _incr;\n\n\t\t\tlet ticks = axis.ticks;\n\t\t\tlet border = axis.border;\n\t\t\tlet tickSize = ticks.show ? round(ticks.size * pxRatio) : 0;\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\tlet angle = axis._rotate * -PI/180;\n\n\t\t\tlet basePos  = pxRound(axis._pos * pxRatio);\n\t\t\tlet shiftAmt = (tickSize + axisGap) * shiftDir;\n\t\t\tlet finalPos = basePos + shiftAmt;\n\t\t\t    y        = ori == 0 ? finalPos : 0;\n\t\t\t    x        = ori == 1 ? finalPos : 0;\n\n\t\t\tlet font         = axis.font[0];\n\t\t\tlet textAlign    = axis.align == 1 ? LEFT :\n\t\t\t                   axis.align == 2 ? RIGHT :\n\t\t\t                   angle > 0 ? LEFT :\n\t\t\t                   angle < 0 ? RIGHT :\n\t\t\t                   ori == 0 ? \"center\" : side == 3 ? RIGHT : LEFT;\n\t\t\tlet textBaseline = angle ||\n\t\t\t                   ori == 1 ? \"middle\" : side == 2 ? TOP   : BOTTOM;\n\n\t\t\tsetFontStyle(font, fillStyle, textAlign, textBaseline);\n\n\t\t\tlet lineHeight = axis.font[1] * axis.lineGap;\n\n\t\t\tlet canOffs = _splits.map(val => pxRound(getPos(val, scale, plotDim, plotOff)));\n\n\t\t\tlet _values = axis._values;\n\n\t\t\tfor (let i = 0; i < _values.length; i++) {\n\t\t\t\tlet val = _values[i];\n\n\t\t\t\tif (val != null) {\n\t\t\t\t\tif (ori == 0)\n\t\t\t\t\t\tx = canOffs[i];\n\t\t\t\t\telse\n\t\t\t\t\t\ty = canOffs[i];\n\n\t\t\t\t\tval = \"\" + val;\n\n\t\t\t\t\tlet _parts = val.indexOf(\"\\n\") == -1 ? [val] : val.split(/\\n/gm);\n\n\t\t\t\t\tfor (let j = 0; j < _parts.length; j++) {\n\t\t\t\t\t\tlet text = _parts[j];\n\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(x, y + j * lineHeight); // can this be replaced with position math?\n\t\t\t\t\t\t\tctx.rotate(angle); // can this be done once?\n\t\t\t\t\t\t\tctx.fillText(text, 0, 0);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tctx.fillText(text, x, y + j * lineHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ticks\n\t\t\tif (ticks.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tticks.filter(self, splits, i, _space, incr),\n\t\t\t\t\tori,\n\t\t\t\t\tside,\n\t\t\t\t\tbasePos,\n\t\t\t\t\ttickSize,\n\t\t\t\t\troundDec(ticks.width * pxRatio, 3),\n\t\t\t\t\tticks.stroke(self, i),\n\t\t\t\t\tticks.dash,\n\t\t\t\t\tticks.cap,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// grid\n\t\t\tlet grid = axis.grid;\n\n\t\t\tif (grid.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tgrid.filter(self, splits, i, _space, incr),\n\t\t\t\t\tori,\n\t\t\t\t\tori == 0 ? 2 : 1,\n\t\t\t\t\tori == 0 ? plotTop : plotLft,\n\t\t\t\t\tori == 0 ? plotHgt : plotWid,\n\t\t\t\t\troundDec(grid.width * pxRatio, 3),\n\t\t\t\t\tgrid.stroke(self, i),\n\t\t\t\t\tgrid.dash,\n\t\t\t\t\tgrid.cap,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (border.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\t[basePos],\n\t\t\t\t\t[1],\n\t\t\t\t\tori == 0 ? 1 : 0,\n\t\t\t\t\tori == 0 ? 1 : 2,\n\t\t\t\t\tori == 1 ? plotTop : plotLft,\n\t\t\t\t\tori == 1 ? plotHgt : plotWid,\n\t\t\t\t\troundDec(border.width * pxRatio, 3),\n\t\t\t\t\tborder.stroke(self, i),\n\t\t\t\t\tborder.dash,\n\t\t\t\t\tborder.cap,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfire(\"drawAxes\");\n\t}\n\n\tfunction resetYSeries(minMax) {\n\t//\tlog(\"resetYSeries()\", arguments);\n\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\ts._paths = null;\n\n\t\t\t\tif (minMax) {\n\t\t\t\t\tif (mode == 1) {\n\t\t\t\t\t\ts.min = null;\n\t\t\t\t\t\ts.max = null;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ts.facets.forEach(f => {\n\t\t\t\t\t\t\tf.min = null;\n\t\t\t\t\t\t\tf.max = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tlet queuedCommit = false;\n\n\tfunction commit() {\n\t\tif (!queuedCommit) {\n\t\t\tmicroTask(_commit);\n\t\t\tqueuedCommit = true;\n\t\t}\n\t}\n\n\tfunction _commit() {\n\t//\tlog(\"_commit()\", arguments);\n\n\t\tif (shouldSetScales) {\n\t\t\tsetScales();\n\t\t\tshouldSetScales = false;\n\t\t}\n\n\t\tif (shouldConvergeSize) {\n\t\t\tconvergeSize();\n\t\t\tshouldConvergeSize = false;\n\t\t}\n\n\t\tif (shouldSetSize) {\n\t\t\tsetStylePx(under, LEFT,   plotLftCss);\n\t\t\tsetStylePx(under, TOP,    plotTopCss);\n\t\t\tsetStylePx(under, WIDTH,  plotWidCss);\n\t\t\tsetStylePx(under, HEIGHT, plotHgtCss);\n\n\t\t\tsetStylePx(over, LEFT,    plotLftCss);\n\t\t\tsetStylePx(over, TOP,     plotTopCss);\n\t\t\tsetStylePx(over, WIDTH,   plotWidCss);\n\t\t\tsetStylePx(over, HEIGHT,  plotHgtCss);\n\n\t\t\tsetStylePx(wrap, WIDTH,   fullWidCss);\n\t\t\tsetStylePx(wrap, HEIGHT,  fullHgtCss);\n\n\t\t\t// NOTE: mutating this during print preview in Chrome forces transparent\n\t\t\t// canvas pixels to white, even when followed up with clearRect() below\n\t\t\tcan.width  = round(fullWidCss * pxRatio);\n\t\t\tcan.height = round(fullHgtCss * pxRatio);\n\n\t\t\taxes.forEach(({ _el, _show, _size, _pos, side }) => {\n\t\t\t\tif (_el != null) {\n\t\t\t\t\tif (_show) {\n\t\t\t\t\t\tlet posOffset = (side === 3 || side === 0 ? _size : 0);\n\t\t\t\t\t\tlet isVt = side % 2 == 1;\n\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"left\"   : \"top\",    _pos - posOffset);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"width\"  : \"height\", _size);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"top\"    : \"left\",   isVt ? plotTopCss : plotLftCss);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"height\" : \"width\",  isVt ? plotHgtCss : plotWidCss);\n\n\t\t\t\t\t\tremClass(_el, OFF);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\taddClass(_el, OFF);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// invalidate ctx style cache\n\t\t\tctxStroke = ctxFill = ctxWidth = ctxJoin = ctxCap = ctxFont = ctxAlign = ctxBaseline = ctxDash = null;\n\t\t\tctxAlpha = 1;\n\n\t\t\tsyncRect(true);\n\n\t\t\tfire(\"setSize\");\n\n\t\t\tshouldSetSize = false;\n\t\t}\n\n\t\tif (fullWidCss > 0 && fullHgtCss > 0) {\n\t\t\tctx.clearRect(0, 0, can.width, can.height);\n\t\t\tfire(\"drawClear\");\n\t\t\tdrawOrder.forEach(fn => fn());\n\t\t\tfire(\"draw\");\n\t\t}\n\n\t\tif (select.show && shouldSetSelect) {\n\t\t\tsetSelect(select);\n\t\t\tshouldSetSelect = false;\n\t\t}\n\n\t\tif (cursor.show && shouldSetCursor) {\n\t\t\tupdateCursor(null, true, false);\n\t\t\tshouldSetCursor = false;\n\t\t}\n\n\t\tif (legend.show && legend.live && shouldSetLegend) {\n\t\t\tsetLegend();\n\t\t\tshouldSetLegend = false; // redundant currently\n\t\t}\n\n\t\tif (!ready) {\n\t\t\tready = true;\n\t\t\tself.status = 1;\n\n\t\t\tfire(\"ready\");\n\t\t}\n\n\t\tviaAutoScaleX = false;\n\n\t\tqueuedCommit = false;\n\t}\n\n\tself.redraw = (rebuildPaths, recalcAxes) => {\n\t\tshouldConvergeSize = recalcAxes || false;\n\n\t\tif (rebuildPaths !== false)\n\t\t\t_setScale(xScaleKey, scaleX.min, scaleX.max);\n\t\telse\n\t\t\tcommit();\n\t};\n\n\t// redraw() => setScale('x', scales.x.min, scales.x.max);\n\n\t// explicit, never re-ranged (is this actually true? for x and y)\n\tfunction setScale(key, opts) {\n\t\tlet sc = scales[key];\n\n\t\tif (sc.from == null) {\n\t\t\tif (dataLen == 0) {\n\t\t\t\tlet minMax = sc.range(self, opts.min, opts.max, key);\n\t\t\t\topts.min = minMax[0];\n\t\t\t\topts.max = minMax[1];\n\t\t\t}\n\n\t\t\tif (opts.min > opts.max) {\n\t\t\t\tlet _min = opts.min;\n\t\t\t\topts.min = opts.max;\n\t\t\t\topts.max = _min;\n\t\t\t}\n\n\t\t\tif (dataLen > 1 && opts.min != null && opts.max != null && opts.max - opts.min < 1e-16)\n\t\t\t\treturn;\n\n\t\t\tif (key == xScaleKey) {\n\t\t\t\tif (sc.distr == 2 && dataLen > 0) {\n\t\t\t\t\topts.min = closestIdx(opts.min, data[0]);\n\t\t\t\t\topts.max = closestIdx(opts.max, data[0]);\n\n\t\t\t\t\tif (opts.min == opts.max)\n\t\t\t\t\t\topts.max++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t//\tlog(\"setScale()\", arguments);\n\n\t\t\tpendScales[key] = opts;\n\n\t\t\tshouldSetScales = true;\n\t\t\tcommit();\n\t\t}\n\t}\n\n\tself.setScale = setScale;\n\n//\tINTERACTION\n\n\tlet xCursor;\n\tlet yCursor;\n\tlet vCursor;\n\tlet hCursor;\n\n\t// starting position before cursor.move\n\tlet rawMouseLeft0;\n\tlet rawMouseTop0;\n\n\t// starting position\n\tlet mouseLeft0;\n\tlet mouseTop0;\n\n\t// current position before cursor.move\n\tlet rawMouseLeft1;\n\tlet rawMouseTop1;\n\n\t// current position\n\tlet mouseLeft1;\n\tlet mouseTop1;\n\n\tlet dragging = false;\n\n\tconst drag = cursor.drag;\n\n\tlet dragX = drag.x;\n\tlet dragY = drag.y;\n\n\tif (cursor.show) {\n\t\tif (cursor.x)\n\t\t\txCursor = placeDiv(CURSOR_X, over);\n\t\tif (cursor.y)\n\t\t\tyCursor = placeDiv(CURSOR_Y, over);\n\n\t\tif (scaleX.ori == 0) {\n\t\t\tvCursor = xCursor;\n\t\t\thCursor = yCursor;\n\t\t}\n\t\telse {\n\t\t\tvCursor = yCursor;\n\t\t\thCursor = xCursor;\n\t\t}\n\n\t\tmouseLeft1 = cursor.left;\n\t\tmouseTop1 = cursor.top;\n\t}\n\n\tconst select = self.select = assign({\n\t\tshow:   true,\n\t\tover:   true,\n\t\tleft:   0,\n\t\twidth:  0,\n\t\ttop:    0,\n\t\theight: 0,\n\t}, opts.select);\n\n\tconst selectDiv = select.show ? placeDiv(SELECT, select.over ? over : under) : null;\n\n\tfunction setSelect(opts, _fire) {\n\t\tif (select.show) {\n\t\t\tfor (let prop in opts) {\n\t\t\t\tselect[prop] = opts[prop];\n\n\t\t\t\tif (prop in _hideProps)\n\t\t\t\t\tsetStylePx(selectDiv, prop, opts[prop]);\n\t\t\t}\n\n\t\t\t_fire !== false && fire(\"setSelect\");\n\t\t}\n\t}\n\n\tself.setSelect = setSelect;\n\n\tfunction toggleDOM(i, onOff) {\n\t\tlet s = series[i];\n\t\tlet label = showLegend ? legendRows[i] : null;\n\n\t\tif (s.show)\n\t\t\tlabel && remClass(label, OFF);\n\t\telse {\n\t\t\tlabel && addClass(label, OFF);\n\t\t\tcursorPts.length > 1 && elTrans(cursorPts[i], -10, -10, plotWidCss, plotHgtCss);\n\t\t}\n\t}\n\n\tfunction _setScale(key, min, max) {\n\t\tsetScale(key, {min, max});\n\t}\n\n\tfunction setSeries(i, opts, _fire, _pub) {\n\t//\tlog(\"setSeries()\", arguments);\n\n\t\tif (opts.focus != null)\n\t\t\tsetFocus(i);\n\n\t\tif (opts.show != null) {\n\t\t\tseries.forEach((s, si) => {\n\t\t\t\tif (si > 0 && (i == si || i == null)) {\n\t\t\t\t\ts.show = opts.show;\n\t\t\t\t\ttoggleDOM(si, opts.show);\n\n\t\t\t\t\t_setScale(mode == 2 ? s.facets[1].scale : s.scale, null, null);\n\t\t\t\t\tcommit();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t_fire !== false && fire(\"setSeries\", i, opts);\n\n\t\t_pub && pubSync(\"setSeries\", self, i, opts);\n\t}\n\n\tself.setSeries = setSeries;\n\n\tfunction setBand(bi, opts) {\n\t\tassign(bands[bi], opts);\n\t}\n\n\tfunction addBand(opts, bi) {\n\t\topts.fill = fnOrSelf(opts.fill || null);\n\t\topts.dir = ifNull(opts.dir, -1);\n\t\tbi = bi == null ? bands.length : bi;\n\t\tbands.splice(bi, 0, opts);\n\t}\n\n\tfunction delBand(bi) {\n\t\tif (bi == null)\n\t\t\tbands.length = 0;\n\t\telse\n\t\t\tbands.splice(bi, 1);\n\t}\n\n\tself.addBand = addBand;\n\tself.setBand = setBand;\n\tself.delBand = delBand;\n\n\tfunction setAlpha(i, value) {\n\t\tseries[i].alpha = value;\n\n\t\tif (cursor.show && cursorPts[i])\n\t\t\tcursorPts[i].style.opacity = value;\n\n\t\tif (showLegend && legendRows[i])\n\t\t\tlegendRows[i].style.opacity = value;\n\t}\n\n\t// y-distance\n\tlet closestDist;\n\tlet closestSeries;\n\tlet focusedSeries;\n\tconst FOCUS_TRUE  = {focus: true};\n\n\tfunction setFocus(i) {\n\t\tif (i != focusedSeries) {\n\t\t//\tlog(\"setFocus()\", arguments);\n\n\t\t\tlet allFocused = i == null;\n\n\t\t\tlet _setAlpha = focus.alpha != 1;\n\n\t\t\tseries.forEach((s, i2) => {\n\t\t\t\tlet isFocused = allFocused || i2 == 0 || i2 == i;\n\t\t\t\ts._focus = allFocused ? null : isFocused;\n\t\t\t\t_setAlpha && setAlpha(i2, isFocused ? 1 : focus.alpha);\n\t\t\t});\n\n\t\t\tfocusedSeries = i;\n\t\t\t_setAlpha && commit();\n\t\t}\n\t}\n\n\tif (showLegend && cursorFocus) {\n\t\tonMouse(mouseleave, legendTable, e => {\n\t\t\tif (cursor._lock)\n\t\t\t\treturn;\n\n\t\t\tsetCursorEvent(e);\n\n\t\t\tif (focusedSeries != null)\n\t\t\t\tsetSeries(null, FOCUS_TRUE, true, syncOpts.setSeries);\n\t\t});\n\t}\n\n\tfunction posToVal(pos, scale, can) {\n\t\tlet sc = scales[scale];\n\n\t\tif (can)\n\t\t\tpos = pos / pxRatio - (sc.ori == 1 ? plotTopCss : plotLftCss);\n\n\t\tlet dim = plotWidCss;\n\n\t\tif (sc.ori == 1) {\n\t\t\tdim = plotHgtCss;\n\t\t\tpos = dim - pos;\n\t\t}\n\n\t\tif (sc.dir == -1)\n\t\t\tpos = dim - pos;\n\n\t\tlet _min = sc._min,\n\t\t\t_max = sc._max,\n\t\t\tpct = pos / dim;\n\n\t\tlet sv = _min + (_max - _min) * pct;\n\n\t\tlet distr = sc.distr;\n\n\t\treturn (\n\t\t\tdistr == 3 ? pow(10, sv) :\n\t\t\tdistr == 4 ? sinh(sv, sc.asinh) :\n\t\t\tsv\n\t\t);\n\t}\n\n\tfunction closestIdxFromXpos(pos, can) {\n\t\tlet v = posToVal(pos, xScaleKey, can);\n\t\treturn closestIdx(v, data[0], i0, i1);\n\t}\n\n\tself.valToIdx = val => closestIdx(val, data[0]);\n\tself.posToIdx = closestIdxFromXpos;\n\tself.posToVal = posToVal;\n\tself.valToPos = (val, scale, can) => (\n\t\tscales[scale].ori == 0 ?\n\t\tgetHPos(val, scales[scale],\n\t\t\tcan ? plotWid : plotWidCss,\n\t\t\tcan ? plotLft : 0,\n\t\t) :\n\t\tgetVPos(val, scales[scale],\n\t\t\tcan ? plotHgt : plotHgtCss,\n\t\t\tcan ? plotTop : 0,\n\t\t)\n\t);\n\n\t// defers calling expensive functions\n\tfunction batch(fn) {\n\t\tfn(self);\n\t\tcommit();\n\t}\n\n\tself.batch = batch;\n\n\tself.setCursor = (opts, _fire, _pub) => {\n\t\tmouseLeft1 = opts.left;\n\t\tmouseTop1 = opts.top;\n\t//\tassign(cursor, opts);\n\t\tupdateCursor(null, _fire, _pub);\n\t};\n\n\tfunction setSelH(off, dim) {\n\t\tsetStylePx(selectDiv, LEFT,  select.left = off);\n\t\tsetStylePx(selectDiv, WIDTH, select.width = dim);\n\t}\n\n\tfunction setSelV(off, dim) {\n\t\tsetStylePx(selectDiv, TOP,    select.top = off);\n\t\tsetStylePx(selectDiv, HEIGHT, select.height = dim);\n\t}\n\n\tlet setSelX = scaleX.ori == 0 ? setSelH : setSelV;\n\tlet setSelY = scaleX.ori == 1 ? setSelH : setSelV;\n\n\tfunction syncLegend() {\n\t\tif (showLegend && legend.live) {\n\t\t\tfor (let i = mode == 2 ? 1 : 0; i < series.length; i++) {\n\t\t\t\tif (i == 0 && multiValLegend)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet vals = legend.values[i];\n\n\t\t\t\tlet j = 0;\n\n\t\t\t\tfor (let k in vals)\n\t\t\t\t\tlegendCells[i][j++].firstChild.nodeValue = vals[k];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setLegend(opts, _fire) {\n\t\tif (opts != null) {\n\t\t\tif (opts.idxs) {\n\t\t\t\topts.idxs.forEach((didx, sidx) => {\n\t\t\t\t\tactiveIdxs[sidx] = didx;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (!isUndef(opts.idx))\n\t\t\t\tactiveIdxs.fill(opts.idx);\n\n\t\t\tlegend.idx = activeIdxs[0];\n\t\t}\n\n\t\tfor (let sidx = 0; sidx < series.length; sidx++) {\n\t\t\tif (sidx > 0 || mode == 1 && !multiValLegend)\n\t\t\t\tsetLegendValues(sidx, activeIdxs[sidx]);\n\t\t}\n\n\t\tif (showLegend && legend.live)\n\t\t\tsyncLegend();\n\n\t\tshouldSetLegend = false;\n\n\t\t_fire !== false && fire(\"setLegend\");\n\t}\n\n\tself.setLegend = setLegend;\n\n\tfunction setLegendValues(sidx, idx) {\n\t\tlet s = series[sidx];\n\t\tlet src = sidx == 0 && xScaleDistr == 2 ? data0 : data[sidx];\n\t\tlet val;\n\n\t\tif (multiValLegend)\n\t\t\tval = s.values(self, sidx, idx) ?? NULL_LEGEND_VALUES;\n\t\telse {\n\t\t\tval = s.value(self, idx == null ? null : src[idx], sidx, idx);\n\t\t\tval = val == null ? NULL_LEGEND_VALUES : {_: val};\n\t\t}\n\n\t\tlegend.values[sidx] = val;\n\t}\n\n\tfunction updateCursor(src, _fire, _pub) {\n\t//\tts == null && log(\"updateCursor()\", arguments);\n\n\t\trawMouseLeft1 = mouseLeft1;\n\t\trawMouseTop1 = mouseTop1;\n\n\t\t[mouseLeft1, mouseTop1] = cursor.move(self, mouseLeft1, mouseTop1);\n\n\t\tif (cursor.show) {\n\t\t\tvCursor && elTrans(vCursor, round(mouseLeft1), 0, plotWidCss, plotHgtCss);\n\t\t\thCursor && elTrans(hCursor, 0, round(mouseTop1), plotWidCss, plotHgtCss);\n\t\t}\n\n\t\tlet idx;\n\n\t\t// when zooming to an x scale range between datapoints the binary search\n\t\t// for nearest min/max indices results in this condition. cheap hack :D\n\t\tlet noDataInRange = i0 > i1; // works for mode 1 only\n\n\t\tclosestDist = inf;\n\n\t\t// TODO: extract\n\t\tlet xDim = scaleX.ori == 0 ? plotWidCss : plotHgtCss;\n\t\tlet yDim = scaleX.ori == 1 ? plotWidCss : plotHgtCss;\n\n\t\t// if cursor hidden, hide points & clear legend vals\n\t\tif (mouseLeft1 < 0 || dataLen == 0 || noDataInRange) {\n\t\t\tidx = null;\n\n\t\t\tfor (let i = 0; i < series.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tcursorPts.length > 1 && elTrans(cursorPts[i], -10, -10, plotWidCss, plotHgtCss);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cursorFocus)\n\t\t\t\tsetSeries(null, FOCUS_TRUE, true, src == null && syncOpts.setSeries);\n\n\t\t\tif (legend.live) {\n\t\t\t\tactiveIdxs.fill(idx);\n\t\t\t\tshouldSetLegend = true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t//\tlet pctY = 1 - (y / rect.height);\n\n\t\t\tlet mouseXPos, valAtPosX, xPos;\n\n\t\t\tif (mode == 1) {\n\t\t\t\tmouseXPos = scaleX.ori == 0 ? mouseLeft1 : mouseTop1;\n\t\t\t\tvalAtPosX = posToVal(mouseXPos, xScaleKey);\n\t\t\t\tidx = closestIdx(valAtPosX, data[0], i0, i1);\n\t\t\t\txPos = valToPosX(data[0][idx], scaleX, xDim, 0);\n\t\t\t}\n\n\t\t\tfor (let i = mode == 2 ? 1 : 0; i < series.length; i++) {\n\t\t\t\tlet s = series[i];\n\n\t\t\t\tlet idx1  = activeIdxs[i];\n\t\t\t\tlet yVal1 = mode == 1 ? data[i][idx1] : data[i][1][idx1];\n\n\t\t\t\tlet idx2  = cursor.dataIdx(self, i, idx, valAtPosX);\n\t\t\t\tlet yVal2 = mode == 1 ? data[i][idx2] : data[i][1][idx2];\n\n\t\t\t\tshouldSetLegend = shouldSetLegend || yVal2 != yVal1 || idx2 != idx1;\n\n\t\t\t\tactiveIdxs[i] = idx2;\n\n\t\t\t\tlet xPos2 = incrRoundUp(idx2 == idx ? xPos : valToPosX(mode == 1 ? data[0][idx2] : data[i][0][idx2], scaleX, xDim, 0), 1);\n\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tlet yPos = yVal2 == null ? -10 : incrRoundUp(valToPosY(yVal2, mode == 1 ? scales[s.scale] : scales[s.facets[1].scale], yDim, 0), 1);\n\n\t\t\t\t\tif (cursorFocus && yPos >= 0 && mode == 1) {\n\t\t\t\t\t\tlet dist = abs(yPos - mouseTop1);\n\n\t\t\t\t\t\tif (dist < closestDist) {\n\t\t\t\t\t\t\tlet bias = focus.bias;\n\n\t\t\t\t\t\t\tif (bias != 0) {\n\t\t\t\t\t\t\t\tlet mouseYPos = scaleX.ori == 1 ? mouseLeft1 : mouseTop1;\n\t\t\t\t\t\t\t\tlet mouseYVal = posToVal(mouseYPos, s.scale);\n\n\t\t\t\t\t\t\t\tlet seriesYValSign = yVal2     >= 0 ? 1 : -1;\n\t\t\t\t\t\t\t\tlet mouseYValSign  = mouseYVal >= 0 ? 1 : -1;\n\n\t\t\t\t\t\t\t\t// with a focus bias, we will never cross zero when prox testing\n\t\t\t\t\t\t\t\t// it's either closest towards zero, or closest away from zero\n\t\t\t\t\t\t\t\tif (mouseYValSign == seriesYValSign && (\n\t\t\t\t\t\t\t\t\tmouseYValSign == 1 ?\n\t\t\t\t\t\t\t\t\t\t(bias == 1 ? yVal2 >= mouseYVal : yVal2 <= mouseYVal) :  // >= 0\n\t\t\t\t\t\t\t\t\t\t(bias == 1 ? yVal2 <= mouseYVal : yVal2 >= mouseYVal)    //  < 0\n\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\tclosestDist = dist;\n\t\t\t\t\t\t\t\t\tclosestSeries = i;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tclosestDist = dist;\n\t\t\t\t\t\t\t\tclosestSeries = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet hPos, vPos;\n\n\t\t\t\t\tif (scaleX.ori == 0) {\n\t\t\t\t\t\thPos = xPos2;\n\t\t\t\t\t\tvPos = yPos;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thPos = yPos;\n\t\t\t\t\t\tvPos = xPos2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (shouldSetLegend && cursorPts.length > 1) {\n\t\t\t\t\t\telColor(cursorPts[i], cursor.points.fill(self, i), cursor.points.stroke(self, i));\n\n\t\t\t\t\t\tlet ptWid, ptHgt, ptLft, ptTop,\n\t\t\t\t\t\t\tcentered = true,\n\t\t\t\t\t\t\tgetBBox = cursor.points.bbox;\n\n\t\t\t\t\t\tif (getBBox != null) {\n\t\t\t\t\t\t\tcentered = false;\n\n\t\t\t\t\t\t\tlet bbox = getBBox(self, i);\n\n\t\t\t\t\t\t\tptLft = bbox.left;\n\t\t\t\t\t\t\tptTop = bbox.top;\n\t\t\t\t\t\t\tptWid = bbox.width;\n\t\t\t\t\t\t\tptHgt = bbox.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tptLft = hPos;\n\t\t\t\t\t\t\tptTop = vPos;\n\t\t\t\t\t\t\tptWid = ptHgt = cursor.points.size(self, i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telSize(cursorPts[i], ptWid, ptHgt, centered);\n\t\t\t\t\t\telTrans(cursorPts[i], ptLft, ptTop, plotWidCss, plotHgtCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcursor.idx = idx;\n\t\tcursor.left = mouseLeft1;\n\t\tcursor.top = mouseTop1;\n\n\t\tif (shouldSetLegend) {\n\t\t\tlegend.idx = idx;\n\t\t\tsetLegend();\n\t\t}\n\n\t\t// nit: cursor.drag.setSelect is assumed always true\n\t\tif (select.show && dragging) {\n\t\t\tif (src != null) {\n\t\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\t\t\t\tlet [matchXKeys, matchYKeys] = syncOpts.match;\n\t\t\t\tlet [xKeySrc, yKeySrc] = src.cursor.sync.scales;\n\n\t\t\t\t// match the dragX/dragY implicitness/explicitness of src\n\t\t\t\tlet sdrag = src.cursor.drag;\n\t\t\t\tdragX = sdrag._x;\n\t\t\t\tdragY = sdrag._y;\n\n\t\t\t\tif (dragX || dragY) {\n\t\t\t\t\tlet { left, top, width, height } = src.select;\n\n\t\t\t\t\tlet sori = src.scales[xKey].ori;\n\t\t\t\t\tlet sPosToVal = src.posToVal;\n\n\t\t\t\t\tlet sOff, sDim, sc, a, b;\n\n\t\t\t\t\tlet matchingX = xKey != null && matchXKeys(xKey, xKeySrc);\n\t\t\t\t\tlet matchingY = yKey != null && matchYKeys(yKey, yKeySrc);\n\n\t\t\t\t\tif (matchingX && dragX) {\n\t\t\t\t\t\tif (sori == 0) {\n\t\t\t\t\t\t\tsOff = left;\n\t\t\t\t\t\t\tsDim = width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsOff = top;\n\t\t\t\t\t\t\tsDim = height;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsc = scales[xKey];\n\n\t\t\t\t\t\ta = valToPosX(sPosToVal(sOff, xKeySrc),        sc, xDim, 0);\n\t\t\t\t\t\tb = valToPosX(sPosToVal(sOff + sDim, xKeySrc), sc, xDim, 0);\n\n\t\t\t\t\t\tsetSelX(min(a,b), abs(b-a));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsetSelX(0, xDim);\n\n\t\t\t\t\tif (matchingY && dragY) {\n\t\t\t\t\t\tif (sori == 1) {\n\t\t\t\t\t\t\tsOff = left;\n\t\t\t\t\t\t\tsDim = width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsOff = top;\n\t\t\t\t\t\t\tsDim = height;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsc = scales[yKey];\n\n\t\t\t\t\t\ta = valToPosY(sPosToVal(sOff, yKeySrc),        sc, yDim, 0);\n\t\t\t\t\t\tb = valToPosY(sPosToVal(sOff + sDim, yKeySrc), sc, yDim, 0);\n\n\t\t\t\t\t\tsetSelY(min(a,b), abs(b-a));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsetSelY(0, yDim);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\thideSelect();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet rawDX = abs(rawMouseLeft1 - rawMouseLeft0);\n\t\t\t\tlet rawDY = abs(rawMouseTop1 - rawMouseTop0);\n\n\t\t\t\tif (scaleX.ori == 1) {\n\t\t\t\t\tlet _rawDX = rawDX;\n\t\t\t\t\trawDX = rawDY;\n\t\t\t\t\trawDY = _rawDX;\n\t\t\t\t}\n\n\t\t\t\tdragX = drag.x && rawDX >= drag.dist;\n\t\t\t\tdragY = drag.y && rawDY >= drag.dist;\n\n\t\t\t\tlet uni = drag.uni;\n\n\t\t\t\tif (uni != null) {\n\t\t\t\t\t// only calc drag status if they pass the dist thresh\n\t\t\t\t\tif (dragX && dragY) {\n\t\t\t\t\t\tdragX = rawDX >= uni;\n\t\t\t\t\t\tdragY = rawDY >= uni;\n\n\t\t\t\t\t\t// force unidirectionality when both are under uni limit\n\t\t\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\t\t\tif (rawDY > rawDX)\n\t\t\t\t\t\t\t\tdragY = true;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tdragX = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (drag.x && drag.y && (dragX || dragY))\n\t\t\t\t\t// if omni with no uni then both dragX / dragY should be true if either is true\n\t\t\t\t\tdragX = dragY = true;\n\n\t\t\t\tlet p0, p1;\n\n\t\t\t\tif (dragX) {\n\t\t\t\t\tif (scaleX.ori == 0) {\n\t\t\t\t\t\tp0 = mouseLeft0;\n\t\t\t\t\t\tp1 = mouseLeft1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp0 = mouseTop0;\n\t\t\t\t\t\tp1 = mouseTop1;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetSelX(min(p0, p1), abs(p1 - p0));\n\n\t\t\t\t\tif (!dragY)\n\t\t\t\t\t\tsetSelY(0, yDim);\n\t\t\t\t}\n\n\t\t\t\tif (dragY) {\n\t\t\t\t\tif (scaleX.ori == 1) {\n\t\t\t\t\t\tp0 = mouseLeft0;\n\t\t\t\t\t\tp1 = mouseLeft1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp0 = mouseTop0;\n\t\t\t\t\t\tp1 = mouseTop1;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetSelY(min(p0, p1), abs(p1 - p0));\n\n\t\t\t\t\tif (!dragX)\n\t\t\t\t\t\tsetSelX(0, xDim);\n\t\t\t\t}\n\n\t\t\t\t// the drag didn't pass the dist requirement\n\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\tsetSelX(0, 0);\n\t\t\t\t\tsetSelY(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdrag._x = dragX;\n\t\tdrag._y = dragY;\n\n\t\tif (src == null) {\n\t\t\tif (_pub) {\n\t\t\t\tif (syncKey != null) {\n\t\t\t\t\tlet [xSyncKey, ySyncKey] = syncOpts.scales;\n\n\t\t\t\t\tsyncOpts.values[0] = xSyncKey != null ? posToVal(scaleX.ori == 0 ? mouseLeft1 : mouseTop1, xSyncKey) : null;\n\t\t\t\t\tsyncOpts.values[1] = ySyncKey != null ? posToVal(scaleX.ori == 1 ? mouseLeft1 : mouseTop1, ySyncKey) : null;\n\t\t\t\t}\n\n\t\t\t\tpubSync(mousemove, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, idx);\n\t\t\t}\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tlet shouldPub = _pub && syncOpts.setSeries;\n\t\t\t\tlet p = focus.prox;\n\n\t\t\t\tif (focusedSeries == null) {\n\t\t\t\t\tif (closestDist <= p)\n\t\t\t\t\t\tsetSeries(closestSeries, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (closestDist > p)\n\t\t\t\t\t\tsetSeries(null, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t\telse if (closestSeries != focusedSeries)\n\t\t\t\t\t\tsetSeries(closestSeries, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_fire !== false && fire(\"setCursor\");\n\t}\n\n\tlet rect = null;\n\n\tObject.defineProperty(self, 'rect', {\n\t\tget() {\n\t\t\tif (rect == null)\n\t\t\t\tsyncRect(false);\n\n\t\t\treturn rect;\n\t\t},\n\t});\n\n\tfunction syncRect(defer = false) {\n\t\tif (defer)\n\t\t\trect = null;\n\t\telse {\n\t\t\trect = over.getBoundingClientRect();\n\t\t\tfire(\"syncRect\", rect);\n\t\t}\n\t}\n\n\tfunction mouseMove(e, src, _l, _t, _w, _h, _i) {\n\t\tif (cursor._lock)\n\t\t\treturn;\n\n\t\t// Chrome on Windows has a bug which triggers a stray mousemove event after an initial mousedown event\n\t\t// when clicking into a plot as part of re-focusing the browser window.\n\t\t// we gotta ignore it to avoid triggering a phantom drag / setSelect\n\t\t// However, on touch-only devices Chrome-based browsers trigger a 0-distance mousemove before mousedown\n\t\t// so we don't ignore it when mousedown has set the dragging flag\n\t\tif (dragging && e != null && e.movementX == 0 && e.movementY == 0)\n\t\t\treturn;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, false, e != null);\n\n\t\tif (e != null)\n\t\t\tupdateCursor(null, true, true);\n\t\telse\n\t\t\tupdateCursor(src, true, false);\n\t}\n\n\tfunction cacheMouse(e, src, _l, _t, _w, _h, _i, initial, snap) {\n\t\tif (rect == null)\n\t\t\tsyncRect(false);\n\n\t\tsetCursorEvent(e);\n\n\t\tif (e != null) {\n\t\t\t_l = e.clientX - rect.left;\n\t\t\t_t = e.clientY - rect.top;\n\t\t}\n\t\telse {\n\t\t\tif (_l < 0 || _t < 0) {\n\t\t\t\tmouseLeft1 = -10;\n\t\t\t\tmouseTop1 = -10;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\n\t\t\tlet syncOptsSrc = src.cursor.sync;\n\t\t\tlet [xValSrc, yValSrc] = syncOptsSrc.values;\n\t\t\tlet [xKeySrc, yKeySrc] = syncOptsSrc.scales;\n\t\t\tlet [matchXKeys, matchYKeys] = syncOpts.match;\n\n\t\t\tlet rotSrc = src.axes[0].side % 2 == 1;\n\n\t\t\tlet xDim = scaleX.ori == 0 ? plotWidCss : plotHgtCss,\n\t\t\t\tyDim = scaleX.ori == 1 ? plotWidCss : plotHgtCss,\n\t\t\t\t_xDim = rotSrc ? _h : _w,\n\t\t\t\t_yDim = rotSrc ? _w : _h,\n\t\t\t\t_xPos = rotSrc ? _t : _l,\n\t\t\t\t_yPos = rotSrc ? _l : _t;\n\n\t\t\tif (xKeySrc != null)\n\t\t\t\t_l = matchXKeys(xKey, xKeySrc) ? getPos(xValSrc, scales[xKey], xDim, 0) : -10;\n\t\t\telse\n\t\t\t\t_l = xDim * (_xPos/_xDim);\n\n\t\t\tif (yKeySrc != null)\n\t\t\t\t_t = matchYKeys(yKey, yKeySrc) ? getPos(yValSrc, scales[yKey], yDim, 0) : -10;\n\t\t\telse\n\t\t\t\t_t = yDim * (_yPos/_yDim);\n\n\t\t\tif (scaleX.ori == 1) {\n\t\t\t\tlet __l = _l;\n\t\t\t\t_l = _t;\n\t\t\t\t_t = __l;\n\t\t\t}\n\t\t}\n\n\t\tif (snap) {\n\t\t\tif (_l <= 1 || _l >= plotWidCss - 1)\n\t\t\t\t_l = incrRound(_l, plotWidCss);\n\n\t\t\tif (_t <= 1 || _t >= plotHgtCss - 1)\n\t\t\t\t_t = incrRound(_t, plotHgtCss);\n\t\t}\n\n\t\tif (initial) {\n\t\t\trawMouseLeft0 = _l;\n\t\t\trawMouseTop0 = _t;\n\n\t\t\t[mouseLeft0, mouseTop0] = cursor.move(self, _l, _t);\n\t\t}\n\t\telse {\n\t\t\tmouseLeft1 = _l;\n\t\t\tmouseTop1 = _t;\n\t\t}\n\t}\n\n\tconst _hideProps = {\n\t\twidth: 0,\n\t\theight: 0,\n\t\tleft: 0,\n\t\ttop: 0,\n\t};\n\n\tfunction hideSelect() {\n\t\tsetSelect(_hideProps, false);\n\t}\n\n\tlet downSelectLeft;\n\tlet downSelectTop;\n\tlet downSelectWidth;\n\tlet downSelectHeight;\n\n\tfunction mouseDown(e, src, _l, _t, _w, _h, _i) {\n\t\tdragging = true;\n\t\tdragX = dragY = drag._x = drag._y = false;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, true, false);\n\n\t\tif (e != null) {\n\t\t\tonMouse(mouseup, doc, mouseUp, false);\n\t\t\tpubSync(mousedown, self, mouseLeft0, mouseTop0, plotWidCss, plotHgtCss, null);\n\t\t}\n\n\t\tlet { left, top, width, height } = select;\n\n\t\tdownSelectLeft   = left;\n\t\tdownSelectTop    = top;\n\t\tdownSelectWidth  = width;\n\t\tdownSelectHeight = height;\n\n\t\thideSelect();\n\t}\n\n\tfunction mouseUp(e, src, _l, _t, _w, _h, _i) {\n\t\tdragging = drag._x = drag._y = false;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, false, true);\n\n\t\tlet { left, top, width, height } = select;\n\n\t\tlet hasSelect = width > 0 || height > 0;\n\t\tlet chgSelect = (\n\t\t\tdownSelectLeft   != left   ||\n\t\t\tdownSelectTop    != top    ||\n\t\t\tdownSelectWidth  != width  ||\n\t\t\tdownSelectHeight != height\n\t\t);\n\n\t\thasSelect && chgSelect && setSelect(select);\n\n\t\tif (drag.setScale && hasSelect && chgSelect) {\n\t\t//\tif (syncKey != null) {\n\t\t//\t\tdragX = drag.x;\n\t\t//\t\tdragY = drag.y;\n\t\t//\t}\n\n\t\t\tlet xOff = left,\n\t\t\t\txDim = width,\n\t\t\t\tyOff = top,\n\t\t\t\tyDim = height;\n\n\t\t\tif (scaleX.ori == 1) {\n\t\t\t\txOff = top,\n\t\t\t\txDim = height,\n\t\t\t\tyOff = left,\n\t\t\t\tyDim = width;\n\t\t\t}\n\n\t\t\tif (dragX) {\n\t\t\t\t_setScale(xScaleKey,\n\t\t\t\t\tposToVal(xOff, xScaleKey),\n\t\t\t\t\tposToVal(xOff + xDim, xScaleKey)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (dragY) {\n\t\t\t\tfor (let k in scales) {\n\t\t\t\t\tlet sc = scales[k];\n\n\t\t\t\t\tif (k != xScaleKey && sc.from == null && sc.min != inf) {\n\t\t\t\t\t\t_setScale(k,\n\t\t\t\t\t\t\tposToVal(yOff + yDim, k),\n\t\t\t\t\t\t\tposToVal(yOff, k)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thideSelect();\n\t\t}\n\t\telse if (cursor.lock) {\n\t\t\tcursor._lock = !cursor._lock;\n\n\t\t\tif (!cursor._lock)\n\t\t\t\tupdateCursor(null, true, false);\n\t\t}\n\n\t\tif (e != null) {\n\t\t\toffMouse(mouseup, doc);\n\t\t\tpubSync(mouseup, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t\t}\n\t}\n\n\tfunction mouseLeave(e, src, _l, _t, _w, _h, _i) {\n\t\tif (cursor._lock)\n\t\t\treturn;\n\n\t\tsetCursorEvent(e);\n\n\t\tlet _dragging = dragging;\n\n\t\tif (dragging) {\n\t\t\t// handle case when mousemove aren't fired all the way to edges by browser\n\t\t\tlet snapH = true;\n\t\t\tlet snapV = true;\n\t\t\tlet snapProx = 10;\n\n\t\t\tlet dragH, dragV;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tdragH = dragX;\n\t\t\t\tdragV = dragY;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdragH = dragY;\n\t\t\t\tdragV = dragX;\n\t\t\t}\n\n\t\t\tif (dragH && dragV) {\n\t\t\t\t// maybe omni corner snap\n\t\t\t\tsnapH = mouseLeft1 <= snapProx || mouseLeft1 >= plotWidCss - snapProx;\n\t\t\t\tsnapV = mouseTop1  <= snapProx || mouseTop1  >= plotHgtCss - snapProx;\n\t\t\t}\n\n\t\t\tif (dragH && snapH)\n\t\t\t\tmouseLeft1 = mouseLeft1 < mouseLeft0 ? 0 : plotWidCss;\n\n\t\t\tif (dragV && snapV)\n\t\t\t\tmouseTop1 = mouseTop1 < mouseTop0 ? 0 : plotHgtCss;\n\n\t\t\tupdateCursor(null, true, true);\n\n\t\t\tdragging = false;\n\t\t}\n\n\t\tmouseLeft1 = -10;\n\t\tmouseTop1 = -10;\n\n\t\t// passing a non-null timestamp to force sync/mousemove event\n\t\tupdateCursor(null, true, true);\n\n\t\tif (_dragging)\n\t\t\tdragging = _dragging;\n\t}\n\n\tfunction dblClick(e, src, _l, _t, _w, _h, _i) {\n\t\tif (cursor._lock)\n\t\t\treturn;\n\n\t\tsetCursorEvent(e);\n\n\t\tautoScaleX();\n\n\t\thideSelect();\n\n\t\tif (e != null)\n\t\t\tpubSync(dblclick, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t}\n\n\tfunction syncPxRatio() {\n\t\taxes.forEach(syncFontSize);\n\t\t_setSize(self.width, self.height, true);\n\t}\n\n\ton(dppxchange, win, syncPxRatio);\n\n\t// internal pub/sub\n\tconst events = {};\n\n\tevents.mousedown = mouseDown;\n\tevents.mousemove = mouseMove;\n\tevents.mouseup = mouseUp;\n\tevents.dblclick = dblClick;\n\tevents[\"setSeries\"] = (e, src, idx, opts) => {\n\t\tlet seriesIdxMatcher = syncOpts.match[2];\n\t\tidx = seriesIdxMatcher(self, src, idx);\n\t\tidx != -1 && setSeries(idx, opts, true, false);\n\t};\n\n\tif (cursor.show) {\n\t\tonMouse(mousedown,  over, mouseDown);\n\t\tonMouse(mousemove,  over, mouseMove);\n\t\tonMouse(mouseenter, over, e => {\n\t\t\tsetCursorEvent(e);\n\t\t\tsyncRect(false);\n\t\t});\n\t\tonMouse(mouseleave, over, mouseLeave);\n\n\t\tonMouse(dblclick, over, dblClick);\n\n\t\tcursorPlots.add(self);\n\n\t\tself.syncRect = syncRect;\n\t}\n\n\t// external on/off\n\tconst hooks = self.hooks = opts.hooks || {};\n\n\tfunction fire(evName, a1, a2) {\n\t\tif (evName in hooks) {\n\t\t\thooks[evName].forEach(fn => {\n\t\t\t\tfn.call(null, self, a1, a2);\n\t\t\t});\n\t\t}\n\t}\n\n\t(opts.plugins || []).forEach(p => {\n\t\tfor (let evName in p.hooks)\n\t\t\thooks[evName] = (hooks[evName] || []).concat(p.hooks[evName]);\n\t});\n\n\tconst seriesIdxMatcher = (self, src, srcSeriesIdx) => srcSeriesIdx;\n\n\tconst syncOpts = assign({\n\t\tkey: null,\n\t\tsetSeries: false,\n\t\tfilters: {\n\t\t\tpub: retTrue,\n\t\t\tsub: retTrue,\n\t\t},\n\t\tscales: [xScaleKey, series[1] ? series[1].scale : null],\n\t\tmatch: [retEq, retEq, seriesIdxMatcher],\n\t\tvalues: [null, null],\n\t}, cursor.sync);\n\n\tif (syncOpts.match.length == 2)\n\t\tsyncOpts.match.push(seriesIdxMatcher);\n\n\tcursor.sync = syncOpts;\n\n\tconst syncKey = syncOpts.key;\n\n\tconst sync = _sync(syncKey);\n\n\tfunction pubSync(type, src, x, y, w, h, i) {\n\t\tif (syncOpts.filters.pub(type, src, x, y, w, h, i))\n\t\t\tsync.pub(type, src, x, y, w, h, i);\n\t}\n\n\tsync.sub(self);\n\n\tfunction pub(type, src, x, y, w, h, i) {\n\t\tif (syncOpts.filters.sub(type, src, x, y, w, h, i))\n\t\t\tevents[type](null, src, x, y, w, h, i);\n\t}\n\n\tself.pub = pub;\n\n\tfunction destroy() {\n\t\tsync.unsub(self);\n\t\tcursorPlots.delete(self);\n\t\tmouseListeners.clear();\n\t\toff(dppxchange, win, syncPxRatio);\n\t\troot.remove();\n\t\tlegendTable?.remove(); // in case mounted outside of root\n\t\tfire(\"destroy\");\n\t}\n\n\tself.destroy = destroy;\n\n\tfunction _init() {\n\t\tfire(\"init\", opts, data);\n\n\t\tsetData(data || opts.data, false);\n\n\t\tif (pendScales[xScaleKey])\n\t\t\tsetScale(xScaleKey, pendScales[xScaleKey]);\n\t\telse\n\t\t\tautoScaleX();\n\n\t\tshouldSetSelect = select.show && (select.width > 0 || select.height > 0);\n\t\tshouldSetCursor = shouldSetLegend = true;\n\n\t\t_setSize(opts.width, opts.height);\n\t}\n\n\tseries.forEach(initSeries);\n\n\taxes.forEach(initAxis);\n\n\tif (then) {\n\t\tif (then instanceof HTMLElement) {\n\t\t\tthen.appendChild(root);\n\t\t\t_init();\n\t\t}\n\t\telse\n\t\t\tthen(self, _init);\n\t}\n\telse\n\t\t_init();\n\n\treturn self;\n}\n\nuPlot.assign = assign;\nuPlot.fmtNum = fmtNum;\nuPlot.rangeNum = rangeNum;\nuPlot.rangeLog = rangeLog;\nuPlot.rangeAsinh = rangeAsinh;\nuPlot.orient   = orient;\nuPlot.pxRatio = pxRatio;\n\n{\n\tuPlot.join = join;\n}\n\n{\n\tuPlot.fmtDate = fmtDate;\n\tuPlot.tzDate  = tzDate;\n}\n\nuPlot.sync = _sync;\n\n{\n\tuPlot.addGap = addGap;\n\tuPlot.clipGaps = clipGaps;\n\n\tlet paths = uPlot.paths = {\n\t\tpoints,\n\t};\n\n\t(paths.linear  = linear);\n\t(paths.stepped = stepped);\n\t(paths.bars    = bars);\n\t(paths.spline  = monotoneCubic);\n}\n\nexport { uPlot as default };\n", "const LOCALIZATIONS: Record<string, Record<string, string>> = {\n    ru: {\n        'hide-all': '\u0421\u043A\u0440\u044B\u0442\u044C \u0432\u0441\u0435',\n        'show-all': '\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0432\u0441\u0435',\n        sum: '\u0421\u0443\u043C\u043C\u0430',\n        scale: '\u0428\u043A\u0430\u043B\u0430',\n        series: '\u041B\u0438\u043D\u0438\u044F',\n        weekend: '\u0412\u044B\u0445\u043E\u0434\u043D\u043E\u0439',\n        nodata: '\u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445',\n    },\n    en: {\n        'hide-all': 'Hide all',\n        'show-all': 'Show all',\n        sum: 'Total',\n        scale: 'Scale',\n        series: 'Series',\n        weekend: 'Weekend',\n        nodata: 'No data',\n    },\n};\n\nexport default (locale: keyof typeof LOCALIZATIONS | Record<string, string> = 'en') => {\n    if (typeof locale !== 'string') {\n        LOCALIZATIONS.custom = locale;\n        locale = 'custom';\n    }\n\n    return (key: string) => {\n        return LOCALIZATIONS[locale as string][key] || key;\n    };\n};\n", "import {px} from '../../utils/common';\n\nconst NAMES = {\n    size: ['height', 'width'],\n    clientSize: ['clientHeight', 'clientWidth'],\n    offsetSize: ['offsetHeight', 'offsetWidth'],\n    maxSize: ['maxHeight', 'maxWidth'],\n    before: ['top', 'left'],\n    marginBefore: ['marginTop', 'marginLeft'],\n    after: ['bottom', 'right'],\n    marginAfter: ['marginBottom', 'marginRight'],\n    scrollOffset: ['pageYOffset', 'pageXOffset'],\n    offset: ['offsetY', 'offsetY'],\n    offsetOpt: ['yOffset', 'xOffset'],\n};\n\ninterface Props {\n    size: 'height' | 'width';\n    clientSize: 'clientHeight' | 'clientWidth';\n    offsetSize: 'offsetHeight' | 'offsetWidth';\n    maxSize: 'maxHeight' | 'maxWidth';\n    before: 'top' | 'left';\n    marginBefore: 'marginTop' | 'marginLeft';\n    after: 'bottom' | 'right';\n    marginAfter: 'marginBottom' | 'marginRight';\n    scrollOffset: 'pageYOffset' | 'pageXOffset';\n    offset: 'offsetY' | 'offsetY';\n    offsetOpt: 'yOffset' | 'xOffset';\n}\n\ntype Side = 'top' | 'bottom' | 'left' | 'right';\n\ntype Coordinates = {\n    top?: number;\n    bottom?: number;\n    left?: number;\n    right?: number;\n};\n\ntype Options = {\n    bound?: Element | Range | Coordinates;\n    xOffset?: number;\n    yOffset?: number;\n};\n\nfunction normalizeRect(rect: DOMRect | ClientRect): Coordinates {\n    return {\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right,\n    };\n}\n\n// eslint-disable-next-line complexity\nexport default function (\n    elem: HTMLElement,\n    initialAnchor: Element | Range | Coordinates,\n    side: Side = 'bottom',\n    options: Options = {},\n) {\n    let anchor;\n\n    if (initialAnchor instanceof Element || initialAnchor instanceof Range) {\n        anchor = normalizeRect(elem.getBoundingClientRect());\n    } else {\n        anchor = initialAnchor;\n    }\n\n    const anchorRect = Object.assign(\n        {\n            top: anchor.bottom || 0,\n            bottom: anchor.top || 0,\n            left: anchor.right || 0,\n            right: anchor.left || 0,\n        },\n        anchor,\n    );\n\n    const boundRect = {\n        top: 0,\n        left: 0,\n        bottom: window.innerHeight,\n        right: window.innerWidth,\n    };\n\n    if (options.bound) {\n        if (options.bound instanceof Element || options.bound instanceof Range) {\n            options.bound = normalizeRect(options.bound.getBoundingClientRect());\n        }\n        Object.assign(boundRect, options.bound);\n    }\n\n    const elemStyle = getComputedStyle(elem);\n\n    const {primary, secondary} = Object.entries(NAMES).reduce(\n        (acc, [key, value]) => ({\n            primary: {...acc.primary, [key]: value[side === 'top' || side === 'bottom' ? 0 : 1]},\n            secondary: {...acc.secondary, [key]: value[side === 'top' || side === 'bottom' ? 1 : 0]},\n        }),\n        {primary: {}, secondary: {}},\n    ) as {\n        primary: Props;\n        secondary: Props;\n    };\n\n    elem.style.position = 'absolute';\n    elem.style.maxWidth = '';\n    elem.style.maxHeight = '';\n\n    const offset = options[primary.offsetOpt] || 0;\n\n    // Constrain the maximum size of the popup along the secondary axis.\n    const secondaryMarginBefore = parseInt(elemStyle[secondary.marginBefore], 10);\n    const secondaryMarginAfter = parseInt(elemStyle[secondary.marginAfter], 10);\n    const secondaryMargin = secondaryMarginBefore + secondaryMarginAfter;\n\n    const secondaryMaxSize = boundRect[secondary.after] - boundRect[secondary.before] - secondaryMargin;\n    const styledSecondaryMaxSize = parseInt(elemStyle[secondary.maxSize], 10);\n\n    if (!styledSecondaryMaxSize || secondaryMaxSize < styledSecondaryMaxSize) {\n        elem.style[secondary.maxSize] = px(secondaryMaxSize);\n    }\n\n    // Calculate the available room on either side of the anchor element. If\n    // the size of the popup is more than is available on the given side, then we\n    // will switch to the side with more room.\n    const margin = parseInt(elemStyle[primary.marginBefore], 10) + parseInt(elemStyle[primary.marginAfter], 10);\n    const roomBefore = anchorRect[primary.before] - boundRect[primary.before] - margin;\n    const roomAfter = boundRect[primary.after] - anchorRect[primary.after] - margin - offset;\n\n    if (\n        (side === primary.before && elem[primary.offsetSize] > roomBefore) ||\n        (side === primary.after && elem[primary.offsetSize] > roomAfter)\n    ) {\n        side = roomBefore > roomAfter ? primary.before : primary.after;\n    }\n\n    // If the size of the popup exceeds the room available on this side, then\n    // we will give the popup an explicit size so that it doesn't go off-screen.\n    const primaryMaxSize = side === primary.before ? roomBefore : roomAfter;\n    const styledPrimaryMaxSize = parseInt(elemStyle[primary.maxSize], 10);\n\n    if (!styledPrimaryMaxSize || primaryMaxSize < styledPrimaryMaxSize) {\n        elem.style[primary.maxSize] = px(primaryMaxSize);\n    }\n\n    // Set the position of the popup element along the primary axis using the\n    // anchor's bounding rect. If we are working in the context of position:\n    // absolute, then we will need to add the window's scroll position as well.\n    const scrollOffset = window[primary.scrollOffset] as unknown as number;\n\n    const boundPrimaryPos = (pos: number) => {\n        return Math.max(\n            boundRect[primary.before],\n            Math.min(pos, boundRect[primary.after] - elem[primary.offsetSize] - margin),\n        );\n    };\n\n    const boundSecondaryPos = (pos: number) => {\n        return Math.max(\n            boundRect[secondary.before],\n            Math.min(pos, boundRect[secondary.after] - elem[secondary.offsetSize] - secondaryMargin),\n        );\n    };\n\n    if (side === primary.before) {\n        // top or left\n        elem.style[primary.before] =\n            scrollOffset +\n            boundPrimaryPos(anchorRect[primary.before] - elem[primary.offsetSize] - margin) -\n            offset +\n            'px';\n        elem.style[primary.after] = 'auto';\n    } else {\n        // bottom or right\n        elem.style[primary.before] = px(scrollOffset + boundPrimaryPos(anchorRect[primary.after]) + offset);\n        elem.style[primary.after] = 'auto';\n    }\n\n    // Set the position of the popup element along the secondary axis.\n    const secondaryScrollOffset = window[secondary.scrollOffset] as unknown as number;\n\n    elem.style[secondary.before] = px(\n        secondaryScrollOffset + boundSecondaryPos(anchorRect[secondary.before] - secondaryMarginBefore),\n    );\n    elem.style[secondary.after] = 'auto';\n\n    elem.dataset.side = side;\n\n    return {\n        side,\n        anchorRect,\n        boundRect,\n    };\n}\n", "export function getOptionValue<T>(option: T | {[key in string]: T}, scale: string): T {\n    return (typeof option === 'object' ? (option as {[key in string]: T})[scale] : option) as T;\n}\n\nexport function escapeHTML(html: string) {\n    const elem = document.createElement('span');\n\n    elem.innerText = html;\n    return elem.innerHTML;\n}\n", "/* eslint-disable complexity, no-nested-ternary */\nimport {TooltipRenderOptions, TooltipRow} from './types';\nimport {getOptionValue, escapeHTML} from './utils';\n\nfunction renderItems(rows: TooltipRow[], opts: TooltipRenderOptions['options'], scale: string) {\n    const rowsMax = rows.slice(0, getOptionValue(opts.maxLines, scale));\n\n    return (\n        rowsMax\n            .map(({value, name = 'unnamed', color, active, transformed, seriesIdx}, i) => {\n                const val = `\n<span class=\"yagr-tooltip__val\">${value}</span>\n    ${typeof transformed === 'number' ? `<span class=\"yagr-tooltip__tf\">${transformed.toFixed(2)}</span>` : ''}\n`;\n                return `\n<div class=\"yagr-tooltip__item ${active ? '_active' : ''}\" data-series=\"${seriesIdx}\">\n    ${opts.showIndicies ? `<span class=\"yagr-tooltip__idx\">${rows.length - i}</span>` : ''}\n    <span class=\"yagr-tooltip__mark\" style=\"background-color: ${color}\"></span>${escapeHTML(name)}&nbsp;&nbsp;${val}\n</div>`;\n            })\n            .join('') +\n        (rows.length > rowsMax.length\n            ? `<div class=\"yagr-tooltip__item _more\">+${rows.length - rowsMax.length}</div>`\n            : '')\n    );\n}\n\nexport function renderTooltip(data: TooltipRenderOptions) {\n    if (data.scales.length === 0) {\n        return data.yagr.utils.i18n('nodata');\n    }\n\n    const [allTitle, sectionTitle] = data.options.title\n        ? typeof data.options.title === 'string'\n            ? [data.options.title, false]\n            : ['', true]\n        : ['', false];\n\n    const sections = data.scales.map((x) => {\n        const sectionTitleBody = getOptionValue(data.options.title, x.scale);\n        const scaleBody =\n            data.scales.length > 1\n                ? data.options.scales\n                    ? `${getOptionValue(data.options.scales, x.scale) || ''}`\n                    : `${data.yagr.utils.i18n('scale')}: ${x.scale}`\n                : '';\n        return `\n<div class=\"__section\" data-scale=${x.scale}>\n    ${sectionTitle && sectionTitleBody ? `<div class=\"_section_title\">${sectionTitleBody}</div>` : ''}\n    ${scaleBody ? `<div class=\"__section_scale\">${scaleBody}</div>` : ''}\n    <div class=\"__section_body\">${renderItems(x.rows, data.options, x.scale)}</div>\n    ${\n        getOptionValue(data.options.sum, x.scale)\n            ? `\n        <div class=\"__section_sum\">\n            ${data.yagr.utils.i18n('sum')}: ${x.sum}\n        </div>\n    `\n            : ''\n    }\n</div>`;\n    });\n\n    return `${allTitle ? `<div class=\"__title\">${allTitle}</div>` : ''}${sections.join('')}`;\n}\n", "/* eslint-disable complexity, no-nested-ternary */\n\nimport uPlot, {Series} from 'uplot';\n\nimport {CursorOptions} from '../cursor/cursor';\nimport placementFn from './placement';\n\nimport Yagr from '../../index';\nimport {DataSeries, ProcessingInterpolation, YagrPlugin} from '../../types';\n\nimport {TOOLTIP_Y_OFFSET, TOOLTIP_X_OFFSET, TOOLTIP_DEFAULT_MAX_LINES, DEFAULT_Y_SCALE} from '../../defaults';\n\nimport {findInRange, findDataIdx, findSticky, px, isNil, inBetween} from '../../utils/common';\nimport {\n    TooltipOptions,\n    TooltipRow,\n    TrackingOptions,\n    ValueFormatter,\n    TooltipSection,\n    TooltipHandler,\n    TooltipData,\n    TooltipState,\n    TooltipAction,\n    SelectionRange,\n} from './types';\n\nimport {renderTooltip} from './render';\nimport {getOptionValue} from './utils';\n\n// eslint-disable-next-line complexity\nconst findValue = (\n    cursor: CursorOptions,\n    data: DataSeries,\n    serie: Series,\n    idx: number,\n    interpolation?: ProcessingInterpolation,\n) => {\n    const source = Array.isArray(serie.$c) ? serie.$c : data;\n    let value = source[idx];\n\n    if (interpolation && value === interpolation.value) {\n        const snapTo = interpolation.snapToValues ?? 'closest';\n        const nonNullIdx = findDataIdx(source, serie, idx, snapTo, interpolation.value);\n        value = source[nonNullIdx];\n    } else if (value === null) {\n        const cursorSnapToValues = cursor.snapToValues ?? 'closest';\n        const snapTo = serie.snapToValues ?? cursorSnapToValues;\n        const nonNullIdx = findDataIdx(source, serie, idx, snapTo, null);\n        value = source[nonNullIdx];\n    }\n\n    return value;\n};\n\nconst DEFAULT_TOOLTIP_OPTIONS = {\n    maxLines: TOOLTIP_DEFAULT_MAX_LINES,\n    highlight: true,\n    sum: false,\n    render: renderTooltip,\n    pinable: true,\n    strategy: 'pin',\n    sort: undefined,\n    showIndicies: false,\n    hideNoData: false,\n    className: 'yagr-tooltip_default',\n    xOffset: TOOLTIP_X_OFFSET,\n    yOffset: TOOLTIP_Y_OFFSET,\n    virtual: false,\n    showEmpty: false,\n    onUpdate: 'reset',\n} as const;\n\nexport type TooltipPlugin = YagrPlugin<\n    {\n        state: TooltipState;\n        pin(pinState: boolean, position?: {x: number; y: number}): void;\n        show(): void;\n        hide(): void;\n        updateOptions: (o: Partial<TooltipOptions>) => void;\n        on: (event: TooltipAction, handler: TooltipHandler) => void;\n        off: (event: TooltipAction, handler: TooltipHandler) => void;\n        display: (props: {left: number; top: number; idx: number}) => void;\n        tooltip: YagrTooltip;\n        dispose: () => void;\n        reInit: (u: uPlot) => void;\n        reset: () => void;\n    },\n    [Partial<TooltipOptions>]\n>;\n\nclass YagrTooltip {\n    handlers: Record<TooltipAction, TooltipHandler[]> = {\n        init: [],\n        mount: [],\n        show: [],\n        pin: [],\n        unpin: [],\n        hide: [],\n        render: [],\n        destroy: [],\n        reset: [],\n    };\n\n    private placement: Function = placementFn;\n    private renderTooltipCloses = () => {};\n\n    private tOverlay: HTMLDivElement;\n    private bound: HTMLElement;\n    private renderNode: HTMLElement;\n    /**\n     * Flag to skip next mouseup event, used for unpinning\n     * tooltip on any mousedown, but continiously pinning on drag\n     */\n    private skipNextMouseUp = false;\n\n    yagr: Yagr;\n    opts: TooltipOptions;\n    state: TooltipState;\n    over: HTMLDivElement;\n\n    private bLeft: number;\n    private bTop: number;\n    private bWidth: number;\n\n    constructor(yagr: Yagr, options: Partial<TooltipOptions> = {}) {\n        this.yagr = yagr;\n        this.over = yagr?.uplot?.over;\n        this.opts = {\n            ...DEFAULT_TOOLTIP_OPTIONS,\n            strategy: options.pinable ? 'pin' : DEFAULT_TOOLTIP_OPTIONS.strategy,\n            tracking: yagr.config.chart.series?.type === 'area' ? 'area' : 'sticky',\n            value: this.defaultTooltipValueFormatter,\n            ...options,\n        };\n\n        this.bound = this.opts.boundClassName\n            ? document.querySelector(this.opts.boundClassName) || document.body\n            : document.body;\n        this.renderNode = this.opts.renderClassName\n            ? document.querySelector(this.opts.renderClassName) || document.body\n            : document.body;\n        this.tOverlay = document.createElement('div');\n\n        this.tOverlay.id = `${yagr.id}_tooltip`;\n        this.tOverlay.className = `yagr-tooltip ${this.opts.className || ''}`;\n        this.tOverlay.style.display = 'none';\n\n        this.state = {\n            mounted: false,\n            pinned: false,\n            visible: false,\n            range: null,\n            focusedSeries: null,\n        };\n\n        this.bLeft = 0;\n        this.bTop = 0;\n        this.bWidth = 0;\n\n        if (this.opts.virtual) {\n            this.placement = () => {};\n        } else {\n            this.renderNode.appendChild(this.tOverlay);\n            this.state.mounted = true;\n            this.emit('mount');\n        }\n    }\n\n    emit = (action: TooltipAction, data?: TooltipData) => {\n        this.handlers[action].forEach((handler) => {\n            handler(this.tOverlay, {\n                state: this.state,\n                actions: {\n                    pin: this.pin,\n                    show: this.show,\n                    hide: this.hide,\n                    dispose: this.dispose,\n                    reset: this.reset,\n                },\n                data,\n                yagr: this.yagr,\n                event: action,\n            });\n        });\n    };\n\n    reset = () => {\n        if (this.opts.onUpdate === 'none') {\n            this.yagr.plugins.cursor?.pin(false);\n            return;\n        }\n\n        if (this.state.visible) {\n            this.hide();\n        }\n\n        if (this.state.pinned) {\n            this.pin(false);\n        }\n        this.emit('reset');\n    };\n\n    show = () => {\n        const shouldEmit = !this.state.visible;\n        this.state.visible = true;\n        this.tOverlay.style.display = 'block';\n        shouldEmit && this.emit('show');\n    };\n\n    hide = () => {\n        const shouldEmit = this.state.visible;\n        this.state.visible = false;\n        this.tOverlay.style.display = 'none';\n        this.emit('hide');\n        shouldEmit && this.emit('show');\n    };\n\n    pin = (pinState: boolean, position?: {x: number; y: number}) => {\n        this.state.pinned = pinState;\n        const range = this.state.range || [];\n\n        this.yagr.plugins.cursor?.pin(pinState && (range[1] === null || range.length < 2));\n\n        if (this.opts.virtual) {\n            return this.emit(pinState ? 'pin' : 'unpin');\n        }\n\n        if (position) {\n            this.placement(\n                this.tOverlay,\n                {\n                    left: position.x + this.bLeft,\n                    top: this.bTop + position.y - (this.opts.yOffset || 0),\n                },\n                'right',\n                {\n                    bound: this.bound,\n                    xOffset: this.opts.xOffset,\n                    yOffset: this.opts.yOffset,\n                },\n            );\n        }\n\n        const list = this.tOverlay.querySelector('._tooltip-list') as HTMLElement;\n\n        if (pinState) {\n            if (!this.state.visible) {\n                this.show();\n            }\n\n            this.tOverlay.classList.add('yagr-tooltip_pinned');\n            if (list && list?.clientHeight) {\n                list.style.height = px(list.clientHeight);\n            }\n\n            if (this.opts.render === renderTooltip) {\n                document.addEventListener('mousemove', this.checkFocus);\n                document.addEventListener('mousedown', this.detectClickOutside);\n            }\n        } else {\n            this.tOverlay.classList.remove('yagr-tooltip_pinned');\n\n            if (this.opts.render === renderTooltip) {\n                document.removeEventListener('mousemove', this.checkFocus);\n                document.removeEventListener('mousedown', this.detectClickOutside);\n            }\n        }\n\n        this.emit(pinState ? 'pin' : 'unpin');\n    };\n\n    checkFocus = (event: MouseEvent) => {\n        const target = event.target as HTMLElement | null;\n        let serieIdx: string | undefined;\n\n        if (target && this.tOverlay.contains(target) && target.classList.contains('yagr-tooltip__item')) {\n            serieIdx = target.dataset['series'];\n        }\n\n        const serie = serieIdx ? this.yagr.uplot.series[Number(serieIdx)] : null;\n\n        if (serieIdx && serie) {\n            this.state.focusedSeries = serieIdx;\n            this.yagr.setFocus(serie.id, true);\n        } else if (this.state.focusedSeries) {\n            this.state.focusedSeries = null;\n            this.yagr.setFocus(null, true);\n        }\n    };\n\n    render = (props: {left: number; top: number; idx: number}) => {\n        const u = this.yagr.uplot;\n        let {left, top} = props;\n        const {idx} = props;\n        const {opts, state} = this;\n\n        if (opts.show && typeof opts.show === 'function' && opts.show(this.yagr) === false) {\n            this.hide();\n            return;\n        }\n\n        if ((left < 0 || top < 0) && !state.pinned && this.isNotInDrag) {\n            this.hide();\n        }\n\n        top = inBetween(top, 0, u.bbox.top + u.bbox.height);\n        left = inBetween(left, 0, u.bbox.left + u.bbox.width);\n\n        const {data} = u;\n\n        if (data === null || isNil(idx) || top === undefined) {\n            return;\n        }\n\n        const x = data[0][idx];\n\n        const sum: Record<string, number> = {};\n        const sections: Record<string, TooltipSection> = {};\n\n        const rowsBySections: Record<string, number[]> = {};\n\n        let i = u.series.length - 1;\n        while (i >= 1) {\n            const serie = u.series[i];\n\n            if (!serie.show) {\n                i -= 1;\n                continue;\n            }\n\n            const scale = serie.scale || DEFAULT_Y_SCALE;\n\n            rowsBySections[scale] = rowsBySections[scale] || [];\n            rowsBySections[scale].push(i);\n            i -= 1;\n        }\n\n        const rowEntries = Object.entries(rowsBySections);\n\n        rowEntries.forEach(([scale, serieIndicies]) => {\n            sections[scale] = sections[scale] || {\n                rows: [],\n            };\n            const section = sections[scale];\n            const cursorValue = Number(u.posToVal(top, scale).toFixed(2));\n\n            const valueRender = getOptionValue<ValueFormatter>(opts.value, scale);\n\n            for (const seriesIdx of serieIndicies) {\n                const seriesData = u.data[seriesIdx] as DataSeries;\n                const serie = u.series[seriesIdx];\n\n                let value = findValue(this.yagr.config.cursor, seriesData, serie, idx, this.interpolation);\n                let dValue = value;\n\n                if (typeof value === 'string') {\n                    dValue = value;\n                    value = null;\n                }\n\n                if (getOptionValue(opts.sum, scale)) {\n                    sum[scale] = sum[scale] || 0;\n                    sum[scale] += value || 0;\n                }\n\n                const realY = seriesData[idx];\n                const yValue = serie.$c && serie.$c[idx] === this.stripValue ? value : realY;\n\n                if ((value === null && opts.hideNoData) || serie.showInTooltip === false) {\n                    continue;\n                }\n\n                const seriesPrecision = serie.precision ?? getOptionValue(opts.precision, scale);\n\n                const displayValue = serie.formatter\n                    ? serie.formatter(dValue, serie)\n                    : valueRender(dValue, seriesPrecision);\n\n                const rowData: TooltipRow = {\n                    id: serie.id,\n                    name: serie.name,\n                    dataValue: serie.$c[idx],\n                    originalValue: value,\n                    value: displayValue,\n                    y: yValue,\n                    displayY: realY,\n                    color: serie.color,\n                    seriesIdx,\n                    rowIdx: section.rows.length ? section.rows[section.rows.length - 1].rowIdx + 1 : 0,\n                };\n\n                if (serie.normalizedData) {\n                    rowData.transformed = serie.normalizedData[idx];\n                }\n\n                if (serie._transformed) {\n                    rowData.transformed = seriesData[idx];\n                }\n\n                if (opts.omitBy && opts.omitBy(rowData)) {\n                    continue;\n                }\n\n                section.rows.push(rowData);\n            }\n\n            if (getOptionValue(opts.highlight, scale) && section.rows.length) {\n                const tracking = getOptionValue<TrackingOptions>(opts.tracking, scale);\n                let activeIndex: number | null = 0;\n                if (tracking === 'area') {\n                    activeIndex = findInRange(\n                        section,\n                        cursorValue,\n                        getOptionValue<boolean | undefined>(opts.stickToRanges, scale),\n                    );\n                } else if (tracking === 'sticky') {\n                    activeIndex = findSticky(section, cursorValue);\n                } else if (typeof tracking === 'function') {\n                    activeIndex = tracking(section, cursorValue, {\n                        x: u.posToVal(left, 'x'),\n                        y: u.posToVal(top, scale),\n                        idx,\n                        scale,\n                        series: this.yagr.series,\n                        serieIndicies,\n                        interpolation: this.interpolation,\n                    });\n                }\n\n                if (activeIndex !== null) {\n                    section.rows[activeIndex].active = true;\n                }\n            }\n\n            const sort = getOptionValue(opts.sort, scale);\n            if (sort) {\n                section.rows.sort(sort);\n            }\n        });\n\n        const hasOneRow = Object.values(sections).some(({rows}) => rows.length > 0);\n\n        if (hasOneRow || opts.showEmpty) {\n            this.onMouseEnter();\n        } else {\n            this.hide();\n            return;\n        }\n\n        const bbox = this.over.getBoundingClientRect();\n\n        this.bLeft = bbox.left;\n        this.bTop = bbox.top;\n        this.bWidth = bbox.width;\n\n        const anchor = {\n            left: left + this.bLeft,\n            top: this.bTop + top - (opts.yOffset || 0),\n        };\n\n        this.renderTooltipCloses = () => {\n            const renderData = {\n                scales: Object.entries(sections).map(([scale, sec]) => {\n                    return {\n                        scale,\n                        rows: sec.rows,\n                        sum: sum[scale],\n                    };\n                }),\n                options: opts,\n                x,\n            };\n\n            const hasDataNow = Object.values(sections).some(\n                ({rows}) => rows.filter(({id}) => this.yagr.getSeriesById(id)?.show).length > 0,\n            );\n\n            if (!hasDataNow && !opts.showEmpty) {\n                this.hide();\n                return;\n            }\n\n            if (!opts.virtual) {\n                this.tOverlay.innerHTML = opts.render({\n                    ...renderData,\n                    state,\n                    yagr: this.yagr,\n                    defaultRender: DEFAULT_TOOLTIP_OPTIONS.render,\n                });\n\n                this.placement(this.tOverlay, anchor, 'right', {\n                    bound: this.bound,\n                    xOffset: opts.xOffset,\n                    yOffset: opts.yOffset,\n                });\n            }\n\n            this.emit('render', {...renderData, anchor});\n        };\n\n        if (state.pinned) {\n            return;\n        }\n\n        this.renderTooltipCloses();\n    };\n\n    initWithUplot = (u: uPlot) => {\n        this.over = u.root.querySelector('.u-over') as HTMLDivElement;\n\n        this.over.addEventListener('mousedown', this.onMouseDown);\n        this.over.addEventListener('mousemove', this.onMouseMove);\n        this.over.addEventListener('mouseenter', this.onMouseEnter);\n        this.over.addEventListener('mouseleave', this.onMouseLeave);\n\n        document.addEventListener('mouseup', this.onMouseUp);\n    };\n\n    setSize = () => {\n        const bbox = this.over.getBoundingClientRect();\n\n        this.bLeft = bbox.left;\n        this.bTop = bbox.top;\n    };\n\n    dispose = () => {\n        /** Free overlay listeners */\n        this.over.removeEventListener('mousedown', this.onMouseDown);\n        this.over.removeEventListener('mousemove', this.onMouseMove);\n        this.over.removeEventListener('mouseenter', this.onMouseEnter);\n        this.over.removeEventListener('mouseleave', this.onMouseLeave);\n\n        document.removeEventListener('mouseup', this.onMouseUp);\n        document.removeEventListener('mousemove', this.checkFocus);\n        document.removeEventListener('mousedown', this.detectClickOutside);\n\n        /** Removing tooltip on destroy */\n        this.tOverlay.remove();\n        this.state.mounted = false;\n        this.emit('destroy');\n    };\n\n    updateOptions = (newOptions: Partial<TooltipOptions>) => {\n        Object.assign(this.opts, newOptions);\n        this.tOverlay.className = `yagr-tooltip ${this.opts.className || ''}`;\n    };\n\n    on = (event: TooltipAction, handler: TooltipHandler) => {\n        this.handlers[event].push(handler);\n    };\n\n    off = (event: TooltipAction, handler: TooltipHandler) => {\n        this.handlers[event] = this.handlers[event].filter((h) => h !== handler);\n    };\n\n    private detectClickOutside = (event: MouseEvent) => {\n        const target = event.target;\n\n        if (target instanceof Element) {\n            const isClickInsideTooltip = target && this.tOverlay.contains(target);\n            const isClickOnUplotOver = target && this.over.contains(target);\n\n            if (!isClickInsideTooltip && !isClickOnUplotOver) {\n                this.pin(false);\n                this.hide();\n            }\n        }\n    };\n\n    private onMouseDown = (evt: MouseEvent) => {\n        this.state.range = [this.getCursorPosition(), null];\n\n        if (this.state.pinned) {\n            this.pin(false);\n            this.hide();\n            this.render({\n                left: evt.clientX - this.bLeft,\n                top: evt.clientY - this.bTop,\n                idx: this.yagr.uplot.posToIdx(evt.clientX - this.bLeft),\n            });\n            this.skipNextMouseUp = true;\n        }\n    };\n\n    private onMouseMove = () => {\n        if (this.state.range?.length) {\n            this.state.range[1] = this.getCursorPosition();\n        }\n    };\n\n    /**\n     * Calculates where exactly cursor leaved the chart\n     * and sets range[1] to this position\n     */\n    private setCursorLeaved = (e: MouseEvent) => {\n        const rect = this.over.getBoundingClientRect();\n        const x = e.clientX;\n        const range = this.state.range!;\n        const startPoint = range[0]!;\n        const xInOver = x - rect.left;\n        const end = xInOver > startPoint.clientX;\n        const timeline = this.yagr.config.timeline;\n\n        let result;\n        if (end) {\n            range[1] = {\n                clientX: this.bWidth,\n                value: this.yagr.uplot.posToVal(this.bWidth, 'x'),\n                idx: timeline.length - 1,\n            };\n            result = range[1];\n        } else {\n            /** Swap range[1] and range[0] in case if tooltip leaved chart in begining of element */\n            range[1] = range[0];\n            range[0] = {\n                clientX: 0,\n                value: this.yagr.uplot.posToVal(0, 'x'),\n                idx: 0,\n            };\n\n            result = range[0];\n        }\n\n        this.yagr.uplot.setCursor({\n            left: result.clientX,\n            top: e.clientY - rect.top,\n        });\n    };\n\n    private onMouseUp = (e: MouseEvent) => {\n        if (this.state.range === null) {\n            return;\n        }\n\n        const [from] = this.state.range || [];\n        let cursor: SelectionRange[number];\n\n        if (e.target === this.over) {\n            cursor = this.getCursorPosition();\n        } else {\n            cursor = this.state.range[1];\n        }\n\n        if (this.opts.strategy === 'none') {\n            return;\n        }\n\n        const click = from && from.clientX === cursor?.clientX;\n        const drag = from && from.clientX !== cursor?.clientX;\n\n        const strategy = this.opts.strategy;\n\n        if (\n            (click && !this.skipNextMouseUp && strategy !== 'drag') ||\n            (drag && (strategy === 'all' || strategy === 'drag'))\n        ) {\n            this.pin(!this.state.pinned);\n            this.show();\n            this.renderTooltipCloses();\n        }\n\n        this.state.range = null;\n        this.skipNextMouseUp = false;\n    };\n\n    private onMouseEnter = () => {\n        this.show();\n    };\n\n    private onMouseLeave = (e: MouseEvent) => {\n        const isPinned = this.state.pinned;\n\n        if (this.state.range?.[0]) {\n            this.setCursorLeaved(e);\n        }\n\n        if (!isPinned && this.isNotInDrag) {\n            this.hide();\n        }\n    };\n\n    private defaultTooltipValueFormatter = (n: string | number | null, precision?: number) => {\n        const pSettings = this.yagr.config.processing || {};\n\n        if (typeof n === 'string') {\n            if (pSettings.nullValues && pSettings.nullValues.hasOwnProperty(n)) {\n                return pSettings.nullValues[n] as string;\n            }\n\n            return '-';\n        }\n\n        if (typeof n === 'number') {\n            return n.toFixed(\n                // eslint-disable-next-line no-nested-ternary\n                typeof precision === 'number'\n                    ? precision\n                    : typeof this.opts.precision === 'number'\n                    ? this.opts.precision\n                    : 2,\n            );\n        }\n\n        return '-';\n    };\n\n    private getCursorPosition = (): SelectionRange[number] => {\n        const x = this.yagr.uplot.cursor.left;\n\n        if (x === undefined) {\n            return null;\n        }\n\n        return {\n            clientX: x,\n            value: this.yagr.uplot.posToVal(x, 'x'),\n            idx: this.yagr.uplot.posToIdx(x),\n        };\n    };\n\n    get interpolation() {\n        return this.yagr.config.processing?.interpolation;\n    }\n    get stripValue() {\n        return this.interpolation ? this.interpolation.value : undefined;\n    }\n    get isNotInDrag() {\n        if (this.opts.strategy === 'none' || this.opts.strategy === 'pin') {\n            return true;\n        }\n\n        return !this.state.range?.[1];\n    }\n}\n\n/*\n * Tooltip plugin constructor.\n * Every charts has it's own tooltip plugin instance\n */\nfunction YagrTooltipPlugin(yagr: Yagr, options: Partial<TooltipOptions> = {}): ReturnType<TooltipPlugin> {\n    const tooltip = new YagrTooltip(yagr, options);\n\n    const getUplotPlugin = () => ({\n        hooks: {\n            init: (u: uPlot) => {\n                tooltip.initWithUplot(u);\n            },\n            setSize: () => {\n                tooltip.setSize();\n            },\n\n            setCursor: (u: uPlot) => {\n                tooltip.render(u.cursor as Parameters<typeof tooltip.render>[0]);\n            },\n        },\n    });\n\n    const uPlotPlugin = getUplotPlugin();\n\n    function reInit(u: uPlot) {\n        const uPlugin = getUplotPlugin();\n\n        tooltip.reset();\n\n        u.hooks.init!.push(uPlugin.hooks.init);\n        u.hooks.setSize!.push(uPlugin.hooks.setSize);\n        u.hooks.setCursor!.push(uPlugin.hooks.setCursor);\n    }\n\n    return {\n        state: tooltip.state,\n        pin: tooltip.pin,\n        show: tooltip.show,\n        hide: tooltip.hide,\n        uplot: uPlotPlugin,\n        display: tooltip.render,\n        updateOptions: tooltip.updateOptions,\n        on: tooltip.on,\n        off: tooltip.off,\n        tooltip,\n        dispose: tooltip.dispose,\n        reInit,\n        reset: tooltip.reset,\n    };\n}\n\nexport default YagrTooltipPlugin;\n", "import type Yagr from '../../index';\nimport UPlot, {Plugin, Series} from 'uplot';\n\nimport {DEFAULT_X_SCALE, DEFAULT_Y_SCALE, DEFAULT_POINT_SIZE} from '../../defaults';\nimport {DotsSeriesOptions, YagrConfig} from '../../types';\nimport { isNil } from '../..//utils/common';\n\nexport const renderCircle = (\n    u: UPlot,\n    x: number,\n    y: number,\n    r: number,\n    s: number,\n    color: string,\n    strokeColor: string,\n    yScale?: string,\n) => {\n    const {ctx} = u;\n    const cx = Math.round(u.valToPos(x, DEFAULT_X_SCALE, true));\n    const cy = Math.round(u.valToPos(y, yScale || DEFAULT_Y_SCALE, true));\n\n    ctx.beginPath();\n    ctx.arc(cx, cy, r * 2, 0, 2 * Math.PI);\n\n    ctx.fillStyle = color;\n\n    if (s) {\n        const lineWidth = ctx.lineWidth;\n        const strokeStyle = ctx.strokeStyle;\n        ctx.lineWidth = s;\n        ctx.strokeStyle = strokeColor;\n        ctx.stroke();\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = strokeStyle;\n    }\n\n    ctx.fill();\n    ctx.closePath();\n};\n\nexport function drawMarkersIfRequired(u: UPlot, i: number, i0: number, i1: number) {\n    const {color, scale, spanGaps, count, pointsSize} = u.series[i];\n\n    if (spanGaps && count > 1) {\n        return false;\n    }\n\n    let j = i0;\n    let prev;\n\n    while (j <= i1) {\n        const val = u.data[i][j];\n\n        if (val === null) {\n            prev = val;\n            j++;\n            continue;\n        }\n\n        const nextIdx = j + 1;\n        const next = u.data[i][nextIdx];\n\n        if (isNil(prev) && isNil(next)) {\n            renderCircle(\n                u,\n                u.data[0][j] as number,\n                val as number,\n                pointsSize ?? (DEFAULT_POINT_SIZE / 2),\n                0,\n                color,\n                color,\n                scale || DEFAULT_Y_SCALE,\n            );\n        }\n        prev = val;\n        j++;\n    }\n\n    return undefined;\n}\n\n/*\n * This plugin configures points markers\n */\nexport default function YagrMarkersPlugin(yagr: Yagr, config: YagrConfig): Plugin {\n    const {size = DEFAULT_POINT_SIZE, strokeWidth = 2, strokeColor = '#ffffff', show} = config.markers;\n\n    const chartSeriesOptions = config.chart?.series as DotsSeriesOptions;\n    const defaultDotsSize = chartSeriesOptions?.pointsSize || DEFAULT_POINT_SIZE;\n\n    function drawCircles(u: UPlot, i: number, i0: number, i1: number) {\n        const {scale, _focus, color, getFocusedColor, type} = u.series[i];\n\n        let j = i0;\n\n        // eslint-disable-next-line no-nested-ternary\n        const pointSize = type === 'dots' ? (show ? size : defaultDotsSize) : size;\n\n        while (j <= i1) {\n            const val = u.data[i][j];\n            if (val !== null) {\n                renderCircle(\n                    u,\n                    u.data[0][j] as number,\n                    val as number,\n                    pointSize,\n                    strokeWidth,\n                    (_focus || _focus === null ? color : getFocusedColor(yagr, i)) || color,\n                    strokeColor,\n                    scale || DEFAULT_Y_SCALE,\n                );\n            }\n            j++;\n        }\n\n        return undefined;\n    }\n\n    const markSeries = (idx: number | null, s: Series) => {\n        if (idx === 0 || idx === null) {\n            return;\n        }\n\n        if (s.type === 'dots' || config.markers.show) {\n            s.points = s.points || {};\n            s.points.show = drawCircles;\n        }\n    };\n\n    return {\n        opts: (_, opts) => {\n            if (!(config.markers.show || opts.series.some((s) => s.type === 'dots'))) {\n                return;\n            }\n            opts.series.forEach((s, i) => markSeries(i, s));\n        },\n\n        hooks: {\n            addSeries: (uplot, seriesIdx) => {\n                const series = uplot.series[seriesIdx];\n                markSeries(seriesIdx, series);\n            },\n            setSeries: (_, idx, series) => {\n                markSeries(idx, series);\n            },\n        },\n    };\n}\n", "import UPlot from 'uplot';\nimport * as defaults from '../defaults';\n\n/*\n * Configures and return apropriate path renderer\n * by given serieIndex and two points\n */\nexport function pathsRenderer(u: UPlot, seriesIdx: number, idx0: number, idx1: number) {\n    const serie = u.series[seriesIdx];\n    const {type, interpolation} = serie;\n\n    let drawer;\n\n    switch (type) {\n        case 'column': {\n            drawer =\n                UPlot.paths.bars &&\n                UPlot.paths.bars({\n                    size: [defaults.BARS_DRAW_FACTOR, defaults.BARS_DRAW_MAX],\n                    ...(u.series[seriesIdx].renderOptions || {}),\n                });\n            break;\n        }\n        case 'dots': {\n            drawer = () => null;\n            break;\n        }\n        case 'line':\n        case 'area':\n        default: {\n            switch (interpolation) {\n                case 'smooth':\n                    drawer = UPlot.paths.spline && UPlot.paths.spline();\n                    break;\n                case 'left':\n                    drawer = UPlot.paths.stepped && UPlot.paths.stepped({align: 1});\n                    break;\n                case 'right': {\n                    drawer = UPlot.paths.stepped && UPlot.paths.stepped({align: -1});\n                    break;\n                }\n                case 'linear':\n                default:\n                    drawer = UPlot.paths.linear && UPlot.paths.linear();\n                    break;\n            }\n        }\n    }\n\n    return drawer ? drawer(u, seriesIdx, idx0, idx1) : null;\n}\n", "import {Series} from 'uplot';\n\nimport * as defaults from '../defaults';\nimport type Yagr from '..';\n\nimport {\n    AreaSeriesOptions,\n    ColumnSeriesOptions,\n    DotsSeriesOptions,\n    LineSeriesOptions,\n    RawSerieData,\n    SeriesOptions,\n} from '../types';\nimport {genId} from './common';\nimport {getFocusedColor, getSerieFocusColors} from './colors';\nimport {drawMarkersIfRequired} from '../plugins/markers';\nimport {pathsRenderer} from './paths';\n\nfunction getCommonProperty<T extends SeriesOptions, K extends keyof T>(\n    series: RawSerieData | Series,\n    yagr: Yagr,\n    key: K,\n    defaultValue?: T[K],\n): T[K] | undefined {\n    if (series[key as keyof typeof series] !== undefined) {\n        return series[key as keyof typeof series] as T[K];\n    }\n\n    const seriesOptions = yagr.config.chart.series;\n    if (seriesOptions && key in seriesOptions) {\n        return seriesOptions[key as keyof SeriesOptions] as T[K];\n    }\n\n    return defaultValue;\n}\n\n// eslint-disable-next-line complexity\nexport function configureSeries(yagr: Yagr, rawSeries: RawSerieData, idx: number): Series {\n    const type = getCommonProperty(rawSeries, yagr, 'type', 'line');\n\n    const serie: Series = {\n        ...rawSeries,\n        type,\n        show: rawSeries.show ?? true,\n        name: rawSeries.name || `${yagr.utils.i18n('series')} ${idx + 1}`,\n        color: rawSeries.color ? yagr.utils.colors.parse(rawSeries.color) : yagr.utils.theme.DEFAULT_LINE_COLOR,\n        id: (rawSeries.id === undefined ? rawSeries.name : String(rawSeries.id)) || genId(),\n        $c: rawSeries.data,\n        scale: rawSeries.scale || defaults.DEFAULT_Y_SCALE,\n        count: 0,\n        sum: 0,\n        avg: 0,\n        getFocusedColor,\n    };\n\n    serie.points = serie.points || {};\n\n    const colorFn = getSerieFocusColors(yagr, 'color');\n\n    if (serie.type === 'area') {\n        serie.lineColor = yagr.utils.colors.parse(\n            getCommonProperty<AreaSeriesOptions, 'lineColor'>(\n                rawSeries,\n                yagr,\n                'lineColor',\n                defaults.SERIE_AREA_BORDER_COLOR,\n            ),\n        );\n        serie.lineWidth = getCommonProperty<AreaSeriesOptions, 'lineWidth'>(\n            rawSeries,\n            yagr,\n            'lineWidth',\n            defaults.SERIE_AREA_BORDER_WIDTH,\n        );\n\n        serie.fill = colorFn;\n        serie.stroke = getSerieFocusColors(yagr, 'lineColor');\n        serie.width = serie.lineWidth;\n        serie.points.show = drawMarkersIfRequired;\n        serie.interpolation = getCommonProperty<AreaSeriesOptions, 'interpolation'>(\n            rawSeries,\n            yagr,\n            'interpolation',\n            'linear',\n        );\n        serie.spanGaps = getCommonProperty<AreaSeriesOptions, 'spanGaps'>(rawSeries, yagr, 'spanGaps', false);\n    }\n\n    if (serie.type === 'line') {\n        serie.width = getCommonProperty<LineSeriesOptions, 'width'>(\n            rawSeries,\n            yagr,\n            'width',\n            defaults.SERIE_LINE_WIDTH,\n        );\n        serie.width = serie.width || defaults.SERIE_LINE_WIDTH;\n        serie.stroke = colorFn;\n        serie.points.show = drawMarkersIfRequired;\n        serie.interpolation = getCommonProperty<LineSeriesOptions, 'interpolation'>(\n            rawSeries,\n            yagr,\n            'interpolation',\n            'linear',\n        );\n        serie.spanGaps = getCommonProperty<LineSeriesOptions, 'spanGaps'>(rawSeries, yagr, 'spanGaps', false);\n    }\n\n    if (serie.type === 'column') {\n        serie.stroke = colorFn;\n        serie.fill = colorFn;\n        serie.points.show = false;\n        serie.width = serie.width ?? 0;\n        serie.renderOptions = getCommonProperty<ColumnSeriesOptions, 'renderOptions'>(serie, yagr, 'renderOptions');\n    }\n\n    if (serie.type === 'dots') {\n        serie.stroke = () => serie.color;\n        serie.fill = colorFn;\n        serie.width = 2;\n        serie.pointsSize = getCommonProperty<DotsSeriesOptions, 'pointsSize'>(\n            serie,\n            yagr,\n            'pointsSize',\n            defaults.DEFAULT_POINT_SIZE,\n        );\n    }\n\n    serie.paths = pathsRenderer;\n\n    return serie;\n}\n\nexport const overrideSeriesInUpdate = (dest: Series, source: Series) => {\n    dest.$c = source.$c ?? dest.$c;\n    dest.show = source.show ?? dest.show;\n    dest.data = source.data ?? dest.data;\n    dest.width = source.width ?? dest.width;\n    dest.pointsSize = source.pointsSize ?? dest.pointsSize;\n    dest.color = source.color ?? dest.color;\n    dest.lineColor = source.lineColor ?? dest.lineColor;\n    dest.lineWidth = source.lineWidth ?? dest.lineWidth;\n    dest.stroke = source.stroke ?? dest.stroke;\n    dest.getFocusedColor = source.getFocusedColor ?? dest.getFocusedColor;\n    dest.formatter = source.formatter ?? dest.formatter;\n    dest.paths = source.paths ?? dest.paths;\n};\n", "import type {Scale as uScale, DrawOrderKey as uDrawOrderKey, Axis as uAxis} from 'uplot';\n\nexport const DrawOrderKey: Record<keyof typeof uDrawOrderKey, uDrawOrderKey> = {\n    Series: 'series' as uDrawOrderKey.Series,\n    Axes: 'axes' as uDrawOrderKey.Axes,\n};\n\ninterface YScale {\n    Distr: Record<keyof typeof uScale.Distr, uScale.Distr>;\n}\n\nexport const Scale: YScale = {\n    Distr: {\n        Linear: 1 as uScale.Distr.Linear,\n        Ordinal: 2 as uScale.Distr.Ordinal,\n        Logarithmic: 3 as uScale.Distr.Logarithmic,\n        ArcSinh: 4 as uScale.Distr.ArcSinh,\n    },\n};\n\ninterface YAxis {\n    Side: Record<keyof typeof uAxis.Side, uAxis.Side>;\n    Align: Record<keyof typeof uAxis.Align, uAxis.Align>;\n}\n\nexport const Axis: YAxis = {\n    Side: {\n        Top: 0 as uAxis.Side.Top,\n        Right: 1 as uAxis.Side.Right,\n        Bottom: 2 as uAxis.Side.Bottom,\n        Left: 3 as uAxis.Side.Left,\n    },\n    Align: {\n        Right: 0 as uAxis.Align.Right,\n        Left: 1 as uAxis.Align.Left,\n    },\n};\n", "/* eslint-disable no-nested-ternary */\nimport UPlot, {Range} from 'uplot';\nimport {YagrConfig, Scale} from '../types';\nimport {\n    DEFAULT_MAX_TICKS,\n    DEFAULT_Y_AXIS_OFFSET,\n    DEFAULT_SCALE_MIN_RANGE,\n    DEFAULT_LOGARITHMIC_MIN_SCALE_VALUE,\n    DEFAULT_X_SCALE,\n} from '../defaults';\nimport type Yagr from '../index';\nimport {Scale as YScale} from './types';\n\ntype ScaleRangeType = (min: number, max: number, scfg: Scale, ycfg: YagrConfig) => {min: number; max: number};\n\nexport const getScaleRange = (scale: Scale, config: YagrConfig) => {\n    const range = scale.range;\n    if (typeof range === 'function') {\n        return (u: UPlot, dataMin: number, dataMax: number) => {\n            return range(u, dataMin, dataMax, config);\n        };\n    }\n\n    if (scale.normalize) {\n        return [0, scale.normalizeBase || 100] as Range.MinMax;\n    }\n\n    if (scale.range === 'auto') {\n        return undefined;\n    }\n\n    let rangeFn: ScaleRangeType;\n\n    switch (scale.range) {\n        case undefined:\n        case 'nice': {\n            rangeFn = niceScale;\n            break;\n        }\n        case 'offset': {\n            rangeFn = offsetScale;\n            break;\n        }\n        default:\n            throw new Error(`Unknown scale range type ${scale.range}`);\n    }\n\n    return (_: UPlot, dMin: number, dMax: number): Range.MinMax => {\n        let {min, max} = rangeFn(dMin, dMax, scale, config);\n\n        const minRange = scale.minRange || DEFAULT_SCALE_MIN_RANGE;\n\n        if (Math.abs(max - min) < minRange) {\n            if (min >= 0) {\n                max += minRange;\n            } else {\n                max += minRange / 2;\n                min -= minRange / 2;\n            }\n        }\n\n        min = typeof scale.min === 'number' ? scale.min : min;\n        max = typeof scale.max === 'number' ? scale.max : max;\n\n        /** Protect logarithmic scale from impossible min values */\n        if (scale.type === 'logarithmic') {\n            const isScaleMinDefined = typeof scale.min === 'number';\n\n            if (min <= 0) {\n                min = DEFAULT_LOGARITHMIC_MIN_SCALE_VALUE;\n            } else if (!isScaleMinDefined) {\n                min = Math.min(min, DEFAULT_LOGARITHMIC_MIN_SCALE_VALUE);\n            }\n        }\n\n        if (min >= max || max <= min) {\n            if (typeof scale.max === 'number') {\n                min = max - (niceNum(max - max * 0.1, false) || 1);\n            } else {\n                max = min + (niceNum(min + min * 0.1, false) || 1);\n            }\n        }\n\n        return [min, max];\n    };\n};\n\nexport function offsetScale(dataMin: number, dataMax: number, scaleConfig: Scale) {\n    const startFromZero = dataMin >= 0 && scaleConfig.stacking;\n    const endWithZero = dataMax <= 0 && scaleConfig.stacking;\n\n    return {\n        min: startFromZero\n            ? 0\n            : Math.round(dataMin - Math.abs(dataMin) * (scaleConfig.offset || DEFAULT_Y_AXIS_OFFSET)),\n        max: endWithZero ? 0 : Math.round(dataMax + Math.abs(dataMax) * (scaleConfig.offset || DEFAULT_Y_AXIS_OFFSET)),\n    };\n}\n\n/*\n * Implementation nice scale (see https://www.baeldung.com/cs/choosing-linear-scale-y-axis#procedure-for-identifying-scale-and-ticks)\n * with extra options inherited from Solomon stacked area visualization\n * with extra options implementing consistent incr proximity if dataMin ~= dataMax. (16.01.2020)\n * with extra options for small ranges between max and min (27.01.2020)\n */\nexport function niceScale(dataMin: number, dataMax: number, scaleConfig: Scale) {\n    const startFromZero = dataMin >= 0 && scaleConfig.stacking;\n    const endWithZero = dataMax <= 0 && scaleConfig.stacking;\n\n    /**\n     * This code handles case when scale has user max/min and niceScale's\n     * range after usage of given max-min from scale config creates not centered lines\n     */\n    const dMax = endWithZero ? 0 : typeof scaleConfig.max === 'number' ? scaleConfig.max : dataMax;\n    const dMin = startFromZero ? 0 : typeof scaleConfig.min === 'number' ? scaleConfig.min : dataMin;\n\n    if (dMin === dMax) {\n        return dMin >= 0 ? {min: dMin, max: dMin + 2} : {min: dMin - 1, max: dMin + 1};\n    }\n\n    const difference = dMax - dMin;\n    const range = niceNum(difference, false);\n    const incr = niceNum(range / (DEFAULT_MAX_TICKS - 1), true);\n    let max = Math.ceil(dMax / incr) * incr;\n    max = isNaN(max) ? 100 : max;\n    let min = (startFromZero ? Math.min(0, dMin) : Math.floor(dMin / incr) * incr) || 0;\n\n    /** Workaround for weird ranges */\n    if (min === max) {\n        min -= 1;\n        max += 1;\n    }\n\n    return {\n        min,\n        max,\n    };\n}\n\nfunction niceNum(delta: number, round: boolean) {\n    const exp = Math.floor(Math.log10(delta));\n    const frac = delta / 10 ** exp;\n\n    const niceFrac = round\n        ? frac < 1.5\n            ? 1\n            : frac < 3\n            ? 2\n            : frac < 7\n            ? 5\n            : 10\n        : frac <= 1\n        ? 1\n        : frac <= 2\n        ? 2\n        : frac <= 5\n        ? 5\n        : 10;\n\n    return niceFrac * 10 ** exp;\n}\n\nexport function configureScales(yagr: Yagr, scales: UPlot.Scales, config: YagrConfig) {\n    const scalesToMap = config.scales ? {...config.scales} : {};\n\n    if (!Object.keys(config.scales).length) {\n        scalesToMap.y = {};\n    }\n\n    Object.entries(scalesToMap).forEach(([scaleName, scaleConfig]) => {\n        scales[scaleName] = scales[scaleName] || {};\n        const scale = scales[scaleName];\n\n        if (scaleName === DEFAULT_X_SCALE) {\n            return;\n        }\n\n        const forceMin = typeof scaleConfig.min === 'number' ? scaleConfig.min : null;\n        const forceMax = typeof scaleConfig.max === 'number' ? scaleConfig.max : null;\n\n        /** At first handle case when scale has setted min and max */\n        if (forceMax !== null && forceMin !== null) {\n            if (forceMax <= forceMin) {\n                throw new Error('Invalid scale config. .max should be > .min');\n            }\n            scale.range = [forceMin, forceMax];\n        }\n\n        const isLogScale = scaleConfig.type === 'logarithmic';\n\n        if (isLogScale) {\n            scale.distr = YScale.Distr.Logarithmic;\n            scale.range = getScaleRange(scaleConfig, config);\n\n            return;\n        }\n\n        if (yagr.isEmpty) {\n            scale.range = [forceMin === null ? (isLogScale ? 1 : 0) : forceMin, forceMax === null ? 100 : forceMax];\n            return;\n        }\n\n        scale.range = getScaleRange(scaleConfig, config);\n    });\n\n    if (!scales.x) {\n        scales.x = {\n            time: true,\n        };\n    }\n\n    return scales;\n}\n", "import uPlot from 'uplot';\nimport type {Axis} from 'uplot';\nimport * as defaults from '../defaults';\nimport type Yagr from '../../';\nimport {YagrConfig, AxisOptions} from '../types';\n\nimport {asFn, getUnitSuffix, isNil, px, toFixed} from './common';\nimport {Axis as TypedAxis} from './types';\n\nconst YAGR_AXIS_TO_UPLOT_AXIS = {\n    right: TypedAxis.Side.Right,\n    top: TypedAxis.Side.Top,\n    bottom: TypedAxis.Side.Bottom,\n    left: TypedAxis.Side.Left,\n};\n\nconst AXIS_SIDE_TO_ALIGN = {\n    left: TypedAxis.Align.Right,\n    right: TypedAxis.Align.Left,\n    top: undefined,\n    bottom: undefined,\n};\n\nexport const getAxisPositioning = (side: AxisOptions['side'], align: Axis['align']) => {\n    return {\n        side: side ? YAGR_AXIS_TO_UPLOT_AXIS[side] : TypedAxis.Side.Left,\n        align: align || (side ? AXIS_SIDE_TO_ALIGN[side] : undefined),\n    };\n};\n\nexport const getDefaultNumberFormatter = (precision: 'auto' | number, nullValue = '') => {\n    return (n: number | null) => {\n        if (isNil(n)) {\n            return nullValue;\n        }\n\n        if (n === 0) {\n            return '0';\n        }\n\n        const abs = Math.abs(n);\n        const precisionNum = precision === 'auto' ? 2 : precision;\n\n        const [pow, suffix] = getUnitSuffix(abs);\n        const transformedValue = n / pow;\n\n        return (\n            (precision === 'auto'\n                ? String(transformedValue).replace(/\\.(\\d{5,})/, (match) => {\n                      return match.slice(0, 6);\n                  })\n                : toFixed(transformedValue, precisionNum)) + suffix\n        );\n    };\n};\n\n/*\n * Generates ticks labels values\n */\nconst getNumericValueFormatter = (axisConfig: AxisOptions) => {\n    const p = axisConfig.precision;\n    const numFormatter = getDefaultNumberFormatter(typeof p === 'number' ? p : p || 'auto', '');\n    return function defaultNumericValueFormatter(_: unknown, ticks: number[]) {\n        return ticks.map(numFormatter);\n    };\n};\n\nconst dayTimeFormatter = uPlot.fmtDate('{DD}.{MM}.{YYYY}');\nconst dateTimeFormatter = uPlot.fmtDate('{HH}:{mm}:{ss}');\nconst minuteFormatter = uPlot.fmtDate('{mm}:{ss}');\nconst secondFormatter = uPlot.fmtDate('{mm}:{ss}.{fff}');\nconst yearFormatter = uPlot.fmtDate('{YYYY}');\n\nfunction getTimeFormatterByRange(range: number, ticksCount: number) {\n    let formatter = dayTimeFormatter;\n    const minRange = Math.ceil(range / ticksCount);\n\n    if (minRange <= defaults.SECOND) {\n        formatter = secondFormatter;\n    } else if (minRange <= defaults.MINUTE) {\n        formatter = minuteFormatter;\n    } else if (minRange <= defaults.DAY) {\n        formatter = dateTimeFormatter;\n    } else if (minRange >= defaults.YEAR) {\n        formatter = yearFormatter;\n    }\n\n    return (x: number) => formatter(new Date(x));\n}\n\nexport const getTimeFormatter = (config: YagrConfig) => {\n    const msm = config.chart.timeMultiplier || defaults.TIME_MULTIPLIER;\n    return (_: unknown, ticks: number[]) => {\n        const range = ticks[ticks.length - 1] - ticks[0];\n        const rangeMs = range / msm;\n        const formatter = getTimeFormatterByRange(rangeMs, ticks.length);\n\n        return ticks.map((rawValue) => {\n            return formatter(rawValue / msm);\n        });\n    };\n};\n\nfunction getSplits(splitsCount: number) {\n    return (_: uPlot, __: number, scaleMin: number, scaleMax: number) => {\n        if (splitsCount <= 2) {\n            return [scaleMin, scaleMax];\n        }\n\n        const dist = Math.abs(scaleMax - scaleMin);\n        const step = dist / (splitsCount - 1);\n        let i = step;\n        const splits = [];\n        while (scaleMin + i < scaleMax) {\n            splits.push(scaleMin + i);\n            i += step;\n        }\n        return [scaleMin, ...splits, scaleMax];\n    };\n}\n\n// eslint-disable-next-line complexity\nfunction getAxis(axisConfig: AxisOptions, yagr: Yagr): Axis {\n    const theme = yagr.utils.theme;\n    const config = yagr.config;\n\n    const axis: Axis = {\n        splits: axisConfig.splitsCount ? getSplits(axisConfig.splitsCount) : axisConfig.splits,\n        show: typeof axisConfig.show === 'undefined' ? true : axisConfig.show,\n        label: axisConfig.label || undefined,\n        labelSize: axisConfig.labelSize || defaults.Y_AXIS_LABEL_SIZE,\n        labelFont: axisConfig.labelFont || defaults.AXIS_LABEL_FONT,\n        font: axisConfig.font || defaults.AXIS_VALUES_FONT,\n        stroke: axisConfig.stroke || (() => theme.AXIS_STROKE),\n        ticks: axisConfig.ticks ? {...theme.Y_AXIS_TICKS, ...axisConfig.ticks} : theme.Y_AXIS_TICKS,\n        grid: config.grid || axisConfig.grid || theme.GRID,\n    };\n\n    if (axisConfig.scale === defaults.DEFAULT_X_SCALE) {\n        return Object.assign(axis, {\n            getFormatter: getTimeFormatterByRange,\n            gap: axisConfig.gap ?? defaults.X_AXIS_TICK_GAP,\n            size: asFn(axisConfig.size) || (() => defaults.X_AXIS_SIZE),\n            values: axisConfig.values || getTimeFormatter(config),\n            ticks: axisConfig.ticks ? {...theme.X_AXIS_TICKS, ...axisConfig.ticks} : theme.X_AXIS_TICKS,\n            scale: defaults.DEFAULT_X_SCALE,\n            space: axisConfig.space || (() => defaults.X_AXIS_SPACE),\n            incrs: axisConfig.incrs || (() => defaults.X_AXIS_INCRS.map((i) => i * (config.chart.timeMultiplier || defaults.TIME_MULTIPLIER))),\n            side: 2,\n            stroke: axisConfig.stroke || (() => theme.AXIS_STROKE),\n        });\n    }\n\n    Object.assign(axis, {\n        gap: axisConfig.gap ?? defaults.Y_AXIS_TICK_GAP,\n        size: asFn(axisConfig.size) || defaults.Y_AXIS_SIZE,\n        values: axisConfig.values || getNumericValueFormatter(axisConfig),\n        scale: axisConfig.scale || defaults.DEFAULT_Y_SCALE,\n        getFormatter: () =>\n            getDefaultNumberFormatter(\n                typeof axisConfig.precision === 'number' ? axisConfig.precision : axisConfig.precision || 'auto',\n                '',\n            ),\n        ...getAxisPositioning(axisConfig.side || 'left', axisConfig.align),\n    });\n\n    if (axisConfig.space) {\n        axis.space = axisConfig.space;\n    }\n\n    return axis;\n}\n\nexport function getRedrawOptionsForAxesUpdate(axes: YagrConfig['axes']) {\n    const options: [series: boolean, axes: boolean] = [false, true];\n\n    Object.values(axes).forEach((s) => {\n        const uOpts: (keyof AxisOptions)[] = ['align', 'side', 'size', 'label', 'labelFont', 'labelGap', 'labelSize'];\n        if (uOpts.some((t) => s[t] !== undefined)) {\n            options[1] = true;\n        }\n    });\n\n    return options;\n}\n\n\nfunction pxRatioFont(font: string) {\n\tlet fontSize, fontSizeCss;\n    // eslint-disable-next-line no-return-assign\n\tfont = font.replace(/(\\d+)px/, (_, p1) => px((fontSize = Math.round((fontSizeCss = Number(p1)) * window.devicePixelRatio))));\n\treturn [font, fontSize, fontSizeCss];\n}\n\nexport function updateAxis(yagr: Yagr, uAxis: Axis, axisConfig: AxisOptions) {\n    const upd = getAxis(\n        {\n            ...axisConfig,\n            font: uAxis.font,\n        },\n        yagr,\n    );\n\n    upd.ticks = {...uAxis.ticks, ...upd.ticks};\n    upd.grid = {...uAxis.grid, ...upd.grid};\n    upd.border = {...uAxis.border, ...upd.border};\n    upd.splits = upd.splits || uAxis.splits;\n\n    /**\n     * uPlot implicitly converts theese properties and mutate axis.font and axis.labelFont\n     * but doesn't cover it with typings.\n     * @see https://github.com/leeoniya/uPlot/blob/378faf6fab9b84d86fd25a5b4425dc44d486b64d/src/uPlot.js#L275\n     */\n    if (axisConfig.font && axisConfig.font !== uAxis.font?.[0]) {\n        //@ts-ignore \n        upd.font = pxRatioFont(axisConfig.font);\n    }\n    if (axisConfig.labelFont && axisConfig.labelFont !== uAxis.labelFont?.[0]) {\n        //@ts-ignore\n        upd.labelFont = pxRatioFont(axisConfig.labelFont);\n    }\n\n    Object.assign(uAxis, upd);\n\n    yagr.plugins.plotLines?.update(axisConfig.plotLines, axisConfig.scale);\n}\n\nexport function configureAxes(yagr: Yagr, config: YagrConfig) {\n    const axes: Axis[] = [];\n\n    Object.entries(config.axes).forEach(([scale, axisConfig]) => {\n        axes.push(getAxis({...axisConfig, scale}, yagr));\n    });\n\n    const x = defaults.DEFAULT_X_SCALE;\n    const y = defaults.DEFAULT_Y_SCALE;\n\n    if (!config.axes[x]) {\n        axes.push(getAxis({scale: x}, yagr));\n    }\n\n    if (!axes.find(({scale}) => scale !== x)) {\n        axes.push(getAxis({scale: y}, yagr));\n    }\n\n    return axes;\n}\n", "import {Options, Padding} from 'uplot';\nimport * as defaults from '../defaults';\n\nexport function getPaddingByAxes(options: Options): Padding {\n    let hasLeftAxis = false;\n    let hasRightAxis = false;\n\n    if (options.axes) {\n        options.axes.forEach((axis) => {\n            if (axis.scale === defaults.DEFAULT_X_SCALE) {\n                return;\n            }\n\n            if (axis.side === undefined || axis.side === 3) {\n                hasLeftAxis = true;\n            }\n            if (axis.side === 1) {\n                hasRightAxis = true;\n            }\n        });\n    } else {\n        hasLeftAxis = true;\n    }\n\n    if (hasLeftAxis && !hasRightAxis) {\n        return defaults.PADDING_LEFT;\n    } else if (hasRightAxis && !hasLeftAxis) {\n        return defaults.PADDING_RIGHT;\n    } else {\n        return defaults.PADDING_BOTH;\n    }\n}\n", "import type Yagr from '../../';\nimport UPlot, {Plugin} from 'uplot';\nimport {DEFAULT_X_SCALE, DEFAULT_CANVAS_PIXEL_RATIO} from '../../defaults';\nimport {PLineConfig, PlotLineConfig, YagrPlugin} from '../../types';\nimport {DrawOrderKey} from '../../utils/types';\nimport {deepIsEqual} from '../../utils/common';\nimport {PBandConfig} from 'src/types';\n\nconst MAX_X_SCALE_LINE_OFFSET = 0;\nconst DRAW_MAP = {\n    [DrawOrderKey.Series]: 0,\n    [DrawOrderKey.Axes]: 1,\n    plotLines: 2,\n};\n\nfunction hasPlotLine(list: PlotLineConfig[], p: PlotLineConfig) {\n    return list.some((pl) => {\n        return deepIsEqual(pl, p);\n    });\n}\n\nconst HOOKS_MAP: Record<string, 'draw' | 'drawClear' | 'drawAxes' | 'drawSeries'> = {\n    '012': 'draw',\n    '102': 'draw',\n    '201': 'drawClear',\n    '210': 'drawClear',\n    '120': 'drawAxes',\n    '021': 'drawSeries',\n};\n\nexport type PlotLinesPlugin = YagrPlugin<{\n    update: (additionalPlotLines?: PlotLineConfig[], scale?: string) => void;\n    add: (additionalPlotLines: PlotLineConfig[], scale?: string) => void;\n    clear: (scale?: string) => void;\n    get: () => PlotLineConfig[];\n    remove: (plotLinesToRemove: PlotLineConfig[], scale?: string) => void;\n}>;\n\nexport interface PlotLineOptions {\n    render: (uPlot: uPlot, p: PlotLineConfig) => void;\n}\n\n/*\n * Plugin renders custom lines and bands on chart based on axis config.\n * Axis should be bound to scale.\n */\nexport default function plotLinesPlugin(options: PlotLineOptions): PlotLinesPlugin {\n    let plotLines: PlotLineConfig[] = [];\n\n    return function (yagr: Yagr) {\n        const drawOrder = yagr.config.chart.appearance?.drawOrder;\n\n        const drawIndicies = (drawOrder ? drawOrder.map((key) => DRAW_MAP[key]) : [0, 1, 2]).join('');\n\n        const hook = HOOKS_MAP[drawIndicies] || 'drawClear';\n\n        function renderPlotLines(u: UPlot) {\n            const {ctx} = u;\n            const {height, top, width, left} = u.bbox;\n            const timeline = u.data[0];\n\n            for (const plotLineConfig of plotLines) {\n                if (!plotLineConfig.scale) {\n                    continue;\n                }\n\n                if (options.render) {\n                    options.render(u, plotLineConfig);\n                    continue;\n                }\n\n                ctx.save();\n                ctx.fillStyle = yagr.utils.colors.parse(plotLineConfig.color);\n\n                const {scale, value} = plotLineConfig;\n\n                if (Array.isArray(value)) {\n                    /** This weird code should handles unexpected Inifinities in values */\n                    const [fromValue, toValue] = value.map((val) => {\n                        if (Math.abs(val) !== Infinity) {\n                            if (scale === DEFAULT_X_SCALE) {\n                                if (val < timeline[0]) {\n                                    return timeline[0];\n                                }\n\n                                if (val > timeline[timeline.length - 1]) {\n                                    return timeline[timeline.length - 1];\n                                }\n                            } else {\n                                const scaleCfg = u.scales[scale];\n                                if (scaleCfg.min !== undefined && val < scaleCfg.min) {\n                                    return scaleCfg.min;\n                                }\n\n                                if (scaleCfg.max !== undefined && val > scaleCfg.max) {\n                                    return scaleCfg.max;\n                                }\n                            }\n\n                            return val;\n                        }\n\n                        const pos =\n                            val > 0\n                                ? scale === DEFAULT_X_SCALE\n                                    ? u.width\n                                    : 0\n                                : scale === DEFAULT_X_SCALE\n                                ? 0\n                                : u.height;\n\n                        return u.posToVal(pos, scale);\n                    });\n\n                    const from = u.valToPos(fromValue, scale, true);\n                    const to = u.valToPos(toValue, scale, true);\n                    const accent = (plotLineConfig as PBandConfig).accent;\n\n                    if (scale === DEFAULT_X_SCALE) {\n                        ctx.fillRect(from, top, to - from, height);\n                        if (accent) {\n                            ctx.fillStyle = accent.color;\n                            ctx.fillRect(from, top - accent.space, to - from, accent.space);\n                        }\n                    } else {\n                        ctx.fillRect(left, from, width, to - from);\n                        if (accent) {\n                            ctx.fillStyle = accent.color;\n                            ctx.fillRect(width + left, from, accent.space, to - from);\n                        }\n                    }\n                } else {\n                    const from = u.valToPos(value, scale, true);\n                    const pConf = plotLineConfig as PLineConfig;\n\n                    ctx.beginPath();\n\n                    if (scale === DEFAULT_X_SCALE) {\n                        /** Workaround to ensure that plot line will not be drawn over axes */\n                        const last = u.data[0][u.data[0].length - 1] as number;\n                        const lastValue = u.valToPos(last, scale, true);\n                        if (from - lastValue > MAX_X_SCALE_LINE_OFFSET) {\n                            continue;\n                        }\n\n                        ctx.moveTo(from, top);\n\n                        ctx.lineTo(from, height + top);\n                    } else {\n                        ctx.moveTo(left, from);\n                        ctx.lineTo(width + left, from);\n                    }\n\n                    ctx.lineWidth = pConf.width || DEFAULT_CANVAS_PIXEL_RATIO;\n                    ctx.strokeStyle = pConf.color || '#000';\n                    pConf.dash && ctx.setLineDash(pConf.dash);\n                    ctx.closePath();\n                    ctx.stroke();\n                }\n                ctx.restore();\n            }\n        }\n\n        const handler =\n            hook === 'drawSeries'\n                ? (u: UPlot, sIdx: number) => {\n                      if (sIdx === u.series.length - 1) {\n                          renderPlotLines(u);\n                      }\n                  }\n                : renderPlotLines;\n\n        const plugin = {\n            get: () => plotLines,\n            clear: (scale?: string) => {\n                plotLines = scale\n                    ? plotLines.filter((p) => {\n                          return p.scale !== scale;\n                      })\n                    : [];\n            },\n            remove: (plotLinesToRemove: PlotLineConfig[]) => {\n                plotLines = plotLines.filter((p) => {\n                    return !hasPlotLine(plotLinesToRemove, p);\n                });\n            },\n            add: (additionalPlotLines: PlotLineConfig[], scale?: string) => {\n                for (const p of additionalPlotLines) {\n                    plotLines.push(scale ? {scale, ...p} : p);\n                }\n            },\n            update: (newPlotLines?: PlotLineConfig[], scale?: string) => {\n                if (!newPlotLines || newPlotLines.length === 0) {\n                    plugin.clear(scale);\n                    return;\n                }\n\n                const additions = newPlotLines!.filter((p) => {\n                    return !hasPlotLine(plotLines, p);\n                });\n\n                const removes = plotLines.filter((p) => {\n                    return !hasPlotLine(newPlotLines!, p);\n                });\n\n                additions.length && plugin.add(additions, scale);\n                removes.length && plugin.remove(removes);\n            },\n            uplot: {\n                opts: () => {\n                    const config = yagr.config;\n                    plotLines = [];\n\n                    /** Collecting plot lines from config axes for plotLines plugin */\n                    Object.entries(config.axes).forEach(([scale, axisConfig]) => {\n                        if (axisConfig.plotLines) {\n                            axisConfig.plotLines.forEach((plotLine) => {\n                                plotLines.push({...plotLine, scale});\n                            });\n                        }\n                    });\n                },\n                hooks: {\n                    // @TODO Add feature to draw plot lines over series\n                    [hook]: handler,\n                },\n            } as Plugin,\n        };\n\n        return plugin;\n    };\n}\n", "/* eslint-disable complexity */\n\nimport uPlot, {Series, Plugin, Options as UPlotOptions, DrawOrderKey as uDrawOrderKey} from 'uplot';\n\nimport type {MinimalValidConfig} from '../types';\nimport Yagr, {YagrMeta} from '..';\n\nimport tooltipPlugin from '../plugins/tooltip/tooltip';\nimport CursorPlugin from '../plugins/cursor/cursor';\nimport {\n    DEFAULT_CANVAS_PIXEL_RATIO,\n    DEFAULT_FOCUS_ALPHA,\n    DEFAULT_X_SCALE,\n    DEFAULT_X_SERIE_NAME,\n    MIN_SELECTION_WIDTH,\n    TIME_MULTIPLIER,\n} from '../defaults';\nimport {configureSeries} from '../utils/series';\nimport markersPlugin from '../plugins/markers';\nimport {configureScales} from '../utils/scales';\nimport {configureAxes} from '../utils/axes';\nimport {getPaddingByAxes} from '../utils/chart';\nimport {DrawOrderKey} from '../utils/types';\nimport plotLinesPlugin from '../plugins/plotLines/plotLines';\n\nfunction setIfNotSet(hooks: uPlot.Hooks.Arrays[keyof uPlot.Hooks.Arrays], fn: (u: uPlot) => void) {\n    for (const hook of hooks || []) {\n        if (hook === fn) {\n            return;\n        }\n    }\n    hooks?.push(fn);\n}\n\nexport class CreateUplotOptionsMixin<T extends MinimalValidConfig> {\n    initMixin(this: Yagr) {\n        this._uHooks.onDraw = () => {\n            if (this.state.stage === 'listen') {\n                return;\n            }\n            this.state.stage = 'listen';\n            this.execHooks('stage', {chart: this, stage: this.state.stage});\n            const renderTime = performance.now() - this._startTime;\n            this._meta.renderTime = renderTime;\n            this.execHooks('load', {\n                chart: this,\n                meta: this._meta as YagrMeta,\n            });\n        };\n\n        this._uHooks.ready = () => {\n            const initTime = performance.now() - this._startTime;\n            this._meta.initTime = initTime;\n            this.execHooks('inited', {\n                chart: this,\n                meta: {\n                    initTime,\n                },\n            });\n        };\n        this._uHooks.drawClear = (u: uPlot) => {\n            const {ctx} = u;\n            ctx.save();\n            ctx.fillStyle = this.utils.theme.BACKGROUND;\n            ctx.fillRect(\n                DEFAULT_CANVAS_PIXEL_RATIO,\n                DEFAULT_CANVAS_PIXEL_RATIO,\n                u.width * DEFAULT_CANVAS_PIXEL_RATIO - 2 * DEFAULT_CANVAS_PIXEL_RATIO,\n                u.height * DEFAULT_CANVAS_PIXEL_RATIO - 2 * DEFAULT_CANVAS_PIXEL_RATIO,\n            );\n            ctx.restore();\n        };\n        this._uHooks.setSelect = (u: uPlot) => {\n            const {left, width} = u.select;\n            const [_from, _to] = [u.posToVal(left, DEFAULT_X_SCALE), u.posToVal(left + width, DEFAULT_X_SCALE)];\n            const {timeMultiplier = TIME_MULTIPLIER} = this.config.chart || {};\n\n            this.execHooks('onSelect', {\n                from: Math.ceil(_from / timeMultiplier),\n                to: Math.ceil(_to / timeMultiplier),\n                chart: this,\n            });\n            u.setSelect({width: 0, height: 0, top: 0, left: 0}, false);\n        };\n    }\n\n    /**\n     * @internal\n     * @param reOpt If in reOpt cycle (e.g. batch update), then won't reinit hooks.\n     * @description Creates uPlot options from Yagr config, sets up plugins. Non idempotent.\n     * @returns uPlot options\n     */\n    protected createUplotOptions(this: Yagr<T>, reOpt = false) {\n        const {config} = this;\n        const plugins: Plugin[] = [];\n\n        let tooltipInstance = this.plugins?.tooltip;\n\n        /** Setting up TooltipPugin */\n        if (config.tooltip && config.tooltip.show !== false) {\n            if (tooltipInstance) {\n                tooltipInstance.updateOptions(config.tooltip);\n            } else {\n                tooltipInstance = tooltipPlugin(this, config.tooltip);\n            }\n            plugins.push(tooltipInstance.uplot);\n            this.plugins.tooltip = tooltipInstance;\n        }\n\n        if (reOpt) {\n            this.plugins.plotLines && plugins.push(this.plugins.plotLines.uplot);\n        } else {\n            const plotLinesPluginInstance = plotLinesPlugin(this.config.plotLines || {})(this);\n            this.plugins.plotLines = plotLinesPluginInstance;\n            plugins.push(plotLinesPluginInstance.uplot);\n        }\n\n        Object.entries(config.plugins).forEach(([name, plugin]) => {\n            const pluginInstance = plugin(this);\n            plugins.push(pluginInstance.uplot);\n            Object.assign(this.plugins, {[name]: pluginInstance});\n        });\n\n        const chart = config.chart;\n\n        const options: UPlotOptions = {\n            width: this.root.clientWidth,\n            height: this.clientHeight,\n            title: config.title?.text,\n            plugins: plugins,\n            focus: {alpha: DEFAULT_FOCUS_ALPHA},\n            series: [\n                {\n                    id: DEFAULT_X_SERIE_NAME,\n                    $c: config.timeline,\n                    scale: DEFAULT_X_SCALE,\n                    count: config.timeline.length,\n                } as Series,\n            ],\n            ms: chart.timeMultiplier || TIME_MULTIPLIER,\n            hooks: config.hooks || {},\n        };\n\n        this.state.isEmptyDataSet =\n            config.timeline.length === 0 ||\n            config.series.length === 0 ||\n            config.series.every(({data}) => data.length === 0);\n\n        /**\n         * Setting up cursor - points on cursor, drag behavior, crosshairs\n         */\n        options.cursor = options.cursor || {};\n        options.cursor.points = options.cursor.points || {};\n        options.cursor.drag = options.cursor.drag || {\n            dist: chart.select?.minWidth || MIN_SELECTION_WIDTH,\n            x: options.cursor.y ?? true,\n            y: options.cursor.y ?? false,\n            setScale: chart.select?.zoom ?? true,\n        };\n\n        if (this.utils.sync) {\n            options.cursor.sync = options.cursor.sync || {\n                key: this.utils.sync.key,\n            };\n        }\n\n        if (config.cursor) {\n            const cPlugin = CursorPlugin(this, config.cursor);\n            this.plugins.cursor = cPlugin;\n            plugins.push(cPlugin.uplot);\n        }\n\n        const seriesOptions = config.series || [];\n        const resultingSeriesOptions: Series[] = options.series;\n\n        /**\n         * Prepare series options\n         */\n        for (let i = seriesOptions.length - 1; i >= 0; i--) {\n            const serie = configureSeries(this, seriesOptions[i] || {}, i);\n            const uIdx = resultingSeriesOptions.push(serie);\n            this.state.y2uIdx[serie.id || i] = uIdx - 1;\n        }\n\n        /** Setting up markers plugin after default points renderers to be settled */\n        const markersPluginInstance = markersPlugin(this, config);\n        plugins.push(markersPluginInstance);\n\n        options.series = resultingSeriesOptions;\n\n        if (!config.scales || Object.keys(config.scales).length === 0) {\n            config.scales = {\n                x: {},\n                y: {},\n            };\n        }\n\n        /** Setting up scales */\n        options.scales = options.scales || {};\n        options.scales = configureScales(this, options.scales, config);\n\n        /** Setting up minimal axes */\n        options.axes = options.axes || [];\n        const axes = options.axes;\n\n        axes.push(...configureAxes(this, config));\n\n        /** Setting up hooks */\n        options.hooks = config.hooks || {};\n        options.hooks.draw = options.hooks.draw || [];\n        options.hooks.ready = options.hooks.ready || [];\n        options.hooks.drawClear = options.hooks.drawClear || [];\n        options.hooks.setSelect = options.hooks.setSelect || [];\n\n        setIfNotSet(options.hooks.draw, this._uHooks.onDraw);\n        setIfNotSet(options.hooks.ready, this._uHooks.ready);\n        setIfNotSet(options.hooks.drawClear, this._uHooks.drawClear);\n        setIfNotSet(options.hooks.setSelect, this._uHooks.setSelect);\n\n        options.drawOrder = chart.appearance?.drawOrder\n            ? (chart.appearance?.drawOrder.filter(\n                  (key) => key === DrawOrderKey.Series || key === DrawOrderKey.Axes,\n              ) as uDrawOrderKey[])\n            : [DrawOrderKey.Series, DrawOrderKey.Axes];\n\n        /** Disabling uPlot legend. */\n        options.legend = {show: false};\n        options.padding = config.chart.size?.padding || getPaddingByAxes(options);\n\n        /**\n         * Pre-initialization  of legend allows to calculate\n         * legend's height before actual uPlot instance\n         * will be rendered, to avoid blinking height changes\n         */\n        this.plugins.legend?.preInit(this, this.config.legend, options);\n        options.height = this.clientHeight;\n\n        this.options = options;\n\n        return options;\n    }\n}\n", "/* eslint-disable complexity */\n\nimport type {AlignedData} from 'uplot';\nimport type {DataSeries, MinimalValidConfig} from '../types';\nimport type Yagr from '..';\n\nimport {DEFAULT_Y_SCALE} from '../defaults';\nimport {getSumByIdx, preprocess} from '../utils/common';\n\nexport class TransformSeriesMixin<T extends MinimalValidConfig> {\n    /**\n     * @internal\n     * @param this Yagr instance\n     * @description Transforms series data according to config\n     * @returns uPlot series data\n     */\n    protected transformSeries(this: Yagr<T>) {\n        const processingStartTime = performance.now();\n\n        const result = [];\n        const config = this.config;\n        const timeline = config.timeline;\n        let processing = config.processing || false;\n\n        let series: DataSeries[] = this.config.series.map(({data}) => data) as DataSeries[];\n\n        if (processing && processing.interpolation) {\n            series = preprocess(series, timeline, processing);\n            processing = false;\n        }\n\n        const shouldMapNullValues = Boolean(processing && processing.nullValues);\n        const nullValues = (processing && processing.nullValues) || {};\n\n        /**\n         * Stacks are represented as:\n         * {\n         *    [scale]: {\n         *        [],  // stacking group idx 0 (default for all on scale),\n         *        [],  // stacking group idx 1\n         *    ]\n         * }\n         *\n         * All stacked points are accumulating inside of series' scale group\n         */\n        const stacks: Record<string, number[][]> = {};\n\n        for (let sIdx = 0; sIdx < series.length; sIdx++) {\n            let dataLine: (number | null)[] = [];\n            const realSerieIdx = sIdx + 1;\n            const serie = series[sIdx];\n\n            const serieConfigIndex = this.options.series.length - realSerieIdx;\n            const serieOptions = this.options.series[serieConfigIndex];\n            const scale = serieOptions.scale || DEFAULT_Y_SCALE;\n            const scaleConfig = this.config.scales[scale] || {};\n            const isStacking = scaleConfig.stacking;\n            const sGroup = serieOptions.stackGroup || 0;\n\n            let empty = true;\n\n            if (isStacking && !stacks[scale]) {\n                this.options.focus = this.options.focus || {alpha: 1.1};\n                this.options.focus.alpha = 1.1;\n                stacks[scale] = [];\n            }\n\n            if (isStacking && !stacks[scale][sGroup]) {\n                stacks[scale][sGroup] = new Array(timeline.length).fill(0);\n            }\n\n            serieOptions.count = 0;\n\n            for (let idx = 0; idx < serie.length; idx++) {\n                let value = serie[idx];\n\n                if (shouldMapNullValues && nullValues[String(value)]) {\n                    value = null;\n                }\n\n                if (serieOptions.transform) {\n                    serieOptions._transformed = true;\n                    value = serieOptions.transform(value, series, idx);\n                }\n\n                if (scaleConfig.transform) {\n                    serieOptions._transformed = true;\n                    value = scaleConfig.transform(value, series, idx);\n                }\n\n                if (value === null) {\n                    if (serieOptions.type === 'line' || serieOptions.type === 'dots') {\n                        dataLine.push(null);\n                        continue;\n                    } else {\n                        value = isStacking ? 0 : null;\n                    }\n                }\n\n                empty = false;\n\n                if (scaleConfig.normalize) {\n                    const sum = getSumByIdx(this.options.series, idx, scale);\n                    value = sum && ((value ?? 0) / sum) * (scaleConfig.normalizeBase || 100);\n\n                    serieOptions.normalizedData = serieOptions.normalizedData || [];\n                    serieOptions.normalizedData[idx] = value;\n                }\n\n                if (scaleConfig.stacking) {\n                    if (serieOptions.show === false) {\n                        value = 0;\n                    }\n\n                    value = stacks[scale][sGroup][idx] += (value ?? 0);\n                }\n\n                if (scaleConfig.type === 'logarithmic' && value === 0) {\n                    value = 1;\n                }\n\n                serieOptions.sum = (serieOptions.sum || 0) + (value || 0);\n\n                const originalValue = serieOptions.$c[idx];\n                if (typeof originalValue === 'number') {\n                    serieOptions.count += 1;\n                }\n                dataLine.push(value);\n            }\n\n            serieOptions.avg = (serieOptions.sum || 0) / serieOptions.count;\n            serieOptions.empty = empty;\n\n            if (serieOptions.postProcess) {\n                dataLine = serieOptions.postProcess(dataLine, sIdx, this);\n            }\n            result.unshift(dataLine);\n        }\n\n        result.unshift(this.config.timeline);\n\n        this.series = result as AlignedData;\n\n        this.execHooks('processed', {\n            chart: this,\n            meta: {\n                processTime: performance.now() - processingStartTime,\n            },\n        });\n\n        return this.series;\n    }\n}\n", "/* eslint-disable complexity */\n\nimport type {MinimalValidConfig, RawSerieData, Scale, SupportedLocales, YagrConfig, YagrTheme} from '../types';\nimport Yagr from '..';\n\nimport i18n from '../locale';\nimport {DEFAULT_X_SCALE, DEFAULT_Y_SCALE} from '../defaults';\nimport {overrideSeriesInUpdate, configureSeries} from '../utils/series';\nimport {getRedrawOptionsForAxesUpdate, updateAxis} from '../utils/axes';\nimport {Paths, deepIsEqual, get} from '../utils/common';\nimport {Batch} from './batch-updates';\n\ninterface UpdateOptions {\n    incremental?: boolean;\n    splice?: boolean;\n}\n\nfunction setLocaleImpl(yagr: Yagr, batch: Batch, locale: SupportedLocales | Record<string, string>) {\n    yagr.utils.i18n = i18n(locale);\n    batch.redrawLegend = true;\n}\n\nfunction setThemeImpl(yagr: Yagr, themeValue: YagrTheme, batch: Batch) {\n    yagr.utils.theme.setTheme(themeValue);\n    const availableThemes: YagrTheme[] = ['light', 'light-hc', 'dark', 'dark-hc'];\n    const classesToRemove = availableThemes.map((theme) => `yagr_theme_${theme}`);\n    yagr.root.classList.remove(...classesToRemove);\n    yagr.root.classList.add('yagr_theme_' + themeValue);\n    batch.redraw = [false, true];\n}\n\nfunction setAxesImpl(yagr: Yagr, batch: Batch, axes: YagrConfig['axes']) {\n    const {x, ...rest} = axes;\n\n    if (x) {\n        const xAxis = yagr.uplot.axes.find(({scale}) => scale === DEFAULT_X_SCALE);\n\n        if (xAxis) {\n            updateAxis(yagr, xAxis, {scale: DEFAULT_X_SCALE, ...x});\n        }\n    }\n\n    Object.entries(rest).forEach(([scaleName, scaleConfig]) => {\n        const axis = yagr.uplot.axes.find(({scale}) => scale === scaleName);\n\n        if (axis) {\n            updateAxis(yagr, axis, {scale: scaleName, ...scaleConfig});\n        }\n    });\n\n    batch.redraw = getRedrawOptionsForAxesUpdate(axes);\n}\n\nfunction setFocusImpl(yagr: Yagr, lineId: string | null, focus: boolean) {\n    const seriesIdx = lineId === null ? null : yagr.state.y2uIdx[lineId];\n    yagr.plugins.cursor?.focus(seriesIdx, focus);\n    yagr.uplot.setSeries(seriesIdx, {focus});\n}\n\nfunction setVisibleImpl(yagr: Yagr, lineId: string | null, show: boolean, updateLegend: boolean, batch: Batch) {\n    const seriesIdx = lineId === null ? null : yagr.state.y2uIdx[lineId];\n    const seriesCfg = lineId === null ? yagr.config.series : [yagr.config.series.find(({id}) => id === lineId)];\n\n    seriesCfg.forEach((serie) => {\n        if (serie) {\n            serie.show = show;\n        }\n    });\n\n    batch.fns.push(() => {\n        yagr.uplot.setSeries(seriesIdx, {\n            show,\n        });\n    });\n\n    yagr.options.series = yagr.uplot.series;\n\n    let shouldRebuildStacks = false;\n\n    if (seriesIdx) {\n        const series = yagr.uplot.series[seriesIdx];\n        series.show = show;\n        const scaleName = series.scale || DEFAULT_Y_SCALE;\n        const scale = yagr.config.scales[scaleName];\n        shouldRebuildStacks = Boolean(scale && scale.stacking);\n    } else {\n        shouldRebuildStacks = yagr.options.series.reduce((acc, serie) => {\n            const {scale} = serie;\n            serie.show = show;\n            return Boolean((scale && yagr.config.scales[scale]?.stacking) || acc);\n        }, false as boolean);\n    }\n\n    if (shouldRebuildStacks) {\n        // batch.reopt = true;\n        batch.recalc = true;\n        batch.fns.push(() => {\n            yagr.uplot.setData(yagr.series, true);\n            updateLegend && yagr.plugins.legend?.update();\n        });\n    }\n}\n\nfunction setScalesImpl(yagr: Yagr, scales: YagrConfig['scales'], batch: Batch) {\n    let stackingIsChanged = false;\n    let normalizationIsChanged = false;\n\n    Object.entries(scales).forEach(([scaleName, scaleConfig]) => {\n        const scale = yagr.config.scales[scaleName];\n\n        if (scale) {\n            const {stacking} = scale;\n            const {stacking: newStacking} = scaleConfig;\n\n            if (stacking !== newStacking) {\n                stackingIsChanged = true;\n            }\n\n            if (scaleConfig.normalize !== scale.normalize || scaleConfig.normalizeBase !== scale.normalizeBase) {\n                normalizationIsChanged = true;\n            }\n        }\n    });\n\n    const isChangingOnlyMinMax = Object.entries(scales).every(([key, scaleConfig]: [string, Scale]) => {\n        const cfg = yagr.config.scales[key];\n\n        const {min: pMin, max: pMax, ...pRest} = cfg;\n        const {min: nMin, max: nMax, ...nRest} = scaleConfig;\n        const isChangedSomething = deepIsEqual(nRest, pRest) === false;\n\n        return !isChangedSomething && (pMin !== nMin || pMax !== nMax);\n    });\n\n    const isChangingXAxis = Object.keys(scales).includes(DEFAULT_X_SCALE);\n\n    /**\n     * In case if we change only min/max on data-scales, then we can just use uplot.setScale,\n     * otherwise we need to rebuild all series and stacks in order to apply new scales;\n     */\n    if (isChangingOnlyMinMax && !isChangingXAxis) {\n        return Object.entries(scales).forEach(([scaleName, scaleConfig]) => {\n            batch.fns.push(() => {\n                yagr.uplot.setScale(scaleName, {\n                    min: scaleConfig.min!,\n                    max: scaleConfig.max!,\n                });\n            });\n        });\n    }\n\n    if (stackingIsChanged || normalizationIsChanged) {\n        batch.reinit = true;\n    }\n\n    yagr.config.scales = scales;\n    batch.reinit = true;\n}\n\nfunction isChanged(oldConfig: YagrConfig, newConfig: Partial<YagrConfig>) {\n    return function isChangedPath(\n        path: Paths<YagrConfig>,\n        predicate?: (oldValue: unknown, newValue: unknown) => boolean,\n    ) {\n        const oldValue = get(oldConfig, path);\n        const newValue = get(newConfig, path);\n\n        return predicate ? !predicate(oldValue, newValue) : oldValue !== newValue;\n    };\n}\n\nfunction areSeriesChanged(a: YagrConfig['series'], b?: YagrConfig['series']) {\n    if (a.length !== b?.length) {\n        return true;\n    }\n\n    const mapA = new Map<string, YagrConfig['series'][0]>();\n    const mapB = new Map<string, YagrConfig['series'][0]>();\n\n    a.forEach((serie) => {\n        mapA.set(serie.id!, serie);\n    });\n\n    b.forEach((serie) => {\n        mapB.set(serie.id!, serie);\n    });\n\n    if (b.some(({id}) => !mapA.has(id!)) || a.some(({id}) => !mapB.has(id!))) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction setConfigImpl(yagr: Yagr, batch: Batch, newConfig: Partial<YagrConfig>, fullUpdate = false) {\n    if (fullUpdate) {\n        yagr.config = {...yagr.config, ...newConfig};\n        batch.reinit = true;\n        return;\n    }\n\n    const isChangedKey = isChanged(yagr.config, newConfig);\n\n    if (newConfig.title && isChangedKey('title')) {\n        yagr.setTitle(newConfig.title);\n    }\n\n    if (newConfig.chart?.appearance?.theme && isChangedKey('chart.appearance.theme')) {\n        yagr.setTheme(newConfig.chart?.appearance?.theme);\n    }\n\n    if (newConfig.chart?.appearance?.locale && isChangedKey('chart.appearance.locale')) {\n        yagr.setLocale(newConfig.chart?.appearance?.locale);\n    }\n\n    if (newConfig.axes && isChangedKey('axes', deepIsEqual)) {\n        yagr.setAxes(newConfig.axes);\n    }\n\n    if (newConfig.scales && isChangedKey('scales', deepIsEqual)) {\n        yagr.setScales(newConfig.scales);\n    }\n\n    const isChangedSeries = Boolean(newConfig.series) && areSeriesChanged(yagr.config.series, newConfig.series);\n\n    if (isChangedSeries) {\n        batch.redrawLegend = true;\n    }\n\n    if (newConfig.series || newConfig.timeline) {\n        yagr.setSeries(newConfig.timeline ?? yagr.config.timeline, newConfig.series ?? yagr.config.series, {\n            incremental: false,\n        });\n    }\n\n    if (newConfig.tooltip && isChangedKey('tooltip')) {\n        yagr.plugins.tooltip?.updateOptions(newConfig.tooltip);\n    }\n\n    if (newConfig.legend && isChangedKey('legend')) {\n        batch.reinit = true;\n    }\n\n    yagr.plugins.tooltip?.reset();\n\n    batch.reopt = true;\n    yagr.config = {...yagr.config, ...newConfig};\n}\n\nfunction setSeriesImpl(\n    this: Yagr,\n    batch: Batch,\n    timelineOrSeriesOrId: Partial<RawSerieData>[] | number[] | number | string,\n    maybeSeries?: Partial<RawSerieData>[] | Partial<RawSerieData>,\n    options: UpdateOptions = {\n        incremental: true,\n        splice: false,\n    },\n) {\n    let timeline: number[] = [],\n        series: RawSerieData[] = [],\n        updateId: null | string | number = null,\n        useIncremental = false,\n        shouldRecalcData = false,\n        useFullyRedraw;\n\n    if (['number', 'string'].includes(typeof timelineOrSeriesOrId)) {\n        useIncremental = false;\n        useFullyRedraw = false;\n        series = [maybeSeries] as RawSerieData[];\n        updateId = timelineOrSeriesOrId as number | string;\n    } else if (typeof (timelineOrSeriesOrId as Array<number | RawSerieData>)[0] === 'number') {\n        timeline = timelineOrSeriesOrId as number[];\n        series = maybeSeries as RawSerieData[];\n        useIncremental = Boolean(options.incremental);\n        useFullyRedraw = !options.incremental;\n    } else {\n        series = timelineOrSeriesOrId as RawSerieData[];\n        useFullyRedraw = true;\n    }\n\n    if (this.isEmpty && series.some(({data}) => data?.length)) {\n        batch.reinit = true;\n        return;\n    }\n\n    if (useFullyRedraw === false) {\n        let shouldUpdateCursror = false;\n\n        useIncremental && this.config.timeline.push(...timeline);\n        series.forEach((serie) => {\n            let matched =\n                typeof updateId === 'number'\n                    ? this.config.series[0]\n                    : this.config.series.find(({id}) => id === serie.id || id === updateId);\n\n            let id: number | string | undefined = matched?.id;\n\n            if (typeof updateId === 'number' && this.state.y2uIdx[updateId]) {\n                matched = this.config.series[updateId];\n                id = updateId;\n            }\n\n            if (matched && id) {\n                const {data, ...rest} = serie;\n                const seriesIdx = this.state.y2uIdx[id];\n\n                /** @TODO fixme (see Annotations.1) */\n                if (matched.type === 'dots' || serie.type === 'dots' || this.config.chart.series?.type === 'dots') {\n                    batch.reinit = true;\n                }\n\n                if (useIncremental) {\n                    matched.data = data ? matched.data.concat(data) : matched.data;\n                } else if (data?.length) {\n                    matched.data = data;\n                    /**\n                     * We're reprocessing data on every series' data change,\n                     * cause we don't know is it required to process current line or not\n                     * Possible non clear pattern:\n                     *  - series may contain string values to process out with `interpolate` option\n                     *  - series may be in stack group\n                     * @TODO fixme when you got a good idea\n                     */\n                    shouldRecalcData = true;\n                }\n\n                const newSeries = configureSeries(this, Object.assign(matched, rest), seriesIdx);\n                const opts = this.options.series[seriesIdx];\n                const uOpts = this.uplot.series[seriesIdx];\n\n                if (uOpts.show !== newSeries.show) {\n                    batch.fns.push(() => {\n                        this.uplot.setSeries(seriesIdx, {show: newSeries.show});\n                    });\n                }\n\n                if (uOpts._focus === null ? true : uOpts._focus !== newSeries.focus) {\n                    batch.fns.push(() => {\n                        this.uplot.setSeries(seriesIdx, {focus: newSeries.focus});\n                    });\n                }\n\n                if (uOpts.color !== newSeries.color) {\n                    shouldUpdateCursror = true;\n                }\n\n                if (newSeries.scale && this.config.scales[newSeries.scale]?.stacking) {\n                    shouldRecalcData = true;\n                }\n\n                overrideSeriesInUpdate(opts, newSeries);\n                overrideSeriesInUpdate(uOpts, newSeries);\n            } else {\n                batch.fns.push(() => {\n                    const newSeries = configureSeries(this, serie, this.config.series.length);\n                    this.state.y2uIdx[newSeries.id] = this.uplot.series.length;\n                    this.uplot.addSeries(newSeries, this.config.series.length);\n                });\n                this.config.series.push(serie);\n            }\n        });\n\n        if (shouldUpdateCursror) {\n            batch.fns.push(() => {\n                this.plugins.cursor?.updatePoints();\n            });\n        }\n\n        if (options.splice) {\n            const sliceLength = series[0].data.length;\n            this.config.series.forEach((s) => {\n                s.data.splice(0, sliceLength);\n            });\n            this.config.timeline.splice(0, timeline.length);\n        }\n    } else {\n        this.config.timeline = timeline;\n        this.config.series = series;\n        batch.reinit = true;\n    }\n\n    if (!batch.reinit) {\n        this._batch.fns.push(() => this.plugins?.tooltip?.reset());\n\n        if (shouldRecalcData || timeline.length) {\n            batch.recalc = true;\n            batch.fns.push(() => {\n                this.uplot.setData(this.series);\n            });\n        }\n    }\n}\n\nexport class DynamicUpdatesMixin<T extends MinimalValidConfig> {\n    /**\n     * @public\n     * @param locale string | Record<string, string>\n     * @description Set's locale of chart and redraws all locale-dependent elements.\n     */\n    setLocale(this: Yagr<T>, locale: SupportedLocales | Record<string, string>) {\n        this.batch((batch) => setLocaleImpl(this, batch, locale));\n    }\n\n    /**\n     * @public\n     * @param title YagrTitleConfig\n     * @description Set's title of chart and redraws all title-dependent elements.\n     */\n    setTitle(this: Yagr<T>, title: YagrConfig['title']) {\n        this.batch((batch) => {\n            this.config.title = title;\n            this.initTitle();\n            batch.redraw = [true, true];\n        });\n    }\n\n    /**\n     * @public\n     * @param themeValue YagrTheme\n     * @description Set's theme of chart and redraws all theme-dependent elements.\n     */\n    setTheme(this: Yagr<T>, themeValue: YagrTheme) {\n        this.batch((batch) => setThemeImpl(this, themeValue, batch));\n    }\n\n    /**\n     * @public\n     * @param axes axes config\n     * @description Sets new axes config and redraws all axes.\n     */\n    setAxes(this: Yagr<T>, axes: YagrConfig['axes']) {\n        this.batch((batch) => setAxesImpl(this, batch, axes));\n    }\n\n    /**\n     * @public\n     * @param seriesId string\n     * @param series Partial<RawSerieData>\n     * @description Sets new series by series id and redraws series.\n     */\n    setSeries(this: Yagr<T>, seriesId: string, series: Partial<RawSerieData>): void;\n    /**\n     * @public\n     * @param seriesIdx number\n     * @param series Partial<RawSerieData>\n     * @description Sets new series by series index and redraws series.\n     */\n    setSeries(this: Yagr<T>, seriesIdx: number, series: Partial<RawSerieData>): void;\n    /**\n     * @public\n     * @param series Partial<RawSerieData>\n     * @description Sets new series dataset (matching to current timeline) and redraws.\n     */\n    setSeries(this: Yagr<T>, series: Partial<RawSerieData>[]): void;\n    /**\n     * @public\n     * @param timeline number[]\n     * @param series Partial<RawSerieData>\n     * @param options UpdateOptions\n     * @description Sets new series dataset with different timeline and redraws.\n     */\n    setSeries(this: Yagr<T>, timeline: number[], series: Partial<RawSerieData>[], options: UpdateOptions): void;\n    setSeries(\n        this: Yagr<T>,\n        timelineOrSeriesOrId: Partial<RawSerieData>[] | number[] | number | string,\n        maybeSeries?: Partial<RawSerieData>[] | Partial<RawSerieData>,\n        options: UpdateOptions = {\n            incremental: true,\n            splice: false,\n        },\n    ) {\n        this.batch((batch) => setSeriesImpl.call(this, batch, timelineOrSeriesOrId, maybeSeries, options));\n    }\n\n    /**\n     * @public\n     * @param lineId string | null\n     * @param focus boolean\n     * @description Sets focus on line with given id. If id is null, removes focus from all lines.\n     * @returns void\n     */\n    setFocus(this: Yagr<T>, lineId: string | null, focus: boolean) {\n        this.batch(() => setFocusImpl(this, lineId, focus));\n    }\n\n    /**\n     * @public\n     * @param lineId string | null\n     * @param show boolean\n     * @description Sets visibility of line with given id. If id is null, sets visibility of all lines.\n     */\n    setVisible(this: Yagr<T>, lineId: string | null, show: boolean, updateLegend = true) {\n        this.batch((batch) => setVisibleImpl(this, lineId, show, updateLegend, batch));\n    }\n\n    /**\n     * @public\n     * @param scales Record<string, Partial<ScaleConfi>>\n     * @description Sets new scales config and redraws.\n     */\n    setScales(this: Yagr<T>, scales: Record<string, Partial<YagrConfig['scales'][string]>>) {\n        this.batch((batch) => setScalesImpl(this, scales, batch));\n    }\n\n    /**\n     * @public\n     * @experimental\n     * @param newConfig Partial<YagrConfig>\n     * @descriptino Sets new config and redraws.\n     */\n    setConfig(this: Yagr<T>, newConfig: Partial<YagrConfig>, fullUpdate = false) {\n        this.batch((batch) => setConfigImpl(this, batch, newConfig, fullUpdate));\n    }\n}\n\n/**\n * Annotations:\n * 1. If we're operating with dots type then uPlot will be reinitialized\n *    cause it's not possible to re-render dot's markers without reinit\n *\n */\n", "import Yagr from '..';\n\ntype YagrConstructor = new (...args: any[]) => Yagr;\nexport type YMixin<T extends unknown = unknown> = new () => T;\n\nexport function applyMixins(derivedCtor: YagrConstructor, constructors: YMixin[]) {\n    const inits: (() => void)[] = [];\n\n    constructors.forEach((baseCtor) => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n            Object.defineProperty(\n                derivedCtor.prototype,\n                name,\n                Object.getOwnPropertyDescriptor(baseCtor.prototype, name) || Object.create(null),\n            );\n        });\n\n        if (baseCtor.prototype.initMixin) {\n            inits.push(baseCtor.prototype.initMixin);\n        }\n    });\n\n    derivedCtor.prototype.initMixins = function () {\n        inits.forEach((init) => init.call(this));\n    };\n}\n", "import type {MinimalValidConfig} from '../types';\nimport type Yagr from '..';\nimport UPlot from 'uplot';\nimport LegendPlugin from '../plugins/legend/legend';\n\nexport interface Batch {\n    active: boolean;\n    fns: ((s: Batch) => void)[];\n    /** If true then uPlot options will be re-configured  */\n    reopt?: boolean;\n    /** If true then data will be recalculated (use for stacks/normalization/other calculations) */\n    recalc?: boolean;\n    /** False or redraw uPlot redraw arguments */\n    redraw?: false | [series: boolean, axes: boolean];\n    /** If batch will end with full re-instantiation of uPlot */\n    reinit?: boolean;\n    /** If true, legend will be fully redrawn instead of re-initialization  */\n    redrawLegend?: boolean;\n}\n\nexport class BatchMixin<T extends MinimalValidConfig> {\n    protected _batch!: Batch;\n\n    initMixin() {\n        this._batch = {\n            active: false,\n            fns: [],\n        };\n    }\n\n    /**\n     * @public\n     * @param fn batch funcion.\n     * @experimental\n     * @descriptoin Batch wrapper. Batch function accepts batch state, it can be modified to change batch execution behaviour.\n     * @example\n     * ```typescript\n     * yagr.batch((s) => {\n     *    s.reopt = true; // reinit uPlot options\n     *    s.recalc = true; // recalculate series\n     *    s.redraw = [true, true]; // redraw chart\n     *    s.reinit = true; // reinit uPlot chart\n     * });\n     * ```\n     */\n    batch(this: Yagr<T>, fn: (s: Batch) => void) {\n        if (this._batch.active) {\n            return fn(this._batch);\n        }\n\n        this._batch.active = true;\n        fn(this._batch);\n\n        if (this._batch.reinit) {\n            return this.fullUpdate();\n        }\n\n        if (this._batch.redrawLegend) {\n            this.plugins.legend?.redraw();\n        }\n\n        if (this._batch.reopt) {\n            this.createUplotOptions(true);\n        }\n\n        if (this._batch.recalc) {\n            this.inStage('processing', () => {\n                this.transformSeries();\n            }).inStage('listen');\n        }\n\n        this._batch.fns.length && this.uplot.batch(() => this._batch.fns.forEach((fn) => fn(this._batch)));\n\n        if (this._batch.redraw && this.uplot) {\n            this.redraw(...this._batch.redraw);\n        }\n\n        this._batch = {active: false, fns: []};\n    }\n\n    /**\n     *\n     * @internal\n     * @description Full update of chart. Used when config is changed totally.\n     */\n    protected fullUpdate(this: Yagr<T>) {\n        let left: number | undefined;\n        let top: number | undefined;\n\n        this.inStage('dispose', () => {\n            if (this.uplot) {\n                const cursor = this.uplot.cursor;\n                left = cursor.left;\n                top = cursor.top;\n                // uplot may be undefined if chart is not rendered yet, but got update\n                this.uplot.destroy();\n            }\n            this.plugins.legend?.destroy();\n        })\n            .inStage('config', () => {\n                this.plugins.legend = new LegendPlugin();\n                this._batch = {active: false, fns: []};\n                this.createUplotOptions(true);\n                this.options = this.config.editUplotOptions ? this.config.editUplotOptions(this.options) : this.options;\n            })\n            .inStage('processing', () => {\n                this.transformSeries();\n            })\n            .inStage('uplot', () => {\n                this.uplot = new UPlot(this.options, this.series, this.initRender);\n                if (left && top && left > 0 && top > 0) {\n                    this.uplot.setCursor({left, top});\n                }\n\n                // by default uPlot subsribes self to cursor, if we don't need it, we should unsubscribe manually\n                if (!this.state.subscribed) {\n                    this.unsubscribe();\n                }\n            })\n            .inStage('listen');\n    }\n}\n", "import UPlot, {Options as UPlotOptions, AlignedData, Series, SyncPubSub} from 'uplot';\n\nimport LegendPlugin from './plugins/legend/legend';\nimport {TooltipPlugin} from './plugins/tooltip/tooltip';\nimport cursorPlugin from './plugins/cursor/cursor';\nimport {PlotLinesPlugin} from './plugins/plotLines/plotLines';\n\nimport {YagrConfig, MinimalValidConfig, InternalYargHooks} from './types';\n\nimport {debounce, genId, px} from './utils/common';\nimport ColorParser from './utils/colors';\n\nimport ThemedDefaults, {DEFAULT_SYNC_KEY, DEFAULT_TITLE_FONT_SIZE} from './defaults';\nimport i18n from './locale';\n\nimport {CreateUplotOptionsMixin} from './mixins/create-options';\nimport {TransformSeriesMixin} from './mixins/transform-series';\nimport {DynamicUpdatesMixin} from './mixins/dynamic-updates';\n\nimport {applyMixins} from './utils/mixins';\nimport {BatchMixin} from './mixins/batch-updates';\n\nexport interface YagrEvent {\n    chart: Yagr;\n    meta: YagrMeta;\n}\n\nexport type YagrMeta = {\n    renderTime: number;\n    processTime: number;\n    initTime: number;\n};\n\ntype CachedProps = {\n    width: number;\n    height: number;\n};\n\nexport interface YagrState {\n    isEmptyDataSet: boolean;\n    isMouseOver: boolean;\n    stage: 'config' | 'processing' | 'uplot' | 'render' | 'listen' | 'dispose';\n    inBatch?: boolean;\n    y2uIdx: Record<string, number>;\n    subscribed: boolean;\n}\n\n/*\n * Main core-module of Yagr.\n * Implements data processing and autoconfigurable wrapper\n * for uPlot chart.\n * Entrypoint of every Yagr chart.\n */\nclass Yagr<TConfig extends MinimalValidConfig = MinimalValidConfig> {\n    id!: string;\n    options!: UPlotOptions;\n    uplot!: UPlot;\n    root!: HTMLElement;\n    series!: AlignedData;\n    config!: YagrConfig;\n    resizeOb?: ResizeObserver;\n    canvas!: HTMLCanvasElement;\n    plugins: {\n        tooltip?: ReturnType<TooltipPlugin>;\n        plotLines?: ReturnType<PlotLinesPlugin>;\n        cursor?: ReturnType<typeof cursorPlugin>;\n        legend?: LegendPlugin;\n    } & Partial<\n        TConfig['plugins'] extends YagrConfig['plugins']\n            ? {[key in keyof TConfig['plugins']]: ReturnType<TConfig['plugins'][key]>}\n            : {}\n    > = {};\n    state!: YagrState;\n    utils!: {\n        colors: ColorParser;\n        sync?: SyncPubSub;\n        theme: ThemedDefaults;\n        i18n: ReturnType<typeof i18n>;\n    };\n\n    get isEmpty() {\n        return this.state.isEmptyDataSet;\n    }\n\n    protected _startTime!: number;\n    protected _meta: Partial<YagrMeta> = {};\n\n    /** Create uPlot options methods */\n    protected createUplotOptions!: CreateUplotOptionsMixin<TConfig>['createUplotOptions'];\n    protected transformSeries!: TransformSeriesMixin<TConfig>['transformSeries'];\n    protected _uHooks: Record<string, (u: uPlot) => void> = {};\n\n    /** Dynamic update methods */\n    setTheme!: DynamicUpdatesMixin<TConfig>['setTheme'];\n    setLocale!: DynamicUpdatesMixin<TConfig>['setLocale'];\n    setAxes!: DynamicUpdatesMixin<TConfig>['setAxes'];\n    setSeries!: DynamicUpdatesMixin<TConfig>['setSeries'];\n    setVisible!: DynamicUpdatesMixin<TConfig>['setVisible'];\n    setFocus!: DynamicUpdatesMixin<TConfig>['setFocus'];\n    setScales!: DynamicUpdatesMixin<TConfig>['setScales'];\n    setTitle!: DynamicUpdatesMixin<TConfig>['setTitle'];\n    setConfig!: DynamicUpdatesMixin<TConfig>['setConfig'];\n\n    /** Batch update methods */\n    batch!: BatchMixin<TConfig>['batch'];\n    protected fullUpdate!: BatchMixin<TConfig>['fullUpdate'];\n    protected _batch!: BatchMixin<TConfig>['_batch'];\n\n    protected _cache!: CachedProps;\n\n    /** Mixin methods */\n    private initMixins!: () => void;\n\n    constructor(root: HTMLElement, pConfig: TConfig) {\n        this.initMixins();\n\n        this._startTime = performance.now();\n        this.state = {\n            isEmptyDataSet: false,\n            isMouseOver: false,\n            stage: 'config',\n            y2uIdx: {},\n            subscribed: false,\n        };\n\n        const config: YagrConfig = Object.assign(\n            {\n                title: {},\n                data: [],\n                axes: {},\n                series: [],\n                scales: {},\n                hooks: {},\n                settings: {},\n                chart: {},\n                cursor: {},\n                plugins: {},\n                legend: {\n                    show: false,\n                },\n                tooltip: {\n                    show: true,\n                },\n                grid: null,\n                markers: {},\n            },\n            pConfig,\n        );\n\n        this.config = config;\n\n        this.inStage('config', () => {\n            this.id = root.id || genId();\n            this.root = root;\n            this.root.classList.add('yagr');\n\n            if (!this.root.id) {\n                this.root.id = this.id;\n            }\n\n            const colorParser = new ColorParser();\n            const sync = this.config.cursor.sync;\n\n            const chart = this.config.chart;\n\n            chart.series ||= {type: 'line'};\n            chart.size ||= {adaptive: true};\n            chart.appearance ||= {locale: 'en'};\n            chart.select ||= {};\n\n            this.utils = {\n                colors: colorParser,\n                i18n: i18n(config.chart.appearance?.locale || 'en'),\n                theme: new ThemedDefaults(colorParser),\n            };\n\n            colorParser.setContext(root);\n\n            if (sync) {\n                this.utils.sync = UPlot.sync(typeof sync === 'string' ? sync : DEFAULT_SYNC_KEY);\n            }\n\n            if (!chart.size.adaptive && chart.size.width && chart.size.height) {\n                root.style.width = px(chart.size.width);\n                root.style.height = px(chart.size.height);\n            }\n\n            this.plugins.legend = new LegendPlugin();\n            this.setTheme(chart.appearance.theme || 'light');\n            this.createUplotOptions();\n            this._cache = {\n                height: this.options.height,\n                width: this.options.width,\n            };\n            if (config.editUplotOptions) {\n                this.options = config.editUplotOptions(this.options);\n            }\n        })\n            .inStage('processing', () => {\n                this.transformSeries();\n            })\n            .inStage('uplot', () => {\n                this.uplot = new UPlot(this.options, this.series, this.initRender);\n                this.canvas = root.querySelector('canvas') as HTMLCanvasElement;\n\n                this.init();\n\n                const processTime = performance.now() - this._startTime;\n                this._meta.processTime = processTime;\n            })\n            .inStage('render');\n    }\n\n    /**\n     * Redraws Yagr instance by given options.\n     */\n    redraw(series = true, axes = true) {\n        this.uplot.redraw(series, axes);\n    }\n\n    /**\n     *  Get uPlot's Series from series id\n     */\n    getSeriesById(id: string): Series {\n        return this.uplot.series[this.state.y2uIdx[id]];\n    }\n\n    dispose() {\n        this.resizeOb && this.resizeOb.unobserve(this.root);\n        this.unsubscribe();\n        this.plugins?.tooltip?.dispose();\n        this.plugins?.legend?.destroy();\n        this.uplot.destroy();\n        this._uHooks = {};\n        this.execHooks('dispose', {chart: this});\n    }\n\n    toDataUrl() {\n        return this.canvas.toDataURL('img/png');\n    }\n\n    subscribe() {\n        if (this.state.subscribed) {\n            return;\n        }\n\n        this.utils.sync?.sub(this.uplot);\n        this.state.subscribed = true;\n    }\n\n    unsubscribe() {\n        this.utils.sync?.unsub(this.uplot);\n        this.state.subscribed = false;\n    }\n\n    protected init = () => {\n        if (this.config.chart.size?.adaptive && !this.resizeOb) {\n            this.resizeOb = new ResizeObserver(debounce(this.onResize, this.config.chart.size.resizeDebounceMs || 100));\n            this.resizeOb.observe(this.root);\n        }\n\n        if (!this.config.hooks.dispose) {\n            this.config.hooks.dispose = [];\n        }\n\n        /** Unsubscribe in init required to avoid chars been synced without action from developer */\n        this.unsubscribe();\n        this.config.hooks.dispose.push(this.trackMouse());\n    };\n\n    protected execHooks = <T extends keyof InternalYargHooks>(\n        hookName: T,\n        ...args: Parameters<Required<InternalYargHooks>[T][0]>\n    ) => {\n        const hooks = this.config.hooks[hookName];\n        if (Array.isArray(hooks)) {\n            for (const hook of hooks) {\n                if (!hook) {\n                    continue;\n                }\n\n                typeof hook === 'function' && hook(...args);\n            }\n        }\n    };\n\n    protected inStage(stage: YagrState['stage'], fn?: () => void) {\n        this.state.stage === stage;\n        this.execHooks('stage', {chart: this, stage});\n        try {\n            fn && fn();\n        } catch (error) {\n            console.error(error);\n            this.onError(error as Error);\n        }\n        return this;\n    }\n\n    protected initRender = (u: uPlot, done: Function) => {\n        /**\n         * Reimplementing appending u.root to root\n         * and ensure that uPlot instance will be placed\n         * correctly relative to legend\n         */\n        const position = this.config.legend?.position;\n        if (this.root.firstChild) {\n            !position || position === 'bottom'\n                ? this.root.insertBefore(u.root, this.root.firstChild)\n                : this.root.appendChild(u.root);\n        } else {\n            !position || position === 'bottom'\n                ? this.root.appendChild(u.root)\n                : this.root.insertBefore(u.root, this.root.firstChild);\n        }\n\n        if (this.config.legend?.show) {\n            this.plugins.legend?.init(u);\n            this.reflow(false);\n        }\n\n        this.initTitle();\n\n        done();\n    };\n\n    protected initTitle() {\n        /** Setup font size for title if required */\n        if (this.config.title && this.config.title.fontSize) {\n            const size = this.config.title.fontSize;\n            const t = this.root.querySelector('.u-title') as HTMLElement;\n            t.setAttribute('style', `font-size:${size}px;line-height:${size}px;`);\n            t.innerHTML = this.config.title.text;\n        }\n    }\n\n    private onError(error: Error) {\n        this.execHooks('error', {\n            stage: this.state.stage,\n            error,\n            chart: this,\n        });\n        return error;\n    }\n\n    private trackMouse() {\n        const mouseOver = () => {\n            this.state.isMouseOver = true;\n        };\n        const mouseLeave = () => {\n            this.state.isMouseOver = false;\n        };\n        this.root.addEventListener('mouseover', mouseOver);\n        this.root.addEventListener('mouseleave', mouseLeave);\n\n        return () => {\n            this.root.removeEventListener('mouseover', mouseOver);\n            this.root.removeEventListener('mouseleave', mouseLeave);\n        };\n    }\n\n    /*\n     * Resize handler. Should cache height and width to avoid unneccesary resize handling,\n     * when actial width and height of contentRect doesn't changed\n     */\n    private onResize = (args: ResizeObserverEntry[]) => {\n        const [resize] = args;\n\n        if (this._cache.height === resize.contentRect.height && this._cache.width === resize.contentRect.width) {\n            return;\n        }\n\n        this.plugins.tooltip?.reset();\n\n        this.reflow();\n        this.execHooks('resize', {entries: args, chart: this});\n    };\n\n    get clientHeight() {\n        const MARGIN = 8;\n        const offset = this.config.title.text ? (this.config.title.fontSize || DEFAULT_TITLE_FONT_SIZE) + MARGIN : 0;\n        return this.root.clientHeight - offset - (this.plugins.legend?.state.totalSpace || 0);\n    }\n\n    reflow(redraw = true) {\n        const width = this.root.clientWidth;\n        const height = this.clientHeight;\n\n        this._cache.width = width;\n        this.options.width = width;\n        this._cache.height = height;\n        this.options.height = height;\n        redraw &&\n            this.uplot.setSize({\n                width: this.options.width,\n                height: this.options.height,\n            });\n        redraw && this.uplot.redraw();\n    }\n}\n\napplyMixins(Yagr, [CreateUplotOptionsMixin, TransformSeriesMixin, DynamicUpdatesMixin, BatchMixin]);\n\nexport default Yagr;\n"],
  "mappings": "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",
  "names": ["src_exports", "__export", "src_default", "defaults", "module", "__toCommonJS", "defaults_exports", "AXIS_LABEL_FONT", "AXIS_VALUES_FONT", "BARS_DRAW_FACTOR", "BARS_DRAW_MAX", "CURSOR_STYLE", "DARK_DEFAULT_LINE_COLOR", "DAY", "DECADE", "DEFAULT_AXIS_FONT_SIZE", "DEFAULT_CANVAS_PIXEL_RATIO", "DEFAULT_FOCUS_ALPHA", "DEFAULT_LOGARITHMIC_MIN_SCALE_VALUE", "DEFAULT_MAX_TICKS", "DEFAULT_POINT_SIZE", "DEFAULT_SCALE_MIN_RANGE", "DEFAULT_SYNC_KEY", "DEFAULT_TITLE_FONT_SIZE", "DEFAULT_X_SCALE", "DEFAULT_X_SERIE_NAME", "DEFAULT_Y_AXIS_LABEL_PADDING", "DEFAULT_Y_AXIS_OFFSET", "DEFAULT_Y_AXIS_PADDING", "DEFAULT_Y_AXIS_SIZE", "DEFAULT_Y_SCALE", "HOUR", "LIGHT_DEFAULT_LINE_COLOR", "MARKER_DIAMETER", "MINUTE", "MIN_SELECTION_WIDTH", "PADDING_BOTH", "PADDING_LEFT", "PADDING_RIGHT", "SECOND", "SERIE_AREA_BORDER_COLOR", "SERIE_AREA_BORDER_WIDTH", "SERIE_COLOR", "SERIE_LINE_WIDTH", "TIME_MULTIPLIER", "TOOLTIP_DEFAULT_MAX_LINES", "TOOLTIP_X_OFFSET", "TOOLTIP_Y_OFFSET", "TYPES_ORDER", "X_AXIS_INCRS", "X_AXIS_SIZE", "X_AXIS_SPACE", "X_AXIS_TICK_GAP", "YEAR", "Y_AXIS_LABEL_SIZE", "Y_AXIS_SIZE", "Y_AXIS_TICK_GAP", "ThemedDefaults", "self", "values", "axisIdx", "longesValue", "l", "c", "ctx", "axis", "textSize", "labelSize", "size", "LIGHTEN_COLOR_SHIFT", "DARKEN_COLOR_SHIFT", "colors", "theme", "DEFAULT_SHADE_COLOR", "ColorParser", "rgbaColor", "m", "color", "isVar", "res", "pure", "prop", "pColor", "context", "fallbackRgba", "r", "g", "b", "a", "value", "direction", "tOffset", "transition", "_r", "_g", "_b", "getFocusedColor", "y", "seriesIdx", "shift", "s", "mainColor", "getSerieFocusColors", "field", "u", "idx", "findInRange", "section", "stickToRanges", "positive", "max", "maxIdx", "min", "minIdx", "diffs", "result", "row", "rowIdx", "diff", "currentMin", "nextMin", "getSumByIdx", "seriesOptions", "scale", "sum", "i", "opts", "seriesValues", "findSticky", "nearestIndex", "nearestValue", "v", "getUnitSuffix", "toFixed", "num", "fixed", "int", "frac", "findDataIdx", "data", "series", "defaultSnapTo", "skipValue", "corL", "corR", "interpolateImpl", "timeline", "y1", "y2", "x1", "x2", "xIdx", "iGroup", "type", "x", "lD", "rD", "genId", "preprocess", "settings", "nullValues", "interpolation", "sIdx", "line", "resultLine", "val", "iIdx", "debounce", "func", "timeout", "timer", "args", "px", "html", "tag", "attrs", "content", "el", "key", "attr", "get", "obj", "acc", "deepIsEqual", "isNil", "aObject", "bObject", "aKeys", "bKeys", "asFn", "t", "inBetween", "start", "end", "MAX_CURSORS", "paintCursorPoint", "pt", "span", "colorRgba", "cursorPoint", "seriesIndex", "serie", "getPointsByIdx", "over", "CursorPlugin", "yagr", "processing", "pInterpolation", "iValue", "snapToNulls", "snapToInterpolated", "mem", "snapOnValues", "hoveredIdx", "seriesData", "pinState", "pointsHolder", "elem", "newElem", "serieIdx", "focus", "item", "_", "uplotOptions", "emptyLines", "totalLines", "maxCursors", "seriesValue", "cX", "cY", "preventMouseEvents", "ALL_SERIES_IDX", "PAGINATION_BUTTON_HEIGHT", "TOTAL_LEGEND_VERTICAL_PADDING_BOTTOM", "TOTAL_LEGEND_VERTICAL_PADDING_TOP", "DEFAULT_FONT_SIZE", "DEFAULT_LEGEND_PLACE_RATIO", "hasOneVisibleLine", "show", "id", "getPrependingTitle", "i18n", "getPrependingTitleId", "LegendPlugin", "options", "serieNode", "serieId", "serieVisible", "body", "rootEl", "pseudo", "state", "unsubsribe", "onSerieClick", "seriesToToggle", "nextToggleState", "nextState", "node", "allSeriesItem", "title", "changeVisibility", "visibility", "toggleSerie", "selectSerie", "otherSeries", "otherVisibility", "selectRange", "range", "e", "onSerieMouseEnter", "targetSerie", "onSerieMouseLeave", "onClick", "onFocus", "destroy", "fn", "reRender", "legendEl", "pagination", "nextPage", "prevPage", "upClassName", "downClassName", "serieNameElement", "titleId", "serieContent", "sId", "additionalCn", "icon", "name", "visible", "chartHeight", "requiredHeight", "rowHeight", "maxPossiblePlace", "rowsPerPage", "itemsRowsPerPage", "itemsPageSize", "paginatedPageSize", "paginated", "requiredSpace", "pages", "additionalSpace", "FEAT_TIME", "pre", "UPLOT", "ORI_HZ", "ORI_VT", "TITLE", "WRAP", "UNDER", "OVER", "AXIS", "OFF", "SELECT", "CURSOR_X", "CURSOR_Y", "CURSOR_PT", "LEGEND", "LEGEND_LIVE", "LEGEND_INLINE", "LEGEND_SERIES", "LEGEND_MARKER", "LEGEND_LABEL", "LEGEND_VALUE", "WIDTH", "HEIGHT", "TOP", "BOTTOM", "LEFT", "RIGHT", "hexBlack", "transparent", "mousemove", "mousedown", "mouseup", "mouseenter", "mouseleave", "dblclick", "resize", "scroll", "change", "dppxchange", "LEGEND_DISP", "domEnv", "doc", "win", "nav", "pxRatio", "query", "setPxRatio", "_pxRatio", "off", "on", "addClass", "cl", "remClass", "setStylePx", "placeTag", "cls", "targ", "refEl", "placeDiv", "xformCache", "elTrans", "xPos", "yPos", "xMax", "yMax", "xform", "xformOld", "colorCache", "elColor", "background", "borderColor", "newColor", "oldColor", "sizeCache", "elSize", "newWid", "newHgt", "centered", "newSize", "oldSize", "evOpts", "evOpts2", "ev", "cb", "capt", "closestIdx", "arr", "lo", "hi", "mid", "bitwise", "floor", "nonNullIdx", "_i0", "_i1", "dir", "getMinMax", "sorted", "_min", "inf", "_max", "getMinMaxLog", "rangeLog", "base", "fullMags", "minSign", "sign", "maxSign", "logFn", "log10", "log2", "growMinAbs", "ceil", "growMaxAbs", "minExp", "abs", "maxExp", "minIncr", "pow", "maxIncr", "roundDec", "incrRoundDn", "incrRoundUp", "rangeAsinh", "minMax", "rangePad", "autoRangePart", "_eqRangePart", "_eqRange", "rangeNum", "mult", "extra", "isObj", "_rangeNum", "ifNull", "lh", "rh", "hasData", "idx0", "idx1", "cfg", "cmin", "cmax", "padMin", "padMax", "hardMin", "hardMax", "softMin", "softMax", "softMinMode", "softMaxMode", "delta", "deltaMag", "scalarMax", "scalarMag", "scalarMagDelta", "nonZeroDelta", "mag", "_padMin", "_newMin", "_softMin", "minLim", "_padMax", "_newMax", "_softMax", "maxLim", "numFormatter", "fmtNum", "M", "PI", "round", "sinh", "linthresh", "asinh", "numIntDigits", "clamp", "fnOrSelf", "noop", "retArg0", "_0", "retArg1", "_1", "retNull", "retTrue", "retEq", "fixFloat", "incrRound", "incr", "dec", "isInt", "p", "n", "fixedDec", "guessDec", "genIncrs", "mults", "incrs", "multDec", "exp", "expa", "_incr", "EMPTY_OBJ", "EMPTY_ARR", "nullNullTuple", "isArr", "isUndef", "isStr", "is", "fastIsObj", "TypedArray", "copy", "o", "_isObj", "out", "k", "assign", "src", "NULL_REMOVE", "NULL_RETAIN", "NULL_EXPAND", "nullExpand", "yVals", "nullIdxs", "alignedLen", "xi", "lastNullIdx", "nullIdx", "join", "tables", "nullModes", "allHeadersSame", "table", "isAsc", "sortCols", "xVals", "ti", "xs", "len", "xIdxs", "si", "ys", "nullMode", "yVal", "alignedIdx", "microTask", "head", "rlen", "idxs", "i0", "i1", "table2", "row2", "j", "vals0", "len0", "vals1", "vals", "samples", "firstIdx", "lastIdx", "stride", "prevVal", "months", "days", "slice3", "str", "days3", "months3", "engNames", "zeroPad2", "zeroPad3", "subs", "d", "names", "h", "fmtDate", "tpl", "parts", "R", "localTz", "tzDate", "date", "tz", "date2", "onlyWhole", "allMults", "decIncrs", "oneIncrs", "wholeIncrs", "numIncrs", "NL", "yyyy", "NLyyyy", "md", "NLmd", "NLmdyy", "aa", "hmm", "hmmaa", "NLhmmaa", "ss", "genTimeStuffs", "ms", "mo", "timeIncrs", "_timeAxisStamps", "timeAxisSplits", "scaleMin", "scaleMax", "foundIncr", "foundSpace", "splits", "isYr", "isMo", "minDate", "minDateTs", "minMin", "mkDate", "minMinTs", "moIncr", "yrIncr", "split", "splitDate", "baseYear", "baseMonth", "next", "offs", "incr0", "tzOffset", "date0", "prevHour", "incrHours", "minSpace", "pctSpace", "expectedHour", "dstShift", "prevSplit", "timeIncrsMs", "_timeAxisStampsMs", "timeAxisSplitsMs", "timeIncrsS", "_timeAxisStampsS", "timeAxisSplitsS", "timeAxisStamps", "stampCfg", "timeAxisVals", "stamps", "prevYear", "prevMnth", "prevDate", "prevMins", "prevSecs", "newYear", "newMnth", "newDate", "newHour", "newMins", "newSecs", "stamp", "timeAxisVal", "dateTpl", "timeSeriesStamp", "_timeSeriesStamp", "timeSeriesVal", "dataIdx", "legendStroke", "legendFill", "legendOpts", "cursorPointShow", "mar", "width", "cursorPointFill", "sp", "cursorPointStroke", "cursorPointSize", "cursorIdx", "moveTuple", "cursorMove", "mouseLeft1", "mouseTop1", "filtBtn0", "handle", "onlyTarg", "filtTarg", "cursorOpts", "axisLines", "grid", "ticks", "border", "font", "labelFont", "lineGap", "xAxisOpts", "numSeriesLabel", "timeSeriesLabel", "xSeriesOpts", "numAxisVals", "numAxisSplits", "forceMin", "numDec", "logAxisSplits", "logBase", "asinhAxisSplits", "posSplits", "zero", "RE_ALL", "RE_12357", "RE_125", "RE_1", "_filt", "distr", "re", "keepMod", "log10AxisValsFilt", "scaleKey", "sc", "valToPos", "_10", "magSpace", "log2AxisValsFilt", "numSeriesVal", "yAxisOpts", "ptDia", "dia", "seriesPointsShow", "xData", "p0", "p1", "dim", "maxPts", "facet", "gaps", "nullGaps", "xySeriesOpts", "ySeriesOpts", "clampScale", "xScaleOpts", "yScaleOpts", "syncs", "_sync", "plot", "w", "BAND_CLIP_FILL", "BAND_CLIP_STROKE", "orient", "mode", "scales", "bbox", "dx", "dy", "sx", "sy", "H", "V", "moveToH", "lineToH", "rectH", "arcH", "bezierCurveToH", "moveToV", "lineToV", "rectV", "arcV", "bezierCurveToV", "bandFillClipDirs", "fillDir", "clipDirs", "bands", "seriesFillTo", "dataMin", "dataMax", "bandFillDir", "clipBandLine", "strokePath", "clipDir", "dataX", "dataY", "scaleX", "scaleY", "valToPosX", "valToPosY", "xOff", "yOff", "xDim", "yDim", "pxRound", "lineTo", "frIdx", "toIdx", "x0", "y0", "yLimit", "clip", "clipGaps", "ori", "plotLft", "plotTop", "plotWid", "plotHgt", "rect", "prevGapEnd", "maxStrokeWidth", "addGap", "fromX", "toX", "prevGap", "findGaps", "pixelForX", "align", "fr", "to", "frPx", "toPx", "fri2", "toi2", "pxRoundGen", "pxAlign", "moveTo", "arcTo", "endRad", "baseRad", "startAngle", "endAngle", "bp1x", "bp1y", "bp2x", "bp2y", "p2x", "p2y", "points", "filtIdxs", "arc", "rad", "fill", "lft", "top", "wid", "hgt", "drawPoint", "pi", "_drawAcc", "stroke", "accX", "minY", "maxY", "inY", "outY", "drawAccH", "drawAccV", "linear", "alignGaps", "pixelForY", "drawAcc", "_paths", "drawnAtX", "lftIdx", "rgtIdx", "lftX", "rgtX", "hasGap", "bandClipDir", "fillToVal", "fillToY", "stepped", "ascDesc", "extend", "left", "prevYPos", "firstXPos", "prevXPos", "firstXPosExt", "yVal1", "prevXPosExt", "fillTo", "halfStroke", "startsOffset", "endsOffset", "bars", "extraGap", "ro", "radiusFn", "gapFactor", "maxWidth", "minWidth", "disp", "_each", "dispFills", "dispStrokes", "valRadius", "baseRadius", "_dirX", "_dirY", "each", "y0Pos", "xShift", "barWid", "strokeWidth", "multiPath", "fillColors", "fillPaths", "strokeColors", "strokePaths", "bandClipNulls", "pct", "sizes", "colWid", "prevIdx", "minDelta", "gapWid", "band", "dataY0", "radVal", "radBase", "xVal", "btm", "barHgt", "rv", "rb", "splineInterp", "interp", "bezierCurveTo", "xCoords", "yCoords", "monotoneCubic", "_monotoneCubic", "path", "ds", "dys", "dxs", "cursorPlots", "invalidateRects", "uPlot", "linearPath", "pointsPath", "setDefaults", "xo", "yo", "initY", "setDefault", "setDefaults2", "xyo", "snapNumX", "snapTimeX", "snapNumY", "snapLogY", "snapLogX", "snapAsinhY", "snapAsinhX", "findIncr", "minVal", "maxVal", "intDigits", "incrIdx", "pxRatioFont", "fontSize", "fontSizeCss", "syncFontSize", "f", "then", "getValPct", "getHPos", "getVPos", "getPos", "ready", "root", "can", "wrap", "mouseLeft0", "mouseTop0", "drag", "under", "axes", "xScaleKey", "drawOrderMap", "drawAxesGrid", "drawSeries", "drawOrder", "initScale", "scaleOpts", "isTime", "rn", "rangeIsArr", "xScaleDistr", "pendScales", "_tzDate", "ts", "_fmtDate", "_timeAxisSplits", "_timeAxisVals", "_timeSeriesVal", "activeIdxs", "legend", "showLegend", "markers", "legendTable", "legendHead", "legendBody", "legendRows", "legendCells", "legendCols", "multiValLegend", "NULL_LEGEND_VALUES", "getMultiVals", "son", "soff", "initLegendRow", "cells", "label", "indic", "text", "onMouse", "cursor", "setCursorEvent", "isolate", "setSeries", "syncOpts", "cursorFocus", "FOCUS_TRUE", "mouseListeners", "targListeners", "listener", "offMouse", "fullWidCss", "fullHgtCss", "plotWidCss", "plotHgtCss", "plotLftCss", "plotTopCss", "shouldSetScales", "shouldSetSize", "shouldConvergeSize", "shouldSetCursor", "shouldSetSelect", "shouldSetLegend", "_setSize", "height", "force", "calcSize", "resetYSeries", "commit", "calcPlotRect", "calcAxesRects", "bb", "CYCLE_LIMIT", "convergeSize", "converged", "cycleNum", "axesConverged", "axesCalc", "paddingConverged", "paddingCalc", "setSize", "hasTopAxis", "hasBtmAxis", "hasRgtAxis", "hasLftAxis", "side", "_size", "isVt", "fullSize", "sidesWithAxes", "_padding", "off1", "off2", "off3", "off0", "incrOffset", "cursorPts", "initCursorPt", "initSeries", "sv", "_ptDia", "rowCells", "fire", "addSeries", "delSeries", "tr", "initAxis", "av", "autoPadSide", "padding", "dataLen", "data0", "viaAutoScaleX", "setData", "_data", "_resetScales", "xsc", "autoScaleX", "_setScale", "ctxStroke", "ctxFill", "ctxWidth", "ctxDash", "ctxJoin", "ctxCap", "ctxFont", "ctxAlign", "ctxBaseline", "ctxAlpha", "setCtxStyle", "dash", "cap", "setFontStyle", "baseline", "accScale", "wsc", "psc", "setScales", "wipScales", "xFacet", "yFacet", "yScaleKey", "yData", "changed", "anyChanged", "getOuterIdxs", "ydata", "cacheStrokeFill", "_idxs", "drawPath", "_gaps", "_points", "gapsClip", "flags", "strokeStyle", "fillStyle", "boundsClip", "offset", "_pxAlign", "strokeFill", "fillStroke", "lineWidth", "lineDash", "lineCap", "fillPath", "didStrokeFill", "bi", "lowerEdge", "lowerData", "bandClip", "gapsClip2", "_fillStyle", "CLIP_FILL_STROKE", "doFill", "doStroke", "getIncrSpace", "fullDim", "incrSpace", "drawOrthoLines", "filts", "pos0", "pos1", "_space", "_splits", "_p", "shiftDir", "shiftAmt", "baseLpos", "plotDim", "plotOff", "axisGap", "tickSize", "angle", "basePos", "finalPos", "textAlign", "textBaseline", "lineHeight", "canOffs", "_values", "_parts", "queuedCommit", "_commit", "_el", "_show", "_pos", "posOffset", "syncRect", "select", "setSelect", "updateCursor", "setLegend", "rebuildPaths", "recalcAxes", "setScale", "xCursor", "yCursor", "vCursor", "hCursor", "rawMouseLeft0", "rawMouseTop0", "rawMouseLeft1", "rawMouseTop1", "dragging", "dragX", "dragY", "selectDiv", "_fire", "_hideProps", "toggleDOM", "onOff", "_pub", "setFocus", "pubSync", "setBand", "addBand", "delBand", "setAlpha", "closestDist", "closestSeries", "focusedSeries", "allFocused", "_setAlpha", "i2", "isFocused", "posToVal", "pos", "closestIdxFromXpos", "batch", "setSelH", "setSelV", "setSelX", "setSelY", "syncLegend", "didx", "sidx", "setLegendValues", "noDataInRange", "mouseXPos", "valAtPosX", "idx2", "yVal2", "xPos2", "dist", "bias", "mouseYPos", "mouseYVal", "seriesYValSign", "mouseYValSign", "hPos", "vPos", "ptWid", "ptHgt", "ptLft", "ptTop", "getBBox", "xKey", "yKey", "matchXKeys", "matchYKeys", "xKeySrc", "yKeySrc", "sdrag", "sori", "sPosToVal", "sOff", "sDim", "matchingX", "matchingY", "hideSelect", "rawDX", "rawDY", "_rawDX", "uni", "syncKey", "xSyncKey", "ySyncKey", "shouldPub", "defer", "mouseMove", "_l", "_t", "_w", "_h", "_i", "cacheMouse", "initial", "snap", "syncOptsSrc", "xValSrc", "yValSrc", "rotSrc", "_xDim", "_yDim", "_xPos", "_yPos", "__l", "downSelectLeft", "downSelectTop", "downSelectWidth", "downSelectHeight", "mouseDown", "mouseUp", "hasSelect", "chgSelect", "mouseLeave", "_dragging", "snapH", "snapV", "snapProx", "dragH", "dragV", "dblClick", "syncPxRatio", "events", "seriesIdxMatcher", "hooks", "evName", "a1", "a2", "srcSeriesIdx", "sync", "pub", "_init", "paths", "LOCALIZATIONS", "locale_default", "locale", "NAMES", "normalizeRect", "placement_default", "initialAnchor", "anchor", "anchorRect", "boundRect", "elemStyle", "primary", "secondary", "secondaryMarginBefore", "secondaryMarginAfter", "secondaryMargin", "secondaryMaxSize", "styledSecondaryMaxSize", "margin", "roomBefore", "roomAfter", "primaryMaxSize", "styledPrimaryMaxSize", "scrollOffset", "boundPrimaryPos", "boundSecondaryPos", "secondaryScrollOffset", "getOptionValue", "option", "escapeHTML", "renderItems", "rows", "rowsMax", "active", "transformed", "renderTooltip", "allTitle", "sectionTitle", "sections", "sectionTitleBody", "scaleBody", "findValue", "source", "snapTo", "cursorSnapToValues", "DEFAULT_TOOLTIP_OPTIONS", "YagrTooltip", "action", "handler", "shouldEmit", "position", "list", "event", "target", "props", "rowsBySections", "serieIndicies", "cursorValue", "valueRender", "dValue", "realY", "yValue", "seriesPrecision", "displayValue", "rowData", "tracking", "activeIndex", "sort", "renderData", "sec", "newOptions", "isClickInsideTooltip", "isClickOnUplotOver", "evt", "startPoint", "from", "click", "strategy", "isPinned", "precision", "pSettings", "YagrTooltipPlugin", "tooltip", "getUplotPlugin", "uPlotPlugin", "reInit", "uPlugin", "tooltip_default", "renderCircle", "strokeColor", "yScale", "cx", "cy", "drawMarkersIfRequired", "spanGaps", "count", "pointsSize", "prev", "nextIdx", "YagrMarkersPlugin", "config", "defaultDotsSize", "drawCircles", "_focus", "pointSize", "markSeries", "uplot", "pathsRenderer", "drawer", "getCommonProperty", "defaultValue", "configureSeries", "rawSeries", "colorFn", "overrideSeriesInUpdate", "dest", "DrawOrderKey", "Scale", "Axis", "getScaleRange", "rangeFn", "niceScale", "offsetScale", "dMin", "dMax", "minRange", "isScaleMinDefined", "niceNum", "scaleConfig", "startFromZero", "endWithZero", "difference", "configureScales", "scalesToMap", "scaleName", "forceMax", "isLogScale", "YAGR_AXIS_TO_UPLOT_AXIS", "AXIS_SIDE_TO_ALIGN", "getAxisPositioning", "getDefaultNumberFormatter", "nullValue", "precisionNum", "suffix", "transformedValue", "match", "getNumericValueFormatter", "axisConfig", "dayTimeFormatter", "dateTimeFormatter", "minuteFormatter", "secondFormatter", "yearFormatter", "getTimeFormatterByRange", "ticksCount", "formatter", "getTimeFormatter", "msm", "rangeMs", "rawValue", "getSplits", "splitsCount", "__", "step", "getAxis", "getRedrawOptionsForAxesUpdate", "updateAxis", "uAxis", "upd", "configureAxes", "getPaddingByAxes", "hasLeftAxis", "hasRightAxis", "MAX_X_SCALE_LINE_OFFSET", "DRAW_MAP", "hasPlotLine", "pl", "HOOKS_MAP", "plotLinesPlugin", "plotLines", "drawIndicies", "hook", "renderPlotLines", "plotLineConfig", "fromValue", "toValue", "scaleCfg", "accent", "pConf", "last", "lastValue", "plugin", "plotLinesToRemove", "additionalPlotLines", "newPlotLines", "additions", "removes", "plotLine", "setIfNotSet", "CreateUplotOptionsMixin", "renderTime", "initTime", "_from", "_to", "timeMultiplier", "reOpt", "plugins", "tooltipInstance", "plotLinesPluginInstance", "pluginInstance", "chart", "cPlugin", "resultingSeriesOptions", "uIdx", "markersPluginInstance", "TransformSeriesMixin", "processingStartTime", "shouldMapNullValues", "stacks", "dataLine", "realSerieIdx", "serieConfigIndex", "serieOptions", "isStacking", "sGroup", "empty", "setLocaleImpl", "setThemeImpl", "themeValue", "classesToRemove", "setAxesImpl", "rest", "xAxis", "setFocusImpl", "lineId", "setVisibleImpl", "updateLegend", "shouldRebuildStacks", "setScalesImpl", "stackingIsChanged", "normalizationIsChanged", "stacking", "newStacking", "isChangingOnlyMinMax", "pMin", "pMax", "pRest", "nMin", "nMax", "nRest", "isChangingXAxis", "isChanged", "oldConfig", "newConfig", "predicate", "oldValue", "newValue", "areSeriesChanged", "mapA", "mapB", "setConfigImpl", "fullUpdate", "isChangedKey", "setSeriesImpl", "timelineOrSeriesOrId", "maybeSeries", "updateId", "useIncremental", "shouldRecalcData", "useFullyRedraw", "shouldUpdateCursror", "matched", "newSeries", "uOpts", "sliceLength", "DynamicUpdatesMixin", "applyMixins", "derivedCtor", "constructors", "inits", "baseCtor", "init", "BatchMixin", "Yagr", "pConfig", "hookName", "done", "colorParser", "processTime", "stage", "error", "mouseOver", "redraw", "YagrCore_default"]
}

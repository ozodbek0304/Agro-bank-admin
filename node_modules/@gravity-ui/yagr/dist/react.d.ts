import * as React from 'react';
import Yagr, { YagrMeta } from './YagrCore';
import type { MinimalValidConfig } from './YagrCore/types';
import type { TooltipHandlerData } from './types';
export interface YagrChartProps {
    /** Chart ID */
    id: string;
    /** Config of chart */
    config: MinimalValidConfig;
    /** Root component class name */
    className?: string;
    /** Update strategy */
    update?: 'dynamic' | 'hard';
    /** Debug data */
    debug?: {
        filename: string;
    };
    onChartInited?: (chart: Yagr, meta: YagrMeta) => void;
    /** Fires after chart has drawn */
    onChartLoad?: (chart: Yagr, meta: YagrMeta) => void;
    /** Fires on every range selection */
    onSelect?: (from: number, to: number) => void;
}
export interface YagrReactRef {
    yagr: () => Yagr | undefined;
    domElement: () => HTMLDivElement | null;
}
declare const _default: React.ForwardRefExoticComponent<YagrChartProps & React.RefAttributes<unknown>>;
export default _default;
interface CustomTooltip {
    onChange: (data: TooltipHandlerData) => void;
}
export declare const useTooltipState: (yagrRef: React.MutableRefObject<YagrReactRef | null>, tooltipRef: React.RefObject<CustomTooltip>) => void;

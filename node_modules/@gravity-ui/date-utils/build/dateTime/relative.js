"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromTo = void 0;
var dateTime_1 = require("./dateTime");
var thresholds = [
    { l: 's', r: 44, d: 'second' },
    { l: 'm', r: 89 },
    { l: 'mm', r: 44, d: 'minute' },
    { l: 'h', r: 89 },
    { l: 'hh', r: 21, d: 'hour' },
    { l: 'd', r: 35 },
    { l: 'dd', r: 25, d: 'day' },
    { l: 'M', r: 45 },
    { l: 'MM', r: 10, d: 'month' },
    { l: 'y', r: 17 },
    { l: 'yy', r: Infinity, d: 'year' },
];
var relObj = {
    future: 'in %s',
    past: '%s ago',
    s: 'a few seconds',
    m: 'a minute',
    mm: '%d minutes',
    h: 'an hour',
    hh: '%d hours',
    d: 'a day',
    dd: '%d days',
    M: 'a month',
    MM: '%d months',
    y: 'a year',
    yy: '%d years',
};
function fromTo(date, input, loc, withoutSuffix, isFrom) {
    if (loc === void 0) { loc = relObj; }
    if (withoutSuffix === void 0) { withoutSuffix = false; }
    if (isFrom === void 0) { isFrom = true; }
    var result = 0;
    var isFuture;
    var out = '';
    for (var i = 0; i < thresholds.length; i += 1) {
        var t = thresholds[i];
        if (t.d) {
            result = isFrom ? date.diff(input, t.d, true) : (0, dateTime_1.dateTime)({ input: input }).diff(date, t.d, true);
        }
        var abs = Math.round(Math.abs(result));
        isFuture = result > 0;
        if (abs <= t.r) {
            if (abs <= 1 && i > 0)
                t = thresholds[i - 1]; // 1 minutes -> a minute, 0 seconds -> 0 second
            var format = loc[t.l];
            if (typeof format === 'string') {
                out = format.replace('%d', "".concat(abs));
            }
            else {
                out = format(abs, withoutSuffix, t.l, isFuture);
            }
            break;
        }
    }
    if (withoutSuffix)
        return out;
    var pastOrFuture = isFuture ? loc.future : loc.past;
    if (typeof pastOrFuture === 'function') {
        return pastOrFuture(out);
    }
    return pastOrFuture.replace('%s', out);
}
exports.fromTo = fromTo;

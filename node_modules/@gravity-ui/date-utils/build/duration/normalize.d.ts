import type { DurationValues } from './duration';
export declare const orderedUnits: readonly ["years", "quarters", "months", "weeks", "days", "hours", "minutes", "seconds", "milliseconds"];
export declare function normalizeValues(values: DurationValues, { roundUp }?: {
    roundUp?: boolean;
}): Partial<Record<"years" | "quarters" | "months" | "weeks" | "days" | "hours" | "minutes" | "seconds" | "milliseconds", number>>;
export declare function removeZeros<T extends Record<string, number>>(values: Partial<T>): Partial<T>;
export declare function shiftTo(values: DurationValues, units: (keyof DurationValues)[], options?: {
    roundUp?: boolean;
}): Partial<Record<"years" | "quarters" | "months" | "weeks" | "days" | "hours" | "minutes" | "seconds" | "milliseconds", number>>;
export declare function rescale(values: DurationValues, options?: {
    roundUp?: boolean;
}): DurationValues;

import type { DateTime, DateTimeOptionsWhenParsing, DateTimeParser } from '../typings';
export declare function isLikeRelative(text: unknown): text is string;
/**
 * Parses a number, text or Date to a DateTime value. If a timeZone is supplied the incoming value
 * is parsed with that timeZone as a base.
 *
 * It can also parse the relative date and time format, e.g. now-6h will be parsed as Date.now() - 6 hours and
 * returned as a valid DateTime value.
 *
 * If no options are supplied, then default values are used. For more details please see DateTimeOptionsWhenParsing.
 *
 * @param input - should be a parsable date and time input.
 * @param options
 */
export declare const dateTimeParse: DateTimeParser<DateTimeOptionsWhenParsing>;
/**
 * Checks if value is a valid date which in this context means that it is either
 * a DateTime instance or it can be parsed by parse function.
 * @param value value to parse.
 */
export declare function isValid(value?: string | DateTime): boolean;

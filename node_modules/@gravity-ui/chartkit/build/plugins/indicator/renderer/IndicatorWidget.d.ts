import React from 'react';
import type { ChartKitWidgetRef } from '../../../types';
import './IndicatorWidget.css';
declare const IndicatorWidget: React.ForwardRefExoticComponent<{
    type: "indicator";
    data: import("..").IndicatorWidgetData;
    id?: string | undefined;
    isMobile?: boolean | undefined;
    onLoad?: ((data?: import("../../../types").ChartKitOnLoadData<"indicator"> | undefined) => void) | undefined;
    onRender?: ((data: import("../../../types").ChartKitOnRenderData) => void) | undefined;
    onChartLoad?: ((data: import("../../../types").ChartKitOnChartLoad<"indicator">) => void) | undefined;
    onError?: import("../../../types").ChartKitOnError | undefined;
    renderError?: import("../../../types").RenderError | undefined;
    renderPluginLoader?: import("../../../types").ChartKitRenderPluginLoader | undefined;
} & {
    formatNumber?: (<T = any>(value: number, options?: T | undefined) => string) | undefined;
} & React.RefAttributes<ChartKitWidgetRef | undefined>>;
export default IndicatorWidget;

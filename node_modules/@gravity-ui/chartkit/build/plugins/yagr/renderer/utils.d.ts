import type { MinimalValidConfig, Yagr, YagrChartOptions, YagrTheme, YagrWidgetData } from '../types';
type ShapeYagrConfigArgs = {
    data: YagrWidgetData['data'];
    libraryConfig: YagrWidgetData['libraryConfig'];
    theme: YagrTheme;
    customTooltip?: boolean;
};
export declare const synchronizeTooltipTablesCellsWidth: (tooltipContainer: HTMLElement) => void;
export declare const checkFocus: (args: {
    tooltip: HTMLElement;
    yagr?: Yagr;
}) => (event: MouseEvent) => void;
export declare const detectClickOutside: (args: {
    tooltip: HTMLElement;
    actions: {
        pin: (state: boolean) => void;
        hide: () => void;
    };
    yagr?: Yagr<MinimalValidConfig> | undefined;
}) => (event: MouseEvent) => void;
/**
 * This function needs to align timezone that uplot is processing.
 * Uplot uses simple new Date() when [processing ticks](https://github.com/leeoniya/uPlot/blob/master/src/opts.js#L177) on axis.
 * It leads that timestamp will be converted to user browser timezone.
 * In this function we artificially add shift diff between browser timezone and user timeozne to reset new Date() affects.
 */
export declare const getUplotTimezoneAligner: (chart?: YagrChartOptions, timeZone?: string) => (ts: number) => Date;
export declare const shapeYagrConfig: (args: ShapeYagrConfigArgs) => MinimalValidConfig;
export {};

import { NavigatorLinesMode } from '../../constants';
import { getXAxisThresholdValue } from './getXAxisThresholdValue';
export const addShowInNavigatorToSeries = ({ linesMode, graphs, baseSeriesName, params, selectedLines, }) => {
    if (linesMode === NavigatorLinesMode.All) {
        graphs.forEach((item) => {
            item.showInNavigator = true;
        });
    }
    else {
        const mergedLines = [...selectedLines];
        if (baseSeriesName) {
            mergedLines.push(baseSeriesName);
        }
        if (mergedLines.length) {
            graphs.forEach((item) => {
                const itemName = item.sname || item.name || item.title;
                if (typeof item.showInNavigator === 'undefined') {
                    item.showInNavigator = mergedLines.includes(itemName);
                }
            });
        }
        else {
            graphs.forEach((item) => {
                item.showInNavigator = false;
            });
            const xMinValue = getXAxisThresholdValue(graphs, 'min');
            const xMaxValue = getXAxisThresholdValue(graphs, 'max');
            const navigatorParams = Object.assign({}, params.navigator) || {};
            if (navigatorParams.xAxis) {
                navigatorParams.xAxis.min = xMinValue;
                navigatorParams.xAxis.max = xMaxValue;
            }
            else {
                navigatorParams.xAxis = {
                    min: xMinValue,
                    max: xMaxValue,
                };
            }
            params.navigator = navigatorParams;
        }
    }
};

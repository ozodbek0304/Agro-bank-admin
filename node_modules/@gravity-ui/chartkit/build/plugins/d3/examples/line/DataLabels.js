import React from 'react';
import { dateTime } from '@gravity-ui/date-utils';
import { ChartKit } from '../../../../components/ChartKit';
import { ExampleWrapper } from '../ExampleWrapper';
import nintendoGames from '../nintendoGames';
function prepareData() {
    const games = nintendoGames.filter((d) => {
        return d.date && d.user_score;
    });
    const byGenre = (genre) => {
        return games
            .filter((d) => d.genres.includes(genre))
            .map((d) => {
            return {
                x: d.date,
                y: d.user_score,
                label: `${d.title} (${d.user_score})`,
                custom: d,
            };
        });
    };
    return [
        {
            name: 'Strategy',
            type: 'line',
            data: byGenre('Strategy'),
            dataLabels: {
                enabled: true,
            },
        },
        {
            name: 'Shooter',
            type: 'line',
            data: byGenre('Shooter'),
            dataLabels: {
                enabled: true,
            },
        },
    ];
}
export const DataLabels = () => {
    const series = prepareData();
    const widgetData = {
        series: {
            data: series.map((s) => ({
                type: 'line',
                data: s.data.filter((d) => d.x),
                name: s.name,
                dataLabels: {
                    enabled: true,
                },
            })),
        },
        yAxis: [
            {
                title: {
                    text: 'User score',
                },
            },
        ],
        xAxis: {
            type: 'datetime',
            title: {
                text: 'Release dates',
            },
            ticks: { pixelInterval: 200 },
        },
        tooltip: {
            renderer: (d) => {
                var _a;
                const point = (_a = d.hovered[0]) === null || _a === void 0 ? void 0 : _a.data;
                if (!point) {
                    return null;
                }
                const title = point.custom.title;
                const score = point.custom.user_score;
                const date = dateTime({ input: point.custom.date }).format('DD MMM YYYY');
                return (React.createElement(React.Fragment, null,
                    React.createElement("b", null, title),
                    React.createElement("br", null),
                    "Release date: ",
                    date,
                    React.createElement("br", null),
                    "User score: ",
                    score));
            },
        },
    };
    return (React.createElement(ExampleWrapper, null,
        React.createElement(ChartKit, { type: "d3", data: widgetData })));
};

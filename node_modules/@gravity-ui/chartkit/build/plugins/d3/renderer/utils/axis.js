import { wrapText } from './text';
export function getTicksCount({ axis, range }) {
    let ticksCount;
    if (axis.ticks.pixelInterval) {
        ticksCount = Math.ceil(range / axis.ticks.pixelInterval);
    }
    return ticksCount;
}
export function isBandScale(scale) {
    return 'bandwidth' in scale && typeof scale.bandwidth === 'function';
}
export function getScaleTicks(scale, ticksCount) {
    return 'ticks' in scale && typeof scale.ticks === 'function'
        ? scale.ticks(ticksCount)
        : scale.domain();
}
export function getXAxisOffset() {
    return typeof window !== 'undefined' && window.devicePixelRatio > 1 ? 0 : 0.5;
}
function number(scale) {
    return (d) => Number(scale(d));
}
function center(scale, offset) {
    offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;
    if (scale.round()) {
        offset = Math.round(offset);
    }
    return (d) => Number(scale(d)) + offset;
}
export function getXTickPosition({ scale, offset }) {
    return isBandScale(scale) ? center(scale.copy(), offset) : number(scale.copy());
}
export function getXAxisItems({ scale, count, maxCount, }) {
    let values = getScaleTicks(scale, count);
    if (values.length > maxCount) {
        const step = Math.ceil(values.length / maxCount);
        values = values.filter((_, i) => i % step === 0);
    }
    return values;
}
export function getMaxTickCount({ axis, width }) {
    const minTickWidth = parseInt(axis.labels.style.fontSize) + axis.labels.padding;
    return Math.floor(width / minTickWidth);
}
export function getAxisHeight(args) {
    const { split, boundsHeight } = args;
    if (split.plots.length > 1) {
        return split.plots[0].height;
    }
    return boundsHeight;
}
export function getAxisTitleRows(args) {
    const { axis, textMaxWidth } = args;
    if (axis.title.maxRowCount < 1) {
        return [];
    }
    const textRows = wrapText({
        text: axis.title.text,
        style: axis.title.style,
        width: textMaxWidth,
    });
    return textRows.reduce((acc, row, index) => {
        if (index < axis.title.maxRowCount) {
            acc.push(row);
        }
        else {
            acc[axis.title.maxRowCount - 1].text += row.text;
        }
        return acc;
    }, []);
}

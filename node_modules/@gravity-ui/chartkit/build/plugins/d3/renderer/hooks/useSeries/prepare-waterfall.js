import get from 'lodash/get';
import { getRandomCKId } from '../../../../../utils';
import { DEFAULT_PALETTE } from '../../constants';
import { DEFAULT_DATALABELS_PADDING, DEFAULT_DATALABELS_STYLE } from './constants';
import { prepareLegendSymbol } from './utils';
export function prepareWaterfallSeries(args) {
    const { colorScale, series: seriesList, legend } = args;
    const [, negativeColor, positiveColor] = DEFAULT_PALETTE;
    return seriesList.map((series) => {
        var _a, _b, _c;
        const name = series.name || '';
        const color = series.color || colorScale(name);
        const prepared = {
            type: series.type,
            color,
            positiveColor: positiveColor,
            negativeColor: negativeColor,
            name,
            id: getRandomCKId(),
            visible: get(series, 'visible', true),
            legend: {
                enabled: get(series, 'legend.enabled', legend.enabled),
                symbol: prepareLegendSymbol(series),
            },
            data: series.data,
            dataLabels: {
                enabled: ((_a = series.dataLabels) === null || _a === void 0 ? void 0 : _a.enabled) || false,
                style: Object.assign({}, DEFAULT_DATALABELS_STYLE, (_b = series.dataLabels) === null || _b === void 0 ? void 0 : _b.style),
                allowOverlap: ((_c = series.dataLabels) === null || _c === void 0 ? void 0 : _c.allowOverlap) || false,
                padding: get(series, 'dataLabels.padding', DEFAULT_DATALABELS_PADDING),
            },
            cursor: get(series, 'cursor', null),
        };
        return prepared;
    }, []);
}

export const getBoundsWidth = (args) => {
    const { chartWidth, chartMargin, preparedYAxis } = args;
    return (chartWidth -
        chartMargin.right -
        chartMargin.left -
        getWidthOccupiedByYAxis({ preparedAxis: preparedYAxis }));
};
export function getYAxisWidth(axis) {
    let result = 0;
    if (axis === null || axis === void 0 ? void 0 : axis.title.text) {
        result += axis.title.height + axis.title.margin;
    }
    if (axis === null || axis === void 0 ? void 0 : axis.labels.enabled) {
        result += axis.labels.margin + axis.labels.width;
    }
    return result;
}
export function getWidthOccupiedByYAxis(args) {
    const { preparedAxis } = args;
    let leftAxisWidth = 0;
    let rightAxisWidth = 0;
    preparedAxis === null || preparedAxis === void 0 ? void 0 : preparedAxis.forEach((axis) => {
        const axisWidth = getYAxisWidth(axis);
        if (axis.position === 'right') {
            rightAxisWidth = Math.max(rightAxisWidth, axisWidth);
        }
        else {
            leftAxisWidth = Math.max(leftAxisWidth, axisWidth);
        }
    });
    return leftAxisWidth + rightAxisWidth;
}

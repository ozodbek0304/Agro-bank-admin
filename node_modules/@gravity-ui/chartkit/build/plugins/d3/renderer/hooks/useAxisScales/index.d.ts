import type { ScaleBand, ScaleLinear, ScaleTime } from 'd3';
import { ChartKitWidgetAxis, ChartKitWidgetSeries } from '../../../../../types';
import type { PreparedAxis } from '../useChartOptions/types';
import type { PreparedSeries } from '../useSeries/types';
import type { PreparedSplit } from '../useSplit/types';
export type ChartScale = ScaleLinear<number, number> | ScaleBand<string> | ScaleTime<number, number>;
type Args = {
    boundsWidth: number;
    boundsHeight: number;
    series: PreparedSeries[];
    xAxis: PreparedAxis;
    yAxis: PreparedAxis[];
    split: PreparedSplit;
};
type ReturnValue = {
    xScale?: ChartScale;
    yScale?: ChartScale[];
};
export declare function createYScale(axis: PreparedAxis, series: PreparedSeries[], boundsHeight: number): ScaleBand<string> | ScaleLinear<number, number, never> | ScaleTime<number, number, never>;
export declare function createXScale(axis: PreparedAxis | ChartKitWidgetAxis, series: (PreparedSeries | ChartKitWidgetSeries)[], boundsWidth: number): ScaleBand<string> | ScaleLinear<number, number, never> | ScaleTime<number, number, never>;
/**
 * Uses to create scales for axis related series
 */
export declare const useAxisScales: (args: Args) => ReturnValue;
export {};

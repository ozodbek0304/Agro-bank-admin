import { __rest } from "tslib";
import React from 'react';
import { Loader as BaseLoader } from '@gravity-ui/uikit';
import { block } from '../../utils/cn';
import './Loader.css';
const b = block('loader');
export const Loader = (_a) => {
    var { renderPluginLoader } = _a, props = __rest(_a, ["renderPluginLoader"]);
    const pluginLoader = renderPluginLoader === null || renderPluginLoader === void 0 ? void 0 : renderPluginLoader();
    // React.Suspense complains about possible undefined in "fallback" property
    if (typeof pluginLoader !== 'undefined') {
        return pluginLoader;
    }
    return (React.createElement("div", { className: b() },
        React.createElement(BaseLoader, Object.assign({}, props))));
};

import { configure } from '@gravity-ui/uikit';
import get from 'lodash/get';
import mergeWith from 'lodash/mergeWith';
import { i18nFactory } from '../../i18n';
import { EventEmitter } from './eventEmitter';
import { mergeSettingStrategy } from './mergeSettingStrategy';
export const settingsEventEmitter = new EventEmitter();
const removeUndefinedValues = (data) => {
    return Object.entries(data).reduce((acc, [key, value]) => {
        if (typeof value !== 'undefined') {
            acc[key] = value;
        }
        return acc;
    }, {});
};
const updateLang = (lang) => {
    configure({ lang });
    i18nFactory.setLang(lang);
};
class ChartKitSettings {
    constructor() {
        this.settings = {
            plugins: [],
            lang: 'en',
        };
        updateLang(this.get('lang'));
    }
    get(key) {
        return get(this.settings, key);
    }
    set(updates) {
        const filteredUpdates = removeUndefinedValues(updates);
        this.settings = mergeWith(this.settings, filteredUpdates, mergeSettingStrategy);
        if (filteredUpdates.lang) {
            const lang = filteredUpdates.lang || this.get('lang');
            updateLang(lang);
            settingsEventEmitter.dispatch('change-lang', lang);
        }
    }
}
export const settings = new ChartKitSettings();
